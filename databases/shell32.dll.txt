BOOL Shell_GetImageLists(HIMAGELIST * phiml, HIMAGELIST * phimlSmall)
void DragAcceptFiles(HWND hWnd, BOOL fAccept)
HRESULT SHDefExtractIconW(LPCWSTR pszIconFile, int iIndex, UINT uFlags, HICON * phiconLarge, HICON * phiconSmall, UINT nIconSize)
UINT Shell_MergeMenus(HMENU hmDst, HMENU hmSrc, UINT uInsert, UINT uIDAdjust, UINT uIDAdjustMax, ULONG uFlags)
BOOL Shell_NotifyIconW(DWORD dwMessage, PNOTIFYICONDATAW lpData)
DWORD SHRestricted(RESTRICTIONS rest)
void SHGetSetSettings(LPSHELLSTATEA lpss, DWORD dwMask, BOOL bSet)
UINT ExtractIconExW(LPCWSTR lpszFile, int nIconIndex, HICON * phiconLarge, HICON * phiconSmall, UINT nIcons)
HICON DuplicateIcon(HINSTANCE hInst, HICON hIcon)
ULONG SHChangeNotifyRegister(HWND hwnd, int fSources, LONG fEvents, UINT wMsg, int cEntries, SHChangeNotifyEntry * pshcne)
HRESULT DllCanUnloadNow(void)
void SHChangeNotify(LONG wEventId, UINT uFlags, LPCVOID dwItem1, LPCVOID dwItem2)
BOOL SHTestTokenMembership(HANDLE hToken, ULONG ulRID)
LPITEMIDLIST SHCloneSpecialIDList(HWND hwnd, int csidl, BOOL fCreate)
BOOL Ordinal_175(HWND hwnd, LPWSTR pszPath, int csidl, BOOL fCreate)
void SHFree(LPVOID pv)
BOOL SHChangeNotifyDeregister(ulong ulID)
BOOL IsUserAnAdmin(void)
HLOCAL LocalFree(HLOCAL hMem)
HANDLE CreateFileW(LPCWSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile)
BOOL CloseHandle(HANDLE hObject)
HRSRC FindResourceW(HMODULE hModule, LPCWSTR lpName, LPCWSTR lpType)
HGLOBAL LoadResource(HMODULE hModule, HRSRC hResInfo)
LPVOID LockResource(HGLOBAL hResData)
int MultiByteToWideChar(UINT CodePage, DWORD dwFlags, LPCSTR lpMultiByteStr, int cbMultiByte, LPWSTR lpWideCharStr, int cchWideChar)
DWORD GetLastError(void)
BOOL DeleteFileW(LPCWSTR lpFileName)
BOOL SetFileAttributesW(LPCWSTR lpFileName, DWORD dwFileAttributes)
BOOL RemoveDirectoryW(LPCWSTR lpPathName)
BOOL WriteFile(HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, LPDWORD lpNumberOfBytesWritten, LPOVERLAPPED lpOverlapped)
HMODULE LoadLibraryW(LPCWSTR lpLibFileName)
BOOL EnumResourceNamesExW(HMODULE hModule, LPCWSTR lpType, ENUMRESNAMEPROCW lpEnumFunc, LONG_PTR lParam, DWORD dwFlags, LANGID LangId)
BOOL FreeLibrary(HMODULE hLibModule)
BOOL ReadFile(HANDLE hFile, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead, LPOVERLAPPED lpOverlapped)
BOOL OpenProcessToken(HANDLE ProcessHandle, DWORD DesiredAccess, PHANDLE TokenHandle)
BOOL GetTokenInformation(HANDLE TokenHandle, TOKEN_INFORMATION_CLASS TokenInformationClass, LPVOID TokenInformation, DWORD TokenInformationLength, PDWORD ReturnLength)
BOOL InitOnceExecuteOnce(PINIT_ONCE InitOnce, PINIT_ONCE_FN InitFn, PVOID Parameter, LPVOID * Context)
BOOL HeapFree(HANDLE hHeap, DWORD dwFlags, LPVOID lpMem)
LPVOID CoTaskMemAlloc(SIZE_T cb)
DWORD WaitForSingleObject(HANDLE hHandle, DWORD dwMilliseconds)
DWORD FormatMessageW(DWORD dwFlags, LPCVOID lpSource, DWORD dwMessageId, DWORD dwLanguageId, LPWSTR lpBuffer, DWORD nSize, va_list * Arguments)
LPVOID HeapAlloc(HANDLE hHeap, DWORD dwFlags, SIZE_T dwBytes)
FARPROC GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
DWORD GetCurrentProcessId(void)
HANDLE GetProcessHeap(void)
HRESULT CoCreateInstance(IID * rclsid, LPUNKNOWN pUnkOuter, DWORD dwClsContext, IID * riid, LPVOID * ppv)
HANDLE CreateEventW(LPSECURITY_ATTRIBUTES lpEventAttributes, BOOL bManualReset, BOOL bInitialState, LPCWSTR lpName)
BOOL SetEvent(HANDLE hEvent)
int CompareStringW(LCID Locale, DWORD dwCmpFlags, PCNZWCH lpString1, int cchCount1, PCNZWCH lpString2, int cchCount2)
HRESULT CoGetApartmentType(APTTYPE * pAptType, APTTYPEQUALIFIER * pAptQualifier)
int CompareStringOrdinal(LPCWSTR lpString1, int cchCount1, LPCWSTR lpString2, int cchCount2, BOOL bIgnoreCase)
HANDLE FindFirstFileW(LPCWSTR lpFileName, LPWIN32_FIND_DATAW lpFindFileData)
BOOL FindNextFileW(HANDLE hFindFile, LPWIN32_FIND_DATAW lpFindFileData)
BOOL FindClose(HANDLE hFindFile)
HRESULT CoCreateFreeThreadedMarshaler(LPUNKNOWN punkOuter, LPUNKNOWN * ppunkMarshal)
HMODULE LoadLibraryExW(LPCWSTR lpLibFileName, HANDLE hFile, DWORD dwFlags)
BOOL ProcessIdToSessionId(DWORD dwProcessId, DWORD * pSessionId)
BOOL CreateWellKnownSid(WELL_KNOWN_SID_TYPE WellKnownSidType, PSID DomainSid, PSID pSid, DWORD * cbSid)
BOOL CheckTokenMembership(HANDLE TokenHandle, PSID SidToCheck, PBOOL IsMember)
DWORD SetFilePointer(HANDLE hFile, LONG lDistanceToMove, PLONG lpDistanceToMoveHigh, DWORD dwMoveMethod)
DWORD SizeofResource(HMODULE hModule, HRSRC hResInfo)
BOOL DuplicateToken(HANDLE ExistingTokenHandle, SECURITY_IMPERSONATION_LEVEL ImpersonationLevel, PHANDLE DuplicateTokenHandle)
void CloseThreadpoolWait(PTP_WAIT pwa)
void WaitForThreadpoolWaitCallbacks(PTP_WAIT pwa, BOOL fCancelPendingCallbacks)
void SetThreadpoolWait(PTP_WAIT pwa, HANDLE h, PFILETIME pftTimeout)
PTP_WAIT CreateThreadpoolWait(PTP_WAIT_CALLBACK pfnwa, PVOID pv, PTP_CALLBACK_ENVIRON pcbe)
PSLIST_ENTRY InterlockedPushEntrySList(PSLIST_HEADER ListHead, PSLIST_ENTRY ListEntry)
LPSTR StrChrA(LPCSTR lpStart, WORD wMatch)
LPSTR StrChrIA(LPCSTR lpStart, WORD wMatch)
LPWSTR StrChrIW(LPCWSTR lpStart, WCHAR wMatch)
LPWSTR StrChrW(LPCWSTR lpStart, WCHAR wMatch)
int StrCmpNA(LPCSTR lpStr1, LPCSTR lpStr2, int nChar)
int StrCmpNIA(LPCSTR lpStr1, LPCSTR lpStr2, int nChar)
int StrCmpNIW(LPCWSTR lpStr1, LPCWSTR lpStr2, int nChar)
int StrCmpNW(LPCWSTR lpStr1, LPCWSTR lpStr2, int nChar)
LPSTR StrRChrA(LPCSTR lpStart, LPCSTR lpEnd, WORD wMatch)
LPSTR StrRChrIA(LPCSTR lpStart, LPCSTR lpEnd, WORD wMatch)
LPWSTR StrRChrIW(LPCWSTR lpStart, LPCWSTR lpEnd, WCHAR wMatch)
LPWSTR StrRChrW(LPCWSTR lpStart, LPCWSTR lpEnd, WCHAR wMatch)
LPSTR StrRStrIA(LPCSTR lpSource, LPCSTR lpLast, LPCSTR lpSrch)
LPWSTR StrRStrIW(LPCWSTR lpSource, LPCWSTR lpLast, LPCWSTR lpSrch)
LPSTR StrStrA(LPCSTR lpFirst, LPCSTR lpSrch)
LPSTR StrStrIA(LPCSTR lpFirst, LPCSTR lpSrch)
LPWSTR StrStrIW(LPCWSTR lpFirst, LPCWSTR lpSrch)
LPWSTR StrStrW(LPCWSTR lpFirst, LPCWSTR lpSrch)
int lstrlenW(LPCWSTR lpString)
int StrToIntA(LPCSTR lpSrc)
BOOL PathFileExistsW(LPCWSTR pszPath)
int PathCommonPrefixW(LPCWSTR pszFile1, LPCWSTR pszFile2, LPWSTR achPath)
HRESULT CoGetObjectContext(IID * riid, LPVOID * ppv)
BOOL TrySubmitThreadpoolCallback(PTP_SIMPLE_CALLBACK pfns, PVOID pv, PTP_CALLBACK_ENVIRON pcbe)
HANDLE PifMgr_CloseProperties(HANDLE hProps, UINT flOpt)
int PifMgr_GetProperties(HANDLE hProps, LPCSTR pszGroup, void * lpProps, int cbProps, UINT flOpt)
HANDLE PifMgr_OpenProperties(LPCWSTR pszApp, LPCWSTR pszPIF, UINT hInf, UINT flOpt)
int PifMgr_SetProperties(HANDLE hProps, LPCSTR pszGroup, void * lpProps, int cbProps, UINT flOpt)
BOOL DAD_AutoScroll(HWND hwnd, AUTO_SCROLL_DATA * pad, POINT * pptNow)
BOOL DAD_SetDragImage(HIMAGELIST him, POINT * pptOffset)
BOOL DAD_ShowDragImage(BOOL fShow)
HICON ExtractAssociatedIconW(HINSTANCE hInst, LPWSTR pszIconPath, WORD * piIcon)
UINT ExtractIconEx(LPCSTR lpszFile, int nIconIndex, HICON * phiconLarge, HICON * phiconSmall, UINT nIcons)
HICON ExtractIconW(HINSTANCE hInst, LPCWSTR lpszExeFileName, UINT nIconIndex)
UINT DragQueryFile(HDROP hDrop, UINT iFile, LPSTR lpszFile, UINT cch)
UINT DragQueryFileW(HDROP hDrop, UINT iFile, LPWSTR lpszFile, UINT cch)
LPITEMIDLIST SHSimpleIDListFromPath(LPCWSTR pszPath)
BOOL SHGetDiskFreeSpaceExW(LPCWSTR lpDirectoryName, PULARGE_INTEGER lpFreeBytesAvailableToCaller, PULARGE_INTEGER lpTotalNumberOfBytes, PULARGE_INTEGER lpTotalNumberOfFreeBytes)
BOOL PathIsExe(LPCWSTR pszPath)
BOOL DAD_DragMove(POINT pt)
UINT_PTR SHAppBarMessage(DWORD dwMessage, PAPPBARDATA pData)
BOOL SHGetSpecialFolderPathA(HWND hwnd, LPSTR pszPath, int csidl, BOOL fCreate)
BOOL Shell_NotifyIcon(DWORD dwMessage, PNOTIFYICONDATAA lpData)
LPITEMIDLIST ILCreateFromPath(LPCWSTR pszPath)
int SHGetIconOverlayIndexW(LPCWSTR pszIconPath, int iIconIndex)
BOOL SHELL32_SHGetUserNameW(LPWSTR lpBuffer, LPDWORD pcbBuffer)
void SHGetSettings(SHELLFLAGSTATE * psfs, DWORD dwMask)
HRESULT Shell_NotifyIconGetRect(NOTIFYICONIDENTIFIER * identifier, RECT * iconLocation)
BOOL WriteCabinetState(CABINETSTATE * pcs)
DWORD DoEnvironmentSubstA(LPSTR szString, UINT cchString)
DWORD DoEnvironmentSubstW(LPWSTR szString, UINT cchString)
HICON ExtractAssociatedIconA(HINSTANCE hInst, LPSTR pszIconPath, WORD * piIcon)
HICON ExtractAssociatedIconExA(HINSTANCE hInst, LPSTR pszIconPath, WORD * piIconIndex, WORD * piIconId)
HICON ExtractAssociatedIconExW(HINSTANCE hInst, LPWSTR pszIconPath, WORD * piIconIndex, WORD * piIconId)
HICON ExtractIconA(HINSTANCE hInst, LPCSTR lpszExeFileName, UINT nIconIndex)
int PickIconDlg(HWND hwnd, LPWSTR pszIconPath, UINT cchIconPath, int * piIconIndex)
HGLOBAL DragFinish(HGLOBAL hMem)
BOOL DragQueryPoint(HDROP hDrop, LPPOINT lppt)
void DebugBreak(void)
HINSTANCE ShellExecuteA(HWND hwnd, LPCSTR lpOperation, LPCSTR lpFile, LPCSTR lpParameters, LPCSTR lpDirectory, INT nShowCmd)
BOOL ShellExecuteEx(SHELLEXECUTEINFOA * pExecInfo)
BOOL ShellExecuteExW(SHELLEXECUTEINFOW * pExecInfo)
HINSTANCE ShellExecuteW(HWND hwnd, LPCWSTR lpOperation, LPCWSTR lpFile, LPCWSTR lpParameters, LPCWSTR lpDirectory, INT nShowCmd)
HRESULT PropVariantClear(PROPVARIANT * pvar)
BOOL SHObjectProperties(HWND hwnd, DWORD shopObjectType, PCWSTR pszObjectName, PCWSTR pszPropertyPage)
HRESULT StringCopyWorkerA(STRSAFE_LPSTR pszDest, size_t cchDest, size_t * pcchNewDestLength, STRSAFE_PCNZCH pszSrc, size_t cchToCopy)
BOOL DAD_DragEnterEx(HWND hwndTarget, POINT ptStart)
HRESULT SHEnumerateUnreadMailAccountsW(HKEY hKeyUser, DWORD dwIndex, LPWSTR pszMailAddress, int cchMailAddress)
HRESULT SHGetUnreadMailCountW(HKEY hKeyUser, LPCWSTR pszMailAddress, DWORD * pdwCount, FILETIME * pFileTime, LPWSTR pszShellExecuteCommand, int cchShellExecuteCommand)
HRESULT SHIsFileAvailableOffline(LPCWSTR pwszPath, LPDWORD pdwStatus)
HRESULT SHLoadNonloadedIconOverlayIdentifiers(void)
HRESULT SHSetUnreadMailCountW(LPCWSTR pszMailAddress, DWORD dwCount, LPCWSTR pszShellExecuteCommand)
DWORD SHFormatDrive(HWND hwnd, UINT drive, UINT fmtID, UINT options)
DWORD_PTR SHGetFileInfo(LPCSTR pszPath, DWORD dwFileAttributes, SHFILEINFOA * psfi, UINT cbFileInfo, UINT uFlags)
void PathGetShortPath(LPWSTR pszLongPath)
BOOL PathIsSlowA(LPCSTR pszFile, DWORD dwAttr)
BOOL PathIsSlowW(LPCWSTR pszFile, DWORD dwAttr)
BOOL PathMakeUniqueName(LPWSTR pszUniqueName, UINT cchMax, LPCWSTR pszTemplate, LPCWSTR pszLongPlate, LPCWSTR pszDir)
void PathQualify(LPWSTR psz)
int PathResolve(LPWSTR lpszPath, PZPCWSTR dirs, UINT fFlags)
BOOL PathYetAnotherMakeUniqueName(LPWSTR pszUniqueName, LPCWSTR pszPath, LPCWSTR pszShort, LPCWSTR pszFileSpec)
BOOL DAD_DragEnterEx2(HWND hwndTarget, POINT ptStart, IDataObject * pdtObject)
BOOL DAD_DragLeave(void)
HRESULT SHDoDragDrop(HWND hwnd, IDataObject * pdata, IDropSource * pdsrc, DWORD dwEffect, DWORD * pdwEffect)
int RestartDialog(HWND hwnd, LPCWSTR lpPrompt, DWORD dwReturn)
HRESULT DllInstall(BOOL bInstall, LPCWSTR pszCmdLine)
HRESULT SHLoadInProc(IID * rclsid)
HRESULT SHDefExtractIconA(LPCSTR pszIconFile, int iIndex, UINT uFlags, HICON * phiconLarge, HICON * phiconSmall, UINT nIconSize)
HINSTANCE FindExecutableA(LPCSTR lpFile, LPCSTR lpDirectory, LPSTR lpResult)
HINSTANCE FindExecutableW(LPCWSTR lpFile, LPCWSTR lpDirectory, LPWSTR lpResult)
BOOL SHValidateUNC(HWND hwndOwner, LPWSTR pszFile, UINT fConnect)
BOOL GetFileNameFromBrowse(HWND hwnd, LPWSTR pszFilePath, UINT cchFilePath, LPCWSTR pszWorkingDir, LPCWSTR pszDefExt, LPCWSTR pszFilters, LPCWSTR pszTitle)
LPITEMIDLIST ILAppendID(LPITEMIDLIST pidl, LPCSHITEMID pmkid, BOOL fAppend)
LPITEMIDLIST ILCreateFromPathA(LPCSTR pszPath)
HRESULT SHILCreateFromPath(LPCWSTR pszPath, LPITEMIDLIST * ppidl, DWORD * rgfInOut)
int SHGetIconOverlayIndexA(LPCSTR pszIconPath, int iIconIndex)
HRESULT SHAddDefaultPropertiesByExt(PCWSTR pszExt, IPropertyStore * pPropStore)
HRESULT SHSetDefaultProperties(HWND hwnd, IShellItem * psi, DWORD dwFileOpFlags, IFileOperationProgressSink * pfops)
UINT SHAddFromPropSheetExtArray(HPSXA hpsxa, LPFNADDPROPSHEETPAGE lpfnAddPage, LPARAM lParam)
void SHDestroyPropSheetExtArray(HPSXA hpsxa)
UINT SHReplaceFromPropSheetExtArray(HPSXA hpsxa, UINT uPageID, LPFNADDPROPSHEETPAGE lpfnReplaceWith, LPARAM lParam)
LPITEMIDLIST SHBrowseForFolder(LPBROWSEINFOA lpbi)
LPITEMIDLIST SHBrowseForFolderW(LPBROWSEINFOW lpbi)
LRESULT SHShellFolderView_Message(HWND hwndMain, UINT uMsg, LPARAM lParam)
BOOL SHELL32_GetFileNameFromBrowse(HWND hwnd, LPWSTR pszFilePath, UINT cchFilePath, LPCWSTR pszWorkingDir, LPCWSTR pszDefExt, LPCWSTR pszFilters, LPCWSTR pszTitle)
HRESULT SHStartNetConnectionDialogW(HWND hwnd, LPCWSTR pszRemoteName, DWORD dwType)
BOOL SHOpenPropSheetW(LPCWSTR pszCaption, HKEY * ahkeys, UINT cikeys, CLSID * pclsidDefault, IDataObject * pdtobj, IShellBrowser * psb, LPCWSTR pStartPage)
INT ShellAboutA(HWND hWnd, LPCSTR szApp, LPCSTR szOtherStuff, HICON hIcon)
INT ShellAboutW(HWND hWnd, LPCWSTR szApp, LPCWSTR szOtherStuff, HICON hIcon)
int StrCmpICW(LPCWSTR pszStr1, LPCWSTR pszStr2)