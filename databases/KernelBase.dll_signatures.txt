LPWSTR fastcall StrRStrIW(LPCWSTR lpSource, LPCWSTR lpLast, LPCWSTR lpSrch)
DWORD fastcall GetModuleFileNameExA(HANDLE hProcess, HMODULE hModule, LPSTR lpFilename, DWORD nSize)
BOOL fastcall IsDBCSLeadByteEx(UINT CodePage, BYTE TestChar)
HRESULT fastcall GetAcceptLanguagesA(LPSTR psz, DWORD * pcch)
int fastcall GetNumberFormatW(LCID Locale, DWORD dwFlags, LPCWSTR lpValue, NUMBERFMTW * lpFormat, LPWSTR lpNumberStr, int cchNumber)
LSTATUS fastcall SHRegSetUSValueW(LPCWSTR pwzSubKey, LPCWSTR pwzValue, DWORD dwType, void * pvData, DWORD cbData, DWORD dwFlags)
BOOL fastcall EqualPrefixSid(PSID pSid1, PSID pSid2)
BOOL fastcall PathQuoteSpacesW(LPWSTR lpsz)
UINT fastcall PathGetCharTypeW(WCHAR ch)
BOOL fastcall SetStdHandle(DWORD nStdHandle, HANDLE hHandle)
DWORD fastcall GetModuleBaseNameA(HANDLE hProcess, HMODULE hModule, LPSTR lpBaseName, DWORD nSize)
BOOL fastcall EnumSystemLocalesEx(LOCALE_ENUMPROCEX lpLocaleEnumProcEx, DWORD dwFlags, LPARAM lParam, LPVOID lpReserved)
LSTATUS fastcall RegDeleteKeyValueA(HKEY hKey, LPCSTR lpSubKey, LPCSTR lpValueName)
LSTATUS fastcall SHRegGetUSValueA(LPCSTR pszSubKey, LPCSTR pszValue, DWORD * pdwType, void * pvData, DWORD * pcbData, BOOL fIgnoreHKCU, void * pvDefaultData, DWORD dwDefaultDataSize)
LSTATUS fastcall SHRegOpenUSKeyA(LPCSTR pszPath, REGSAM samDesired, HUSKEY hRelativeUSKey, PHUSKEY phNewUSKey, BOOL fIgnoreHKCU)
BOOL fastcall SHRegGetBoolUSValueW(LPCWSTR pszSubKey, LPCWSTR pszValue, BOOL fIgnoreHKCU, BOOL fDefault)
int fastcall StrCmpICW(LPCWSTR pszStr1, LPCWSTR pszStr2)
LSTATUS fastcall SHRegGetUSValueW(LPCWSTR pszSubKey, LPCWSTR pszValue, DWORD * pdwType, void * pvData, DWORD * pcbData, BOOL fIgnoreHKCU, void * pvDefaultData, DWORD dwDefaultDataSize)
LSTATUS fastcall SHRegCloseUSKey(HUSKEY hUSKey)
LSTATUS fastcall SHRegQueryUSValueW(HUSKEY hUSKey, LPCWSTR pszValue, DWORD * pdwType, void * pvData, DWORD * pcbData, BOOL fIgnoreHKCU, void * pvDefaultData, DWORD dwDefaultDataSize)
LSTATUS fastcall SHRegQueryUSValueA(HUSKEY hUSKey, LPCSTR pszValue, DWORD * pdwType, void * pvData, DWORD * pcbData, BOOL fIgnoreHKCU, void * pvDefaultData, DWORD dwDefaultDataSize)
LSTATUS fastcall RegGetValueA(HKEY hkey, LPCSTR lpSubKey, LPCSTR lpValue, DWORD dwFlags, LPDWORD pdwType, PVOID pvData, LPDWORD pcbData)
DWORD fastcall ExpandEnvironmentStringsW(LPCWSTR lpSrc, LPWSTR lpDst, DWORD nSize)
LSTATUS fastcall RegDeleteValueA(HKEY hKey, LPCSTR lpValueName)
LSTATUS fastcall RegDeleteKeyValueW(HKEY hKey, LPCWSTR lpSubKey, LPCWSTR lpValueName)
LSTATUS fastcall RegFlushKey(HKEY hKey)
LSTATUS fastcall RegDeleteTreeA(HKEY hKey, LPCSTR lpSubKey)
LSTATUS fastcall RegEnumValueA(HKEY hKey, DWORD dwIndex, LPSTR lpValueName, LPDWORD lpcchValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData)
LSTATUS fastcall RegCreateKeyExA(HKEY hKey, LPCSTR lpSubKey, DWORD Reserved, LPSTR lpClass, DWORD dwOptions, REGSAM samDesired, LPSECURITY_ATTRIBUTES lpSecurityAttributes, PHKEY phkResult, LPDWORD lpdwDisposition)
LSTATUS fastcall RegQueryInfoKeyA(HKEY hKey, LPSTR lpClass, LPDWORD lpcchClass, LPDWORD lpReserved, LPDWORD lpcSubKeys, LPDWORD lpcbMaxSubKeyLen, LPDWORD lpcbMaxClassLen, LPDWORD lpcValues, LPDWORD lpcbMaxValueNameLen, LPDWORD lpcbMaxValueLen, LPDWORD lpcbSecurityDescriptor, PFILETIME lpftLastWriteTime)
LSTATUS fastcall RegSetKeySecurity(HKEY hKey, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor)
LSTATUS fastcall RegGetKeySecurity(HKEY hKey, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor, LPDWORD lpcbSecurityDescriptor)
LSTATUS fastcall RegDeleteKeyExW(HKEY hKey, LPCWSTR lpSubKey, REGSAM samDesired, DWORD Reserved)
LSTATUS fastcall RegDeleteTreeW(HKEY hKey, LPCWSTR lpSubKey)
LSTATUS fastcall RegSetKeyValueA(HKEY hKey, LPCSTR lpSubKey, LPCSTR lpValueName, DWORD dwType, LPCVOID lpData, DWORD cbData)
LSTATUS fastcall RegSetValueExA(HKEY hKey, LPCSTR lpValueName, DWORD Reserved, DWORD dwType, BYTE * lpData, DWORD cbData)
LSTATUS fastcall RegDeleteValueW(HKEY hKey, LPCWSTR lpValueName)
LSTATUS fastcall RegQueryMultipleValuesW(HKEY hKey, PVALENTW val_list, DWORD num_vals, LPWSTR lpValueBuf, LPDWORD ldwTotsize)
LSTATUS fastcall RegEnumKeyExA(HKEY hKey, DWORD dwIndex, LPSTR lpName, LPDWORD lpcchName, LPDWORD lpReserved, LPSTR lpClass, LPDWORD lpcchClass, PFILETIME lpftLastWriteTime)
BOOL fastcall InitOnceComplete(LPINIT_ONCE lpInitOnce, DWORD dwFlags, LPVOID lpContext)
int cdecl atexit(void * param_1)
_onexit_t cdecl _onexit(_onexit_t _Func)
LSTATUS fastcall RegLoadAppKeyA(LPCSTR lpFile, PHKEY phkResult, REGSAM samDesired, DWORD dwOptions, DWORD Reserved)
LSTATUS fastcall RegLoadAppKeyW(LPCWSTR lpFile, PHKEY phkResult, REGSAM samDesired, DWORD dwOptions, DWORD Reserved)
DWORD fastcall GetCurrentThreadId(void)
BOOL fastcall IsDebuggerPresent(void)
BOOL fastcall InitOnceBeginInitialize(LPINIT_ONCE lpInitOnce, DWORD dwFlags, PBOOL fPending, LPVOID * lpContext)
BOOL fastcall CopySid(DWORD nDestinationSidLength, PSID pDestinationSid, PSID pSourceSid)
BOOL fastcall OpenProcessToken(HANDLE ProcessHandle, DWORD DesiredAccess, PHANDLE TokenHandle)
BOOL fastcall PathIsURLW(LPCWSTR pszPath)
int fastcall StrCmpCW(LPCWSTR pszStr1, LPCWSTR pszStr2)
HRESULT fastcall UrlCanonicalizeW(LPCWSTR pszUrl, LPWSTR pszCanonicalized, LPDWORD pcchCanonicalized, DWORD dwFlags)
GEOID fastcall GetUserGeoID(GEOCLASS GeoClass)
int fastcall CompareStringOrdinal(LPCWSTR lpString1, int cchCount1, LPCWSTR lpString2, int cchCount2, BOOL bIgnoreCase)
int fastcall GetUserDefaultLocaleName(LPWSTR lpLocaleName, int cchLocaleName)
HRESULT fastcall SHLoadIndirectString(LPCWSTR pszSource, LPWSTR pszOutBuf, UINT cchOutBuf, void * * ppvReserved)
HRESULT fastcall ParseURLW(LPCWSTR pcszURL, PARSEDURLW * ppu)
LSTATUS fastcall SHRegOpenUSKeyW(LPCWSTR pwzPath, REGSAM samDesired, HUSKEY hRelativeUSKey, PHUSKEY phNewUSKey, BOOL fIgnoreHKCU)
HRESULT fastcall UrlEscapeW(LPCWSTR pszUrl, LPWSTR pszEscaped, LPDWORD pcchEscaped, DWORD dwFlags)
BOOL fastcall UrlIsW(LPCWSTR pszUrl, URLIS UrlIs)
DWORD fastcall GetDeviceDriverBaseNameW(LPVOID ImageBase, LPWSTR lpBaseName, DWORD nSize)
HRESULT fastcall UrlGetPartW(LPCWSTR pszIn, LPWSTR pszOut, LPDWORD pcchOut, DWORD dwPart, DWORD dwFlags)
LPWSTR fastcall StrDupW(LPCWSTR lpSrch)
BOOL fastcall IsTokenRestricted(HANDLE TokenHandle)
HLOCAL fastcall LocalFree(HLOCAL hMem)
DWORD fastcall FormatMessageW(DWORD dwFlags, LPCVOID lpSource, DWORD dwMessageId, DWORD dwLanguageId, LPWSTR lpBuffer, DWORD nSize, va_list * Arguments)
HLOCAL fastcall LocalAlloc(UINT uFlags, SIZE_T uBytes)
int fastcall lstrlenW(LPCWSTR lpString)
LPWSTR fastcall StrChrW(LPCWSTR lpStart, WCHAR wMatch)
DWORD fastcall GetDeviceDriverBaseNameA(LPVOID ImageBase, LPSTR lpFilename, DWORD nSize)
LPWSTR fastcall CharLowerW(LPWSTR lpsz)
DWORD fastcall CharLowerBuffW(LPWSTR lpsz, DWORD cchLength)
int fastcall StrCmpNCW(LPCWSTR lpStr1, LPCWSTR lpStr2, int nChar)
int fastcall StrCmpNICW(LPCWSTR lpStr1, LPCWSTR lpStr2, int nChar)
BOOL fastcall PathIsUNCW(LPCWSTR pszPath)
BOOL fastcall CreateDirectoryW(LPCWSTR lpPathName, LPSECURITY_ATTRIBUTES lpSecurityAttributes)
DWORD fastcall GetLastError(void)
HMODULE fastcall LoadLibraryExA(LPCSTR lpLibFileName, HANDLE hFile, DWORD dwFlags)
BOOL fastcall GetComputerNameExW(COMPUTER_NAME_FORMAT NameType, LPWSTR lpBuffer, LPDWORD nSize)
UINT fastcall GetDriveTypeW(LPCWSTR lpRootPathName)
BOOL fastcall GetQueuedCompletionStatus(HANDLE CompletionPort, LPDWORD lpNumberOfBytesTransferred, PULONG_PTR lpCompletionKey, LPOVERLAPPED * lpOverlapped, DWORD dwMilliseconds)
PVOID fastcall FlsGetValue(DWORD dwFlsIndex)
HANDLE fastcall CreateFileA(LPCSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile)
HANDLE fastcall CreateFileW(LPCWSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile)
BOOL fastcall CloseHandle(HANDLE hObject)
BOOL fastcall GetKernelObjectSecurity(HANDLE Handle, SECURITY_INFORMATION RequestedInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor, DWORD nLength, LPDWORD lpnLengthNeeded)
HMODULE fastcall LoadLibraryExW(LPCWSTR lpLibFileName, HANDLE hFile, DWORD dwFlags)
DWORD fastcall GetEnvironmentVariableW(LPCWSTR lpName, LPWSTR lpBuffer, DWORD nSize)
BOOL fastcall GetTokenInformation(HANDLE TokenHandle, TOKEN_INFORMATION_CLASS TokenInformationClass, LPVOID TokenInformation, DWORD TokenInformationLength, PDWORD ReturnLength)
BOOL fastcall DeviceIoControl(HANDLE hDevice, DWORD dwIoControlCode, LPVOID lpInBuffer, DWORD nInBufferSize, LPVOID lpOutBuffer, DWORD nOutBufferSize, LPDWORD lpBytesReturned, LPOVERLAPPED lpOverlapped)
BOOL fastcall WriteFile(HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, LPDWORD lpNumberOfBytesWritten, LPOVERLAPPED lpOverlapped)
BOOL fastcall GetOverlappedResult(HANDLE hFile, LPOVERLAPPED lpOverlapped, LPDWORD lpNumberOfBytesTransferred, BOOL bWait)
BOOL fastcall OpenThreadToken(HANDLE ThreadHandle, DWORD DesiredAccess, BOOL OpenAsSelf, PHANDLE TokenHandle)
BOOL fastcall ReadFile(HANDLE hFile, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead, LPOVERLAPPED lpOverlapped)
LSTATUS fastcall RegOpenKeyExA(HKEY hKey, LPCSTR lpSubKey, DWORD ulOptions, REGSAM samDesired, PHKEY phkResult)
LSTATUS fastcall RegSetValueExW(HKEY hKey, LPCWSTR lpValueName, DWORD Reserved, DWORD dwType, BYTE * lpData, DWORD cbData)
LSTATUS fastcall RegCreateKeyExW(HKEY hKey, LPCWSTR lpSubKey, DWORD Reserved, LPWSTR lpClass, DWORD dwOptions, REGSAM samDesired, LPSECURITY_ATTRIBUTES lpSecurityAttributes, PHKEY phkResult, LPDWORD lpdwDisposition)
LSTATUS fastcall RegEnumValueW(HKEY hKey, DWORD dwIndex, LPWSTR lpValueName, LPDWORD lpcchValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData)
BOOL fastcall GetFileAttributesExW(LPCWSTR lpFileName, GET_FILEEX_INFO_LEVELS fInfoLevelId, LPVOID lpFileInformation)
LSTATUS fastcall RegQueryValueExA(HKEY hKey, LPCSTR lpValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData)
LSTATUS fastcall RegQueryInfoKeyW(HKEY hKey, LPWSTR lpClass, LPDWORD lpcchClass, LPDWORD lpReserved, LPDWORD lpcSubKeys, LPDWORD lpcbMaxSubKeyLen, LPDWORD lpcbMaxClassLen, LPDWORD lpcValues, LPDWORD lpcbMaxValueNameLen, LPDWORD lpcbMaxValueLen, LPDWORD lpcbSecurityDescriptor, PFILETIME lpftLastWriteTime)
DWORD fastcall QueryDosDeviceW(LPCWSTR lpDeviceName, LPWSTR lpTargetPath, DWORD ucchMax)
LSTATUS fastcall RegEnumKeyExW(HKEY hKey, DWORD dwIndex, LPWSTR lpName, LPDWORD lpcchName, LPDWORD lpReserved, LPWSTR lpClass, LPDWORD lpcchClass, PFILETIME lpftLastWriteTime)
LSTATUS fastcall RegGetValueW(HKEY hkey, LPCWSTR lpSubKey, LPCWSTR lpValue, DWORD dwFlags, LPDWORD pdwType, PVOID pvData, LPDWORD pcbData)
LSTATUS fastcall RegOpenKeyExW(HKEY hKey, LPCWSTR lpSubKey, DWORD ulOptions, REGSAM samDesired, PHKEY phkResult)
LSTATUS fastcall RegQueryValueExW(HKEY hKey, LPCWSTR lpValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData)
LSTATUS fastcall RegCloseKey(HKEY hKey)
DWORD fastcall GetFileAttributesW(LPCWSTR lpFileName)
HANDLE fastcall OpenProcess(DWORD dwDesiredAccess, BOOL bInheritHandle, DWORD dwProcessId)
LSTATUS fastcall RegNotifyChangeKeyValue(HKEY hKey, BOOL bWatchSubtree, DWORD dwNotifyFilter, HANDLE hEvent, BOOL fAsynchronous)
BOOL fastcall DeleteFileW(LPCWSTR lpFileName)
BOOL fastcall SetWaitableTimer(HANDLE hTimer, LARGE_INTEGER * lpDueTime, LONG lPeriod, PTIMERAPCROUTINE pfnCompletionRoutine, LPVOID lpArgToCompletionRoutine, BOOL fResume)
BOOL fastcall DeleteFileA(LPCSTR lpFileName)
int fastcall StrCmpNW(LPCWSTR lpStr1, LPCWSTR lpStr2, int nChar)
LPSTR fastcall CharLowerA(LPSTR lpsz)
int fastcall FindStringOrdinal(DWORD dwFindStringOrdinalFlags, LPCWSTR lpStringSource, int cchSource, LPCWSTR lpStringValue, int cchValue, BOOL bIgnoreCase)
int fastcall FindNLSStringEx(LPCWSTR lpLocaleName, DWORD dwFindNLSStringFlags, LPCWSTR lpStringSource, int cchSource, LPCWSTR lpStringValue, int cchValue, LPINT pcchFound, LPNLSVERSIONINFO lpVersionInformation, LPVOID lpReserved, LPARAM lParam)
int fastcall StrCmpW(LPCWSTR psz1, LPCWSTR psz2)
int fastcall CompareStringEx(LPCWSTR lpLocaleName, DWORD dwCmpFlags, LPCWSTR lpString1, int cchCount1, LPCWSTR lpString2, int cchCount2, LPNLSVERSIONINFO lpVersionInformation, LPVOID lpReserved, LPARAM lParam)
int fastcall lstrcmpW(LPCWSTR lpString1, LPCWSTR lpString2)
int fastcall lstrcmpiW(LPCWSTR lpString1, LPCWSTR lpString2)
LPWSTR fastcall StrStrIW(LPCWSTR lpFirst, LPCWSTR lpSrch)
int fastcall CompareStringA(LCID Locale, DWORD dwCmpFlags, PCNZCH lpString1, int cchCount1, PCNZCH lpString2, int cchCount2)
int fastcall MultiByteToWideChar(UINT CodePage, DWORD dwFlags, LPCSTR lpMultiByteStr, int cbMultiByte, LPWSTR lpWideCharStr, int cchWideChar)
int fastcall CompareStringW(LCID Locale, DWORD dwCmpFlags, PCNZWCH lpString1, int cchCount1, PCNZWCH lpString2, int cchCount2)
int fastcall LCMapStringW(LCID Locale, DWORD dwMapFlags, LPCWSTR lpSrcStr, int cchSrc, LPWSTR lpDestStr, int cchDest)
int fastcall LCMapStringEx(LPCWSTR lpLocaleName, DWORD dwMapFlags, LPCWSTR lpSrcStr, int cchSrc, LPWSTR lpDestStr, int cchDest, LPNLSVERSIONINFO lpVersionInformation, LPVOID lpReserved, LPARAM lParam)
int fastcall GetLocaleInfoEx(LPCWSTR lpLocaleName, LCTYPE LCType, LPWSTR lpLCData, int cchData)
int fastcall GetLocaleInfoW(LCID Locale, LCTYPE LCType, LPWSTR lpLCData, int cchData)
int fastcall GetCalendarInfoEx(LPCWSTR lpLocaleName, CALID Calendar, LPCWSTR lpReserved, CALTYPE CalType, LPWSTR lpCalData, int cchData, LPDWORD lpValue)
DWORD fastcall WaitForSingleObject(HANDLE hHandle, DWORD dwMilliseconds)
DWORD fastcall WaitForSingleObjectEx(HANDLE hHandle, DWORD dwMilliseconds, BOOL bAlertable)
BOOL fastcall IsValidCodePage(UINT CodePage)
int fastcall LCIDToLocaleName(LCID Locale, LPWSTR lpName, int cchName, DWORD dwFlags)
int fastcall GetGeoInfoW(GEOID Location, GEOTYPE GeoType, LPWSTR lpGeoData, int cchData, LANGID LangId)
int fastcall StrCmpNIW(LPCWSTR lpStr1, LPCWSTR lpStr2, int nChar)
int fastcall WideCharToMultiByte(UINT CodePage, DWORD dwFlags, LPCWSTR lpWideCharStr, int cchWideChar, LPSTR lpMultiByteStr, int cbMultiByte, LPCSTR lpDefaultChar, LPBOOL lpUsedDefaultChar)
BOOL fastcall EnumCalendarInfoExEx(CALINFO_ENUMPROCEXEX pCalInfoEnumProcExEx, LPCWSTR lpLocaleName, CALID Calendar, LPCWSTR lpReserved, CALTYPE CalType, LPARAM lParam)
BOOL fastcall ReleaseMutex(HANDLE hMutex)
void fastcall GetNativeSystemInfo(LPSYSTEM_INFO lpSystemInfo)
void fastcall GetSystemInfo(LPSYSTEM_INFO lpSystemInfo)
LANGID fastcall SetThreadUILanguage(LANGID LangId)
DWORD fastcall GetLongPathNameW(LPCWSTR lpszShortPath, LPWSTR lpszLongPath, DWORD cchBuffer)
BOOL fastcall GetFileVersionInfoExW(DWORD dwFlags, LPCWSTR lpwstrFilename, DWORD dwHandle, DWORD dwLen, LPVOID lpData)
DWORD fastcall GetFileVersionInfoSizeExW(DWORD dwFlags, LPCWSTR lpwstrFilename, LPDWORD lpdwHandle)
BOOL fastcall PathFileExistsW(LPCWSTR pszPath)
DWORD fastcall GetShortPathNameW(LPCWSTR lpszLongPath, LPWSTR lpszShortPath, DWORD cchBuffer)
UINT fastcall SetErrorMode(UINT uMode)
UINT fastcall GetErrorMode(void)
HANDLE fastcall FindFirstFileExW(LPCWSTR lpFileName, FINDEX_INFO_LEVELS fInfoLevelId, LPVOID lpFindFileData, FINDEX_SEARCH_OPS fSearchOp, LPVOID lpSearchFilter, DWORD dwAdditionalFlags)
HANDLE fastcall FindFirstFileW(LPCWSTR lpFileName, LPWIN32_FIND_DATAW lpFindFileData)
BOOL fastcall FindClose(HANDLE hFindFile)
BOOL fastcall FreeLibrary(HMODULE hLibModule)
LSTATUS fastcall RegLoadMUIStringW(HKEY hKey, LPCWSTR pszValue, LPWSTR pszOutBuf, DWORD cbOutBuf, LPDWORD pcbData, DWORD Flags, LPCWSTR pszDirectory)
HANDLE fastcall GetProcessHeap(void)
BOOL fastcall WriteConsoleW(HANDLE hConsoleOutput, void * lpBuffer, DWORD nNumberOfCharsToWrite, LPDWORD lpNumberOfCharsWritten, LPVOID lpReserved)
BOOL fastcall GetConsoleMode(HANDLE hConsoleHandle, LPDWORD lpMode)
BOOL fastcall GetConsoleScreenBufferInfo(HANDLE hConsoleOutput, PCONSOLE_SCREEN_BUFFER_INFO lpConsoleScreenBufferInfo)
BOOL fastcall GetConsoleScreenBufferInfoEx(HANDLE hConsoleOutput, PCONSOLE_SCREEN_BUFFER_INFOEX lpConsoleScreenBufferInfoEx)
HANDLE fastcall OpenEventA(DWORD dwDesiredAccess, BOOL bInheritHandle, LPCSTR lpName)
HANDLE fastcall CreateWaitableTimerExW(LPSECURITY_ATTRIBUTES lpTimerAttributes, LPCWSTR lpTimerName, DWORD dwFlags, DWORD dwDesiredAccess)
HANDLE fastcall CreateEventW(LPSECURITY_ATTRIBUTES lpEventAttributes, BOOL bManualReset, BOOL bInitialState, LPCWSTR lpName)
HANDLE fastcall CreateSemaphoreW(LPSECURITY_ATTRIBUTES lpSemaphoreAttributes, LONG lInitialCount, LONG lMaximumCount, LPCWSTR lpName)
HANDLE fastcall OpenFileMappingW(DWORD dwDesiredAccess, BOOL bInheritHandle, LPCWSTR lpName)
HANDLE fastcall CreateRemoteThreadEx(HANDLE hProcess, LPSECURITY_ATTRIBUTES lpThreadAttributes, SIZE_T dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress, LPVOID lpParameter, DWORD dwCreationFlags, LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList, LPDWORD lpThreadId)
HANDLE fastcall OpenSemaphoreW(DWORD dwDesiredAccess, BOOL bInheritHandle, LPCWSTR lpName)
HANDLE fastcall CreateFileMappingW(HANDLE hFile, LPSECURITY_ATTRIBUTES lpFileMappingAttributes, DWORD flProtect, DWORD dwMaximumSizeHigh, DWORD dwMaximumSizeLow, LPCWSTR lpName)
HANDLE fastcall CreateEventExW(LPSECURITY_ATTRIBUTES lpEventAttributes, LPCWSTR lpName, DWORD dwFlags, DWORD dwDesiredAccess)
HANDLE fastcall CreateSemaphoreExW(LPSECURITY_ATTRIBUTES lpSemaphoreAttributes, LONG lInitialCount, LONG lMaximumCount, LPCWSTR lpName, DWORD dwFlags, DWORD dwDesiredAccess)
HANDLE fastcall CreateFileMappingNumaW(HANDLE hFile, LPSECURITY_ATTRIBUTES lpFileMappingAttributes, DWORD flProtect, DWORD dwMaximumSizeHigh, DWORD dwMaximumSizeLow, LPCWSTR lpName, DWORD nndPreferred)
HANDLE fastcall CreateMutexW(LPSECURITY_ATTRIBUTES lpMutexAttributes, BOOL bInitialOwner, LPCWSTR lpName)
HANDLE fastcall CreateMutexExW(LPSECURITY_ATTRIBUTES lpMutexAttributes, LPCWSTR lpName, DWORD dwFlags, DWORD dwDesiredAccess)
HANDLE fastcall OpenEventW(DWORD dwDesiredAccess, BOOL bInheritHandle, LPCWSTR lpName)
void fastcall Sleep(DWORD dwMilliseconds)
DWORD fastcall SleepEx(DWORD dwMilliseconds, BOOL bAlertable)
BOOL fastcall FlsSetValue(DWORD dwFlsIndex, PVOID lpFlsData)
LCID fastcall GetSystemDefaultLCID(void)
BOOL fastcall IsCharAlphaNumericW(WCHAR ch)
LANGID fastcall GetSystemDefaultLangID(void)
BOOL fastcall IsCharAlphaW(WCHAR ch)
BOOL fastcall GetStringTypeExW(LCID Locale, DWORD dwInfoType, LPCWSTR lpSrcStr, int cchSrc, LPWORD lpCharType)
BOOL fastcall PathStripToRootW(LPWSTR pszPath)
LPWSTR fastcall PathRemoveBackslashW(LPWSTR pszPath)
LPWSTR fastcall CharPrevW(LPCWSTR lpszStart, LPCWSTR lpszCurrent)
BOOL fastcall GetStringTypeW(DWORD dwInfoType, LPCWSTR lpSrcStr, int cchSrc, LPWORD lpCharType)
BOOL fastcall PathRemoveFileSpecW(LPWSTR pszPath)
BOOL fastcall EnumUILanguagesW(UILANGUAGE_ENUMPROCW lpUILanguageEnumProc, DWORD dwFlags, LONG_PTR lParam)
HRESULT fastcall QISearch(void * that, LPCQITAB pqit, IID * riid, void * * ppv)
BOOL fastcall GetWindowsAccountDomainSid(PSID pSid, PSID pDomainSid, DWORD * cbDomainSid)
BOOL fastcall EqualDomainSid(PSID pSid1, PSID pSid2, BOOL * pfEqual)
BOOL fastcall CreateWellKnownSid(WELL_KNOWN_SID_TYPE WellKnownSidType, PSID DomainSid, PSID pSid, DWORD * cbSid)
BOOL fastcall IsWellKnownSid(PSID pSid, WELL_KNOWN_SID_TYPE WellKnownSidType)
BOOL fastcall EqualSid(PSID pSid1, PSID pSid2)
DWORD fastcall GetTempPathW(DWORD nBufferLength, LPWSTR lpBuffer)
PDWORD fastcall GetSidSubAuthority(PSID pSid, DWORD nSubAuthority)
BOOL fastcall GetTimeZoneInformationForYear(USHORT wYear, PDYNAMIC_TIME_ZONE_INFORMATION pdtzi, LPTIME_ZONE_INFORMATION ptzi)
DWORD fastcall GetDynamicTimeZoneInformation(PDYNAMIC_TIME_ZONE_INFORMATION pTimeZoneInformation)
BOOL fastcall TzSpecificLocalTimeToSystemTime(TIME_ZONE_INFORMATION * lpTimeZoneInformation, SYSTEMTIME * lpLocalTime, LPSYSTEMTIME lpUniversalTime)
BOOL fastcall FileTimeToLocalFileTime(FILETIME * lpFileTime, LPFILETIME lpLocalFileTime)
DWORD fastcall GetTimeZoneInformation(LPTIME_ZONE_INFORMATION lpTimeZoneInformation)
BOOL fastcall SystemTimeToTzSpecificLocalTime(TIME_ZONE_INFORMATION * lpTimeZoneInformation, SYSTEMTIME * lpUniversalTime, LPSYSTEMTIME lpLocalTime)
void fastcall GetLocalTime(LPSYSTEMTIME lpSystemTime)
BOOL fastcall LocalFileTimeToFileTime(FILETIME * lpLocalFileTime, LPFILETIME lpFileTime)
int fastcall LoadStringW(HINSTANCE hInstance, UINT uID, LPWSTR lpBuffer, int cchBufferMax)
LANGID fastcall GetUserDefaultUILanguage(void)
BOOL fastcall EnumResourceNamesExW(HMODULE hModule, LPCWSTR lpType, ENUMRESNAMEPROCW lpEnumFunc, LONG_PTR lParam, DWORD dwFlags, LANGID LangId)
UINT fastcall GetSystemWow64DirectoryW(LPWSTR lpBuffer, UINT uSize)
UINT fastcall GetWindowsDirectoryW(LPWSTR lpBuffer, UINT uSize)
UINT fastcall GetSystemWindowsDirectoryW(LPWSTR lpBuffer, UINT uSize)
HMODULE fastcall GetModuleHandleA(LPCSTR lpModuleName)
HMODULE fastcall GetModuleHandleW(LPCWSTR lpModuleName)
FARPROC fastcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
HGLOBAL fastcall LoadResource(HMODULE hModule, HRSRC hResInfo)
HRSRC fastcall FindResourceW(HMODULE hModule, LPCWSTR lpName, LPCWSTR lpType)
HRSRC fastcall FindResourceExW(HMODULE hModule, LPCWSTR lpType, LPCWSTR lpName, WORD wLanguage)
DWORD fastcall SizeofResource(HMODULE hModule, HRSRC hResInfo)
BOOL fastcall GetCPInfoExW(UINT CodePage, DWORD dwFlags, LPCPINFOEXW lpCPInfoEx)
LPSTR fastcall StrChrA(LPCSTR lpStart, WORD wMatch)
BOOL fastcall PathIsPrefixA(LPCSTR pszPrefix, LPCSTR pszPath)
BOOL fastcall PathIsURLA(LPCSTR pszPath)
HRESULT fastcall ParseURLA(LPCSTR pcszURL, PARSEDURLA * ppu)
LPSTR fastcall StrStrA(LPCSTR lpFirst, LPCSTR lpSrch)
int fastcall lstrlen(LPCSTR lpString)
BOOL fastcall GetCPInfo(UINT CodePage, LPCPINFO lpCPInfo)
LPSTR fastcall StrStrIA(LPCSTR lpFirst, LPCSTR lpSrch)
BOOL fastcall PathMatchSpecW(LPCWSTR pszFile, LPCWSTR pszSpec)
LPWSTR fastcall CharUpperW(LPWSTR lpsz)
DWORD fastcall CharUpperBuffW(LPWSTR lpsz, DWORD cchLength)
int fastcall PathCommonPrefixA(LPCSTR pszFile1, LPCSTR pszFile2, LPSTR achPath)
int fastcall PathGetDriveNumberA(LPCSTR pszPath)
LPSTR fastcall StrChrIA(LPCSTR lpStart, WORD wMatch)
BOOL fastcall ChrCmpIA(WORD w1, WORD w2)
BOOL fastcall IsDBCSLeadByte(BYTE TestChar)
int fastcall lstrcmpi(LPCSTR lpString1, LPCSTR lpString2)
LPSTR fastcall CharNextA(LPCSTR lpsz)
int fastcall StrCmpNIA(LPCSTR lpStr1, LPCSTR lpStr2, int nChar)
BOOL fastcall StrIsIntlEqualA(BOOL fCaseSens, LPCSTR lpString1, LPCSTR lpString2, int nChar)
int fastcall lstrcmp(LPCSTR lpString1, LPCSTR lpString2)
LPVOID fastcall CreateFiber(SIZE_T dwStackSize, LPFIBER_START_ROUTINE lpStartAddress, LPVOID lpParameter)
LPVOID fastcall CreateFiberEx(SIZE_T dwStackCommitSize, SIZE_T dwStackReserveSize, DWORD dwFlags, LPFIBER_START_ROUTINE lpStartAddress, LPVOID lpParameter)
BOOL fastcall FindNextFileW(HANDLE hFindFile, LPWIN32_FIND_DATAW lpFindFileData)
BOOL fastcall GetSecurityDescriptorControl(PSECURITY_DESCRIPTOR pSecurityDescriptor, PSECURITY_DESCRIPTOR_CONTROL pControl, LPDWORD lpdwRevision)
BOOL fastcall CopyFileW(LPCWSTR lpExistingFileName, LPCWSTR lpNewFileName, BOOL bFailIfExists)
BOOL fastcall CopyFileExW(LPCWSTR lpExistingFileName, LPCWSTR lpNewFileName, LPPROGRESS_ROUTINE lpProgressRoutine, LPVOID lpData, LPBOOL pbCancel, DWORD dwCopyFlags)
BOOL fastcall GetFileInformationByHandleEx(HANDLE hFile, FILE_INFO_BY_HANDLE_CLASS FileInformationClass, LPVOID lpFileInformation, DWORD dwBufferSize)
HANDLE fastcall CreateEventA(LPSECURITY_ATTRIBUTES lpEventAttributes, BOOL bManualReset, BOOL bInitialState, LPCSTR lpName)
DWORD fastcall GetTickCount(void)
DWORD fastcall WaitForMultipleObjects(DWORD nCount, HANDLE * lpHandles, BOOL bWaitAll, DWORD dwMilliseconds)
DWORD fastcall WaitForMultipleObjectsEx(DWORD nCount, HANDLE * lpHandles, BOOL bWaitAll, DWORD dwMilliseconds, BOOL bAlertable)
BOOL fastcall SetThreadPreferredUILanguages(DWORD dwFlags, PCZZWSTR pwszLanguagesBuffer, PULONG pulNumLanguages)
UINT fastcall GetConsoleOutputCP(void)
LPWSTR fastcall PathFindExtensionW(LPCWSTR pszPath)
BOOL fastcall FileTimeToSystemTime(FILETIME * lpFileTime, LPSYSTEMTIME lpSystemTime)
BOOL fastcall GetThreadIdealProcessorEx(HANDLE hThread, PPROCESSOR_NUMBER lpIdealProcessor)
BOOL fastcall EnumSystemGeoID(GEOCLASS GeoClass, GEOID ParentGeoId, GEO_ENUMPROC lpGeoEnumProc)
int fastcall StrCmpICA(LPCSTR pszStr1, LPCSTR pszStr2)
BOOL fastcall TlsSetValue(DWORD dwTlsIndex, LPVOID lpTlsValue)
LPWSTR fastcall PathFindFileNameW(LPCWSTR pszPath)
DWORD fastcall GetModuleBaseNameW(HANDLE hProcess, HMODULE hModule, LPWSTR lpBaseName, DWORD nSize)
BOOL fastcall EnumProcessModules(HANDLE hProcess, HMODULE * lphModule, DWORD cb, LPDWORD lpcbNeeded)
BOOL fastcall ReadProcessMemory(HANDLE hProcess, LPCVOID lpBaseAddress, LPVOID lpBuffer, SIZE_T nSize, SIZE_T * lpNumberOfBytesRead)
DWORD fastcall GetModuleFileNameExW(HANDLE hProcess, HMODULE hModule, LPWSTR lpFilename, DWORD nSize)
BOOL fastcall GetModuleInformation(HANDLE hProcess, HMODULE hModule, LPMODULEINFO lpmodinfo, DWORD cb)
ULONGLONG fastcall GetTickCount64(void)
DWORD fastcall GetCurrentProcessId(void)
BOOL fastcall InitOnceExecuteOnce(PINIT_ONCE InitOnce, PINIT_ONCE_FN InitFn, PVOID Parameter, LPVOID * Context)
void fastcall GetSystemTimeAsFileTime(LPFILETIME lpSystemTimeAsFileTime)
BOOL fastcall SetThreadLocale(LCID Locale)
LPWSTR * fastcall CommandLineToArgvW(LPCWSTR lpCmdLine, int * pNumArgs)
DWORD fastcall GetModuleFileNameA(HMODULE hModule, LPSTR lpFilename, DWORD nSize)
DWORD fastcall GetModuleFileNameW(HMODULE hModule, LPWSTR lpFilename, DWORD nSize)
LPVOID fastcall VirtualAlloc(LPVOID lpAddress, SIZE_T dwSize, DWORD flAllocationType, DWORD flProtect)
BOOL fastcall StrTrimW(LPWSTR psz, LPCWSTR pszTrimChars)
LPWSTR fastcall CharNextW(LPCWSTR lpsz)
HRESULT fastcall UrlApplySchemeA(LPCSTR pszIn, LPSTR pszOut, LPDWORD pcchOut, DWORD dwFlags)
HRESULT fastcall UrlCreateFromPathW(LPCWSTR pszPath, LPWSTR pszUrl, LPDWORD pcchUrl, DWORD dwFlags)
HRESULT fastcall UrlUnescapeA(LPSTR pszUrl, LPSTR pszUnescaped, LPDWORD pcchUnescaped, DWORD dwFlags)
HRESULT fastcall PathCreateFromUrlW(LPCWSTR pszUrl, LPWSTR pszPath, LPDWORD pcchPath, DWORD dwFlags)
HRESULT fastcall UrlUnescapeW(LPWSTR pszUrl, LPWSTR pszUnescaped, LPDWORD pcchUnescaped, DWORD dwFlags)
HRESULT fastcall UrlGetPartA(LPCSTR pszIn, LPSTR pszOut, LPDWORD pcchOut, DWORD dwPart, DWORD dwFlags)
HRESULT fastcall UrlApplySchemeW(LPCWSTR pszIn, LPWSTR pszOut, LPDWORD pcchOut, DWORD dwFlags)
BOOL fastcall GetModuleHandleExW(DWORD dwFlags, LPCWSTR lpModuleName, HMODULE * phModule)
int fastcall PathParseIconLocationW(LPWSTR pszIconFile)
BOOL fastcall PathUnquoteSpacesW(LPWSTR lpsz)
void fastcall PathRemoveBlanksW(LPWSTR pszPath)
int fastcall StrToIntW(LPCWSTR lpSrc)
DWORD fastcall SetFilePointer(HANDLE hFile, LONG lDistanceToMove, PLONG lpDistanceToMoveHigh, DWORD dwMoveMethod)
BOOL fastcall SetThreadToken(PHANDLE Thread, HANDLE Token)
LPWCH fastcall GetEnvironmentStringsW(void)
HRESULT fastcall HashData(LPBYTE pbData, DWORD cbData, LPBYTE pbHash, DWORD cbHash)
int fastcall StrCmpNICA(LPCSTR lpStr1, LPCSTR lpStr2, int nChar)
DWORD fastcall GetFileType(HANDLE hFile)
BOOL fastcall LockFileEx(HANDLE hFile, DWORD dwFlags, DWORD dwReserved, DWORD nNumberOfBytesToLockLow, DWORD nNumberOfBytesToLockHigh, LPOVERLAPPED lpOverlapped)
BOOL fastcall GetFileInformationByHandle(HANDLE hFile, LPBY_HANDLE_FILE_INFORMATION lpFileInformation)
BOOL fastcall GetVolumeInformationW(LPCWSTR lpRootPathName, LPWSTR lpVolumeNameBuffer, DWORD nVolumeNameSize, LPDWORD lpVolumeSerialNumber, LPDWORD lpMaximumComponentLength, LPDWORD lpFileSystemFlags, LPWSTR lpFileSystemNameBuffer, DWORD nFileSystemNameSize)
BOOL fastcall GetVolumeInformationByHandleW(HANDLE hFile, LPWSTR lpVolumeNameBuffer, DWORD nVolumeNameSize, LPDWORD lpVolumeSerialNumber, LPDWORD lpMaximumComponentLength, LPDWORD lpFileSystemFlags, LPWSTR lpFileSystemNameBuffer, DWORD nFileSystemNameSize)
BOOL fastcall SetEvent(HANDLE hEvent)
BOOL fastcall VirtualFree(LPVOID lpAddress, SIZE_T dwSize, DWORD dwFreeType)
BOOL fastcall InitializeCriticalSectionEx(LPCRITICAL_SECTION lpCriticalSection, DWORD dwSpinCount, DWORD Flags)
DWORD fastcall GetLengthSid(PSID pSid)
BOOL fastcall ResetEvent(HANDLE hEvent)
int fastcall MulDiv(int nNumber, int nNumerator, int nDenominator)
BOOL fastcall SetThreadPriority(HANDLE hThread, int nPriority)
BOOL fastcall RevertToSelf(void)
BOOL fastcall SetFilePointerEx(HANDLE hFile, LARGE_INTEGER liDistanceToMove, PLARGE_INTEGER lpNewFilePointer, DWORD dwMoveMethod)
BOOL fastcall IsCharSpaceW(WCHAR wch)
BOOL fastcall SetEndOfFile(HANDLE hFile)
BOOL fastcall FindActCtxSectionGuid(DWORD dwFlags, GUID * lpExtensionGuid, ULONG ulSectionId, GUID * lpGuidToFind, PACTCTX_SECTION_KEYED_DATA ReturnedData)
BOOL fastcall SetThreadErrorMode(DWORD dwNewMode, LPDWORD lpOldMode)
LPVOID fastcall MapViewOfFileEx(HANDLE hFileMappingObject, DWORD dwDesiredAccess, DWORD dwFileOffsetHigh, DWORD dwFileOffsetLow, SIZE_T dwNumberOfBytesToMap, LPVOID lpBaseAddress)
LPVOID fastcall MapViewOfFile(HANDLE hFileMappingObject, DWORD dwDesiredAccess, DWORD dwFileOffsetHigh, DWORD dwFileOffsetLow, SIZE_T dwNumberOfBytesToMap)
LPVOID fastcall MapViewOfFileExNuma(HANDLE hFileMappingObject, DWORD dwDesiredAccess, DWORD dwFileOffsetHigh, DWORD dwFileOffsetLow, SIZE_T dwNumberOfBytesToMap, LPVOID lpBaseAddress, DWORD nndPreferred)
LPSTR fastcall PathFindFileNameA(LPCSTR pszPath)
BOOL fastcall FlushInstructionCache(HANDLE hProcess, LPCVOID lpBaseAddress, SIZE_T dwSize)
DWORD fastcall ExpandEnvironmentStringsA(LPCSTR lpSrc, LPSTR lpDst, DWORD nSize)
BOOL fastcall GlobalUnlock(HGLOBAL hMem)
HLOCAL fastcall LocalReAlloc(HLOCAL hMem, SIZE_T uBytes, UINT uFlags)
LPVOID fastcall GlobalLock(HGLOBAL hMem)
BOOL fastcall AccessCheck(PSECURITY_DESCRIPTOR pSecurityDescriptor, HANDLE ClientToken, DWORD DesiredAccess, PGENERIC_MAPPING GenericMapping, PPRIVILEGE_SET PrivilegeSet, LPDWORD PrivilegeSetLength, LPDWORD GrantedAccess, LPBOOL AccessStatus)
DWORD fastcall GetFullPathNameW(LPCWSTR lpFileName, DWORD nBufferLength, LPWSTR lpBuffer, LPWSTR * lpFilePart)
BOOL fastcall GetDiskFreeSpaceW(LPCWSTR lpRootPathName, LPDWORD lpSectorsPerCluster, LPDWORD lpBytesPerSector, LPDWORD lpNumberOfFreeClusters, LPDWORD lpTotalNumberOfClusters)
LANGID fastcall GetThreadUILanguage(void)
BOOL fastcall UnlockFile(HANDLE hFile, DWORD dwFileOffsetLow, DWORD dwFileOffsetHigh, DWORD nNumberOfBytesToUnlockLow, DWORD nNumberOfBytesToUnlockHigh)
BOOL fastcall UnlockFileEx(HANDLE hFile, DWORD dwReserved, DWORD nNumberOfBytesToUnlockLow, DWORD nNumberOfBytesToUnlockHigh, LPOVERLAPPED lpOverlapped)
HRESULT fastcall RegisterApplicationRestart(PCWSTR pwzCommandline, DWORD dwFlags)
BOOL fastcall ReleaseSemaphore(HANDLE hSemaphore, LONG lReleaseCount, LPLONG lpPreviousCount)
BOOL fastcall QueryFullProcessImageNameW(HANDLE hProcess, DWORD dwFlags, LPWSTR lpExeName, PDWORD lpdwSize)
BOOL fastcall ReplaceFileW(LPCWSTR lpReplacedFileName, LPCWSTR lpReplacementFileName, LPCWSTR lpBackupFileName, DWORD dwReplaceFlags, LPVOID lpExclude, LPVOID lpReserved)
BOOL fastcall DuplicateHandle(HANDLE hSourceProcessHandle, HANDLE hSourceHandle, HANDLE hTargetProcessHandle, LPHANDLE lpTargetHandle, DWORD dwDesiredAccess, BOOL bInheritHandle, DWORD dwOptions)
LPWSTR fastcall StrRChrW(LPCWSTR lpStart, LPCWSTR lpEnd, WCHAR wMatch)
DWORD fastcall GetFileSize(HANDLE hFile, LPDWORD lpFileSizeHigh)
BOOL fastcall VirtualProtect(LPVOID lpAddress, SIZE_T dwSize, DWORD flNewProtect, PDWORD lpflOldProtect)
BOOL fastcall AllocateAndInitializeSid(PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority, BYTE nSubAuthorityCount, DWORD nSubAuthority0, DWORD nSubAuthority1, DWORD nSubAuthority2, DWORD nSubAuthority3, DWORD nSubAuthority4, DWORD nSubAuthority5, DWORD nSubAuthority6, DWORD nSubAuthority7, PSID * pSid)
HANDLE fastcall GetCurrentProcess(void)
void fastcall GetSystemTime(LPSYSTEMTIME lpSystemTime)
BOOL fastcall SystemTimeToFileTime(SYSTEMTIME * lpSystemTime, LPFILETIME lpFileTime)
BOOL fastcall GetThreadTimes(HANDLE hThread, LPFILETIME lpCreationTime, LPFILETIME lpExitTime, LPFILETIME lpKernelTime, LPFILETIME lpUserTime)
BOOL fastcall AccessCheckByType(PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID PrincipalSelfSid, HANDLE ClientToken, DWORD DesiredAccess, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, PPRIVILEGE_SET PrivilegeSet, LPDWORD PrivilegeSetLength, LPDWORD GrantedAccess, LPBOOL AccessStatus)
LPWSTR fastcall StrChrNW(LPCWSTR lpStart, WCHAR wMatch, UINT cchMax)
BOOL fastcall QueryThreadCycleTime(HANDLE ThreadHandle, PULONG64 CycleTime)
BOOL fastcall SetWaitableTimerEx(HANDLE hTimer, LARGE_INTEGER * lpDueTime, LONG lPeriod, PTIMERAPCROUTINE pfnCompletionRoutine, LPVOID lpArgToCompletionRoutine, PREASON_CONTEXT WakeContext, ULONG TolerableDelay)
BOOL fastcall GetPhysicallyInstalledSystemMemory(PULONGLONG TotalMemoryInKilobytes)
BOOL fastcall GlobalMemoryStatusEx(LPMEMORYSTATUSEX lpBuffer)
UINT fastcall GetSystemFirmwareTable(DWORD FirmwareTableProviderSignature, DWORD FirmwareTableID, PVOID pFirmwareTableBuffer, DWORD BufferSize)
BOOL fastcall InitializeCriticalSectionAndSpinCount(LPCRITICAL_SECTION lpCriticalSection, DWORD dwSpinCount)
LCID fastcall GetThreadLocale(void)
BOOL fastcall GetModuleHandleExA(DWORD dwFlags, LPCSTR lpModuleName, HMODULE * phModule)
LONG fastcall CompareFileTime(FILETIME * lpFileTime1, FILETIME * lpFileTime2)
BOOL fastcall GetVersionExA(LPOSVERSIONINFOA lpVersionInformation)
BOOL fastcall GetVersionExW(LPOSVERSIONINFOW lpVersionInformation)
BOOL fastcall PostQueuedCompletionStatus(HANDLE CompletionPort, DWORD dwNumberOfBytesTransferred, ULONG_PTR dwCompletionKey, LPOVERLAPPED lpOverlapped)
PTP_TIMER fastcall CreateThreadpoolTimer(PTP_TIMER_CALLBACK pfnti, PVOID pv, PTP_CALLBACK_ENVIRON pcbe)
BOOL fastcall UnmapViewOfFile(LPCVOID lpBaseAddress)
LPVOID fastcall LockResource(HGLOBAL hResData)
SIZE_T fastcall VirtualQuery(LPCVOID lpAddress, PMEMORY_BASIC_INFORMATION lpBuffer, SIZE_T dwLength)
BOOL fastcall IsValidSid(PSID pSid)
BOOL fastcall CheckTokenMembership(HANDLE TokenHandle, PSID SidToCheck, PBOOL IsMember)
BOOL fastcall GetSecurityDescriptorDacl(PSECURITY_DESCRIPTOR pSecurityDescriptor, LPBOOL lpbDaclPresent, PACL * pDacl, LPBOOL lpbDaclDefaulted)
BOOL fastcall ImpersonateLoggedOnUser(HANDLE hToken)
BOOL fastcall PathIsPrefixW(LPCWSTR pszPrefix, LPCWSTR pszPath)
int fastcall PathCommonPrefixW(LPCWSTR pszFile1, LPCWSTR pszFile2, LPWSTR achPath)
BOOL fastcall StrIsIntlEqualW(BOOL fCaseSens, LPCWSTR lpString1, LPCWSTR lpString2, int nChar)
BOOL fastcall GetProcessTimes(HANDLE hProcess, LPFILETIME lpCreationTime, LPFILETIME lpExitTime, LPFILETIME lpKernelTime, LPFILETIME lpUserTime)
LCID fastcall GetUserDefaultLangID(void)
LCID fastcall GetUserDefaultLCID(void)
HGLOBAL fastcall GlobalReAlloc(HGLOBAL hMem, SIZE_T dwBytes, UINT uFlags)
BOOL fastcall DuplicateToken(HANDLE ExistingTokenHandle, SECURITY_IMPERSONATION_LEVEL ImpersonationLevel, PHANDLE DuplicateTokenHandle)
BOOL fastcall DuplicateTokenEx(HANDLE hExistingToken, DWORD dwDesiredAccess, LPSECURITY_ATTRIBUTES lpTokenAttributes, SECURITY_IMPERSONATION_LEVEL ImpersonationLevel, TOKEN_TYPE TokenType, PHANDLE phNewToken)
int fastcall ResolveLocaleName(LPCWSTR lpNameToResolve, LPWSTR lpLocaleName, int cchLocaleName)
BOOL fastcall IsValidLocaleName(LPCWSTR lpLocaleName)
BOOL fastcall ProcessIdToSessionId(DWORD dwProcessId, DWORD * pSessionId)
BOOL fastcall PathIsRelativeW(LPCWSTR pszPath)
int fastcall PathGetDriveNumberW(LPCWSTR pszPath)
BOOL fastcall TrySubmitThreadpoolCallback(PTP_SIMPLE_CALLBACK pfns, PVOID pv, PTP_CALLBACK_ENVIRON pcbe)
int fastcall GetThreadPriority(HANDLE hThread)
BOOL fastcall GetFileSecurityW(LPCWSTR lpFileName, SECURITY_INFORMATION RequestedInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor, DWORD nLength, LPDWORD lpnLengthNeeded)
void fastcall QuerySecurityAccessMask(SECURITY_INFORMATION SecurityInformation, LPDWORD DesiredAccess)
BOOL fastcall PathIsFileSpecW(LPCWSTR pszPath)
BOOL fastcall GetAce(PACL pAcl, DWORD dwAceIndex, LPVOID * pAce)
BOOL fastcall IsValidAcl(PACL pAcl)
BOOL fastcall SwitchToThread(void)
LPWSTR fastcall PathAddBackslashW(LPWSTR pszPath)
HRESULT fastcall StringCopyWorkerW(STRSAFE_LPWSTR pszDest, size_t cchDest, size_t * pcchNewDestLength, STRSAFE_PCNZWCH pszSrc, size_t cchToCopy)
BOOL fastcall EnumDateFormatsExEx(DATEFMT_ENUMPROCEXEX lpDateFmtEnumProcExEx, LPCWSTR lpLocaleName, DWORD dwFlags, LPARAM lParam)
BOOL fastcall EnumTimeFormatsEx(TIMEFMT_ENUMPROCEX lpTimeFmtEnumProcEx, LPCWSTR lpLocaleName, DWORD dwFlags, LPARAM lParam)
UINT fastcall GetSystemDirectoryW(LPWSTR lpBuffer, UINT uSize)
BOOL fastcall ImpersonateNamedPipeClient(HANDLE hNamedPipe)
BOOL fastcall EnumDeviceDrivers(LPVOID * lpImageBase, DWORD cb, LPDWORD lpcbNeeded)
LPTOP_LEVEL_EXCEPTION_FILTER fastcall SetUnhandledExceptionFilter(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
SIZE_T fastcall VirtualQueryEx(HANDLE hProcess, LPCVOID lpAddress, PMEMORY_BASIC_INFORMATION lpBuffer, SIZE_T dwLength)
DWORD fastcall GetProcessId(HANDLE Process)
UINT fastcall ResetWriteWatch(LPVOID lpBaseAddress, SIZE_T dwRegionSize)
BOOL fastcall SleepConditionVariableCS(PCONDITION_VARIABLE ConditionVariable, PCRITICAL_SECTION CriticalSection, DWORD dwMilliseconds)
BOOL fastcall SleepConditionVariableSRW(PCONDITION_VARIABLE ConditionVariable, PSRWLOCK SRWLock, DWORD dwMilliseconds, ULONG Flags)
LSTATUS fastcall RegOpenUserClassesRoot(HANDLE hToken, DWORD dwOptions, REGSAM samDesired, PHKEY phkResult)
LCID fastcall LocaleNameToLCID(LPCWSTR lpName, DWORD dwFlags)
UINT fastcall GetWriteWatch(DWORD dwFlags, PVOID lpBaseAddress, SIZE_T dwRegionSize, PVOID * lpAddresses, ULONG_PTR * lpdwCount, PULONG lpdwGranularity)
BOOL fastcall CallbackMayRunLong(PTP_CALLBACK_INSTANCE pci)
BOOL fastcall AccessCheckAndAuditAlarmW(LPCWSTR SubsystemName, LPVOID HandleId, LPWSTR ObjectTypeName, LPWSTR ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, DWORD DesiredAccess, PGENERIC_MAPPING GenericMapping, BOOL ObjectCreation, LPDWORD GrantedAccess, LPBOOL AccessStatus, LPBOOL pfGenerateOnClose)
HANDLE fastcall OpenThread(DWORD dwDesiredAccess, BOOL bInheritHandle, DWORD dwThreadId)
PUCHAR fastcall GetSidSubAuthorityCount(PSID pSid)
BOOL fastcall MakeAbsoluteSD(PSECURITY_DESCRIPTOR pSelfRelativeSecurityDescriptor, PSECURITY_DESCRIPTOR pAbsoluteSecurityDescriptor, LPDWORD lpdwAbsoluteSecurityDescriptorSize, PACL pDacl, LPDWORD lpdwDaclSize, PACL pSacl, LPDWORD lpdwSaclSize, PSID pOwner, LPDWORD lpdwOwnerSize, PSID pPrimaryGroup, LPDWORD lpdwPrimaryGroupSize)
DWORD fastcall SearchPathW(LPCWSTR lpPath, LPCWSTR lpFileName, LPCWSTR lpExtension, DWORD nBufferLength, LPWSTR lpBuffer, LPWSTR * lpFilePart)
int fastcall GetStringScripts(DWORD dwFlags, LPCWSTR lpString, int cchString, LPWSTR lpScripts, int cchScripts)
PTP_WORK fastcall CreateThreadpoolWork(PTP_WORK_CALLBACK pfnwk, PVOID pv, PTP_CALLBACK_ENVIRON pcbe)
BOOL fastcall CreateTimerQueueTimer(PHANDLE phNewTimer, HANDLE TimerQueue, WAITORTIMERCALLBACK Callback, PVOID Parameter, DWORD DueTime, DWORD Period, ULONG Flags)
BOOL fastcall GetFileSizeEx(HANDLE hFile, PLARGE_INTEGER lpFileSize)
HANDLE fastcall HeapCreate(DWORD flOptions, SIZE_T dwInitialSize, SIZE_T dwMaximumSize)
BOOL fastcall PrivilegeCheck(HANDLE ClientToken, PPRIVILEGE_SET RequiredPrivileges, LPBOOL pfResult)
SIZE_T fastcall LocalSize(HLOCAL hMem)
PTP_IO fastcall CreateThreadpoolIo(HANDLE fl, PTP_WIN32_IO_CALLBACK pfnio, PVOID pv, PTP_CALLBACK_ENVIRON pcbe)
BOOL fastcall LocalUnlock(HLOCAL hMem)
BOOL fastcall MakeSelfRelativeSD(PSECURITY_DESCRIPTOR pAbsoluteSecurityDescriptor, PSECURITY_DESCRIPTOR pSelfRelativeSecurityDescriptor, LPDWORD lpdwBufferLength)
LPVOID fastcall LocalLock(HLOCAL hMem)
BOOL fastcall SetThreadStackGuarantee(PULONG StackSizeInBytes)
DWORD fastcall GetEnvironmentVariableA(LPCSTR lpName, LPSTR lpBuffer, DWORD nSize)
DWORD fastcall QueueUserAPC(PAPCFUNC pfnAPC, HANDLE hThread, ULONG_PTR dwData)
HANDLE fastcall RegisterWaitForSingleObjectEx(HANDLE hObject, WAITORTIMERCALLBACK Callback, PVOID Context, ULONG dwMilliseconds, ULONG dwFlags)
BOOL fastcall IsValidSecurityDescriptor(PSECURITY_DESCRIPTOR pSecurityDescriptor)
int fastcall GetLocaleInfoA(LCID Locale, LCTYPE LCType, LPSTR lpLCData, int cchData)
BOOL fastcall VirtualUnlock(LPVOID lpAddress, SIZE_T dwSize)
void fastcall GetStartupInfoW(LPSTARTUPINFOW lpStartupInfo)
BOOL fastcall GetNamedPipeClientComputerNameW(HANDLE Pipe, LPWSTR ClientComputerName, ULONG ClientComputerNameLength)
BOOL fastcall GetNamedPipeAttribute(HANDLE Pipe, PIPE_ATTRIBUTE_TYPE AttributeType, PSTR AttributeName, PVOID AttributeValue, PSIZE_T AttributeValueLength)
BOOL fastcall DisableThreadLibraryCalls(HMODULE hLibModule)
HANDLE fastcall GetStdHandle(DWORD nStdHandle)
LSTATUS fastcall RegDisablePredefinedCacheEx(void)
BOOL fastcall InitializeAcl(PACL pAcl, DWORD nAclLength, DWORD dwAclRevision)
BOOL fastcall AddAce(PACL pAcl, DWORD dwAceRevision, DWORD dwStartingAceIndex, LPVOID pAceList, DWORD nAceListLength)
BOOL fastcall PeekNamedPipe(HANDLE hNamedPipe, LPVOID lpBuffer, DWORD nBufferSize, LPDWORD lpBytesRead, LPDWORD lpTotalBytesAvail, LPDWORD lpBytesLeftThisMessage)
BOOL fastcall GetThreadPreferredUILanguages(DWORD dwFlags, PULONG pulNumLanguages, PZZWSTR pwszLanguagesBuffer, PULONG pcchLanguagesBuffer)
DWORD fastcall TlsAlloc(void)
BOOL fastcall GetDiskFreeSpaceExA(LPCSTR lpDirectoryName, PULARGE_INTEGER lpFreeBytesAvailableToCaller, PULARGE_INTEGER lpTotalNumberOfBytes, PULARGE_INTEGER lpTotalNumberOfFreeBytes)
BOOL fastcall GetDiskFreeSpaceExW(LPCWSTR lpDirectoryName, PULARGE_INTEGER lpFreeBytesAvailableToCaller, PULARGE_INTEGER lpTotalNumberOfBytes, PULARGE_INTEGER lpTotalNumberOfFreeBytes)
BOOL fastcall DisconnectNamedPipe(HANDLE hNamedPipe)
BOOL fastcall QueryActCtxSettingsW(DWORD dwFlags, HANDLE hActCtx, PCWSTR settingsNameSpace, PCWSTR settingName, PWSTR pvBuffer, SIZE_T dwBuffer, SIZE_T * pdwWrittenOrRequired)
LSTATUS fastcall RegSetKeyValueW(HKEY hKey, LPCWSTR lpSubKey, LPCWSTR lpValueName, DWORD dwType, LPCVOID lpData, DWORD cbData)
BOOL fastcall GetProductInfo(DWORD dwOSMajorVersion, DWORD dwOSMinorVersion, DWORD dwSpMajorVersion, DWORD dwSpMinorVersion, PDWORD pdwReturnedProductType)
BOOL fastcall TlsFree(DWORD dwTlsIndex)
BOOL fastcall SetSecurityDescriptorDacl(PSECURITY_DESCRIPTOR pSecurityDescriptor, BOOL bDaclPresent, PACL pDacl, BOOL bDaclDefaulted)
LPVOID fastcall ConvertThreadToFiber(LPVOID lpParameter)
LPVOID fastcall ConvertThreadToFiberEx(LPVOID lpParameter, DWORD dwFlags)
LPWSTR fastcall StrChrIW(LPCWSTR lpStart, WCHAR wMatch)
BOOL fastcall ChrCmpIW(WCHAR w1, WCHAR w2)
int fastcall StrCmpIW(LPCWSTR psz1, LPCWSTR psz2)
BOOL fastcall GetSecurityDescriptorSacl(PSECURITY_DESCRIPTOR pSecurityDescriptor, LPBOOL lpbSaclPresent, PACL * pSacl, LPBOOL lpbSaclDefaulted)
BOOL fastcall InitializeSecurityDescriptor(PSECURITY_DESCRIPTOR pSecurityDescriptor, DWORD dwRevision)
PSID_IDENTIFIER_AUTHORITY fastcall GetSidIdentifierAuthority(PSID pSid)
BOOL fastcall ConnectNamedPipe(HANDLE hNamedPipe, LPOVERLAPPED lpOverlapped)
BOOL fastcall GetAclInformation(PACL pAcl, LPVOID pAclInformation, DWORD nAclInformationLength, ACL_INFORMATION_CLASS dwAclInformationClass)
BOOL fastcall CancelWaitableTimer(HANDLE hTimer)
BOOL fastcall DeleteTimerQueueTimer(HANDLE TimerQueue, HANDLE Timer, HANDLE CompletionEvent)
BOOL fastcall SetFileAttributesW(LPCWSTR lpFileName, DWORD dwFileAttributes)
BOOL fastcall WriteProcessMemory(HANDLE hProcess, LPVOID lpBaseAddress, LPCVOID lpBuffer, SIZE_T nSize, SIZE_T * lpNumberOfBytesWritten)
BOOL fastcall IsWow64Process(HANDLE hProcess, PBOOL Wow64Process)
LSTATUS fastcall RegOpenCurrentUser(REGSAM samDesired, PHKEY phkResult)
BOOL fastcall UnregisterWaitEx(HANDLE WaitHandle, HANDLE CompletionEvent)
HANDLE fastcall OpenFileById(HANDLE hVolumeHint, LPFILE_ID_DESCRIPTOR lpFileId, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwFlagsAndAttributes)
BOOL fastcall SetHandleInformation(HANDLE hObject, DWORD dwMask, DWORD dwFlags)
BOOL fastcall AddAccessAllowedAce(PACL pAcl, DWORD dwAceRevision, DWORD AccessMask, PSID pSid)
BOOL fastcall SetEnvironmentVariableW(LPCWSTR lpName, LPCWSTR lpValue)
DWORD fastcall GetProcessImageFileNameW(HANDLE hProcess, LPWSTR lpImageFileName, DWORD nSize)
LSTATUS fastcall SHRegEnumUSKeyW(HUSKEY hUSKey, DWORD dwIndex, LPWSTR pwzName, LPDWORD pcchName, SHREGENUM_FLAGS enumRegFlags)
BOOL fastcall PulseEvent(HANDLE hEvent)
SIZE_T fastcall GlobalSize(HGLOBAL hMem)
BOOL fastcall SetNamedPipeHandleState(HANDLE hNamedPipe, LPDWORD lpMode, LPDWORD lpMaxCollectionCount, LPDWORD lpCollectDataTimeout)
BOOL fastcall FlushFileBuffers(HANDLE hFile)
LPWSTR fastcall StrStrW(LPCWSTR lpFirst, LPCWSTR lpSrch)
BOOL fastcall AdjustTokenPrivileges(HANDLE TokenHandle, BOOL DisableAllPrivileges, PTOKEN_PRIVILEGES NewState, DWORD BufferLength, PTOKEN_PRIVILEGES PreviousState, PDWORD ReturnLength)
HRESULT fastcall SHCoCreateInstance(LPCWSTR pszCLSID, CLSID * pclsid, IUnknown * pUnkOuter, IID * riid, void * * ppv)
BOOL fastcall AddAccessAllowedAceEx(PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD AccessMask, PSID pSid)
BOOL fastcall ActivateActCtx(HANDLE hActCtx, ULONG_PTR * lpCookie)
DWORD fastcall FormatMessageA(DWORD dwFlags, LPCVOID lpSource, DWORD dwMessageId, DWORD dwLanguageId, LPSTR lpBuffer, DWORD nSize, va_list * Arguments)
BOOL fastcall DeactivateActCtx(DWORD dwFlags, ULONG_PTR ulCookie)
BOOL fastcall GetProcessMemoryInfo(HANDLE Process, PPROCESS_MEMORY_COUNTERS ppsmemCounters, DWORD cb)
DWORD fastcall GetLogicalDriveStringsW(DWORD nBufferLength, LPWSTR lpBuffer)
DWORD fastcall GetLogicalDrives(void)
BOOL fastcall FreeEnvironmentStringsW(LPWCH param_1)
LPVOID fastcall VirtualAllocEx(HANDLE hProcess, LPVOID lpAddress, SIZE_T dwSize, DWORD flAllocationType, DWORD flProtect)
LPVOID fastcall VirtualAllocExNuma(HANDLE hProcess, LPVOID lpAddress, SIZE_T dwSize, DWORD flAllocationType, DWORD flProtect, DWORD nndPreferred)
BOOL fastcall InitializeSid(PSID Sid, PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority, BYTE nSubAuthorityCount)
BOOL fastcall FindActCtxSectionStringW(DWORD dwFlags, GUID * lpExtensionGuid, ULONG ulSectionId, LPCWSTR lpStringToFind, PACTCTX_SECTION_KEYED_DATA ReturnedData)
BOOL fastcall GetHandleInformation(HANDLE hObject, LPDWORD lpdwFlags)
BOOL fastcall MoveFileExW(LPCWSTR lpExistingFileName, LPCWSTR lpNewFileName, DWORD dwFlags)
BOOL fastcall MoveFileWithProgressW(LPCWSTR lpExistingFileName, LPCWSTR lpNewFileName, LPPROGRESS_ROUTINE lpProgressRoutine, LPVOID lpData, DWORD dwFlags)
DWORD fastcall GetSidLengthRequired(UCHAR nSubAuthorityCount)
LPWSTR fastcall PathGetArgsW(LPCWSTR pszPath)
DWORD fastcall FlsAlloc(PFLS_CALLBACK_FUNCTION lpCallback)
BOOL fastcall GetVolumeNameForVolumeMountPointW(LPCWSTR lpszVolumeMountPoint, LPWSTR lpszVolumeName, DWORD cchBufferLength)
BOOL fastcall SetSecurityDescriptorOwner(PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID pOwner, BOOL bOwnerDefaulted)
void fastcall ReleaseActCtx(HANDLE hActCtx)
UINT fastcall GetACP(void)
BOOL fastcall SetSecurityDescriptorGroup(PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID pGroup, BOOL bGroupDefaulted)
PTP_WAIT fastcall CreateThreadpoolWait(PTP_WAIT_CALLBACK pfnwa, PVOID pv, PTP_CALLBACK_ENVIRON pcbe)
BOOL fastcall CreatePrivateObjectSecurityEx(PSECURITY_DESCRIPTOR ParentDescriptor, PSECURITY_DESCRIPTOR CreatorDescriptor, PSECURITY_DESCRIPTOR * NewDescriptor, GUID * ObjectType, BOOL IsContainerObject, ULONG AutoInheritFlags, HANDLE Token, PGENERIC_MAPPING GenericMapping)
BOOL fastcall IsValidLocale(LCID Locale, DWORD dwFlags)
BOOL fastcall QueueUserWorkItem(LPTHREAD_START_ROUTINE Function, PVOID Context, ULONG Flags)
void fastcall SwitchToFiber(LPVOID lpFiber)
LPWSTR fastcall StrPBrkW(LPCWSTR psz, LPCWSTR pszSet)
BOOL fastcall ConvertFiberToThread(void)
HANDLE fastcall OpenMutexW(DWORD dwDesiredAccess, BOOL bInheritHandle, LPCWSTR lpName)
int fastcall IdnToAscii(DWORD dwFlags, LPCWSTR lpUnicodeCharStr, int cchUnicodeChar, LPWSTR lpASCIICharStr, int cchASCIIChar)
LSTATUS fastcall SHRegWriteUSValueW(HUSKEY hUSKey, LPCWSTR pwzValue, DWORD dwType, void * pvData, DWORD cbData, DWORD dwFlags)
BOOL fastcall ImpersonateSelf(SECURITY_IMPERSONATION_LEVEL ImpersonationLevel)
BOOL fastcall GetFileTime(HANDLE hFile, LPFILETIME lpCreationTime, LPFILETIME lpLastAccessTime, LPFILETIME lpLastWriteTime)
BOOL fastcall SetConsoleCtrlHandler(PHANDLER_ROUTINE HandlerRoutine, BOOL Add)
int fastcall StrCSpnW(LPCWSTR lpStr, LPCWSTR lpSet)
BOOL fastcall SetFileInformationByHandle(HANDLE hFile, FILE_INFO_BY_HANDLE_CLASS FileInformationClass, LPVOID lpFileInformation, DWORD dwBufferSize)
BOOL fastcall LockFile(HANDLE hFile, DWORD dwFileOffsetLow, DWORD dwFileOffsetHigh, DWORD nNumberOfBytesToLockLow, DWORD nNumberOfBytesToLockHigh)
BOOL fastcall IsProcessorFeaturePresent(DWORD ProcessorFeature)
BOOL fastcall VirtualProtectEx(HANDLE hProcess, LPVOID lpAddress, SIZE_T dwSize, DWORD flNewProtect, PDWORD lpflOldProtect)
BOOL fastcall GetCurrentActCtx(HANDLE * lphActCtx)
BOOL fastcall HeapDestroy(HANDLE hHeap)
BOOL fastcall GetLogicalProcessorInformationEx(LOGICAL_PROCESSOR_RELATIONSHIP RelationshipType, PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX Buffer, PDWORD ReturnedLength)
HANDLE fastcall CreateNamedPipeW(LPCWSTR lpName, DWORD dwOpenMode, DWORD dwPipeMode, DWORD nMaxInstances, DWORD nOutBufferSize, DWORD nInBufferSize, DWORD nDefaultTimeOut, LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE fastcall CreateMutexA(LPSECURITY_ATTRIBUTES lpMutexAttributes, BOOL bInitialOwner, LPCSTR lpName)
HANDLE fastcall CreateMutexExA(LPSECURITY_ATTRIBUTES lpMutexAttributes, LPCSTR lpName, DWORD dwFlags, DWORD dwDesiredAccess)
HANDLE fastcall OpenPrivateNamespaceW(LPVOID lpBoundaryDescriptor, LPCWSTR lpAliasPrefix)
HANDLE fastcall CreatePrivateNamespaceW(LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes, LPVOID lpBoundaryDescriptor, LPCWSTR lpAliasPrefix)
void fastcall AddRefActCtx(HANDLE hActCtx)
BOOL fastcall RemoveDirectoryW(LPCWSTR lpPathName)
BOOL fastcall WriteFileEx(HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, LPOVERLAPPED lpOverlapped, LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL fastcall ReadFileEx(HANDLE hFile, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPOVERLAPPED lpOverlapped, LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL fastcall HeapSetInformation(HANDLE HeapHandle, HEAP_INFORMATION_CLASS HeapInformationClass, PVOID HeapInformation, SIZE_T HeapInformationLength)
BOOL fastcall PathAppendW(LPWSTR pszPath, LPCWSTR pMore)
BOOL fastcall IsProcessInJob(HANDLE ProcessHandle, HANDLE JobHandle, PBOOL Result)
void fastcall FreeLibraryAndExitThread(HMODULE hLibModule, DWORD dwExitCode)
DWORD fastcall ResumeThread(HANDLE hThread)
UINT fastcall GetTempFileNameA(LPCSTR lpPathName, LPCSTR lpPrefixString, UINT uUnique, LPSTR lpTempFileName)
UINT fastcall GetTempFileNameW(LPCWSTR lpPathName, LPCWSTR lpPrefixString, UINT uUnique, LPWSTR lpTempFileName)
BOOL fastcall ReadDirectoryChangesW(HANDLE hDirectory, LPVOID lpBuffer, DWORD nBufferLength, BOOL bWatchSubtree, DWORD dwNotifyFilter, LPDWORD lpBytesReturned, LPOVERLAPPED lpOverlapped, LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL fastcall CreateProcessW(LPCWSTR lpApplicationName, LPWSTR lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes, LPSECURITY_ATTRIBUTES lpThreadAttributes, BOOL bInheritHandles, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCWSTR lpCurrentDirectory, LPSTARTUPINFOW lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation)
BOOL fastcall UpdateProcThreadAttribute(LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList, DWORD dwFlags, DWORD_PTR Attribute, PVOID lpValue, SIZE_T cbSize, PVOID lpPreviousValue, PSIZE_T lpReturnSize)
BOOL fastcall DestroyPrivateObjectSecurity(PSECURITY_DESCRIPTOR * ObjectDescriptor)
BOOL fastcall IsThreadAFiber(void)
void fastcall PathRemoveExtensionW(LPWSTR pszPath)
BOOL fastcall GetNLSVersion(NLS_FUNCTION Function, LCID Locale, LPNLSVERSIONINFO lpVersionInformation)
BOOL fastcall GetNLSVersionEx(NLS_FUNCTION function, LPCWSTR lpLocaleName, LPNLSVERSIONINFOEX lpVersionInformation)
BOOL fastcall PathIsUNCServerShareW(LPCWSTR pszPath)
BOOL fastcall GetPerformanceInfo(PPERFORMANCE_INFORMATION pPerformanceInformation, DWORD cb)
LPWSTR fastcall PathCombineW(LPWSTR pszDest, LPCWSTR pszDir, LPCWSTR pszFile)
HANDLE fastcall CreateIoCompletionPort(HANDLE FileHandle, HANDLE ExistingCompletionPort, ULONG_PTR CompletionKey, DWORD NumberOfConcurrentThreads)
BOOL fastcall SetFileTime(HANDLE hFile, FILETIME * lpCreationTime, FILETIME * lpLastAccessTime, FILETIME * lpLastWriteTime)
BOOL fastcall PathIsUNCServerW(LPCWSTR pszPath)
BOOL fastcall SetKernelObjectSecurity(HANDLE Handle, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR SecurityDescriptor)
BOOL fastcall GetExitCodeProcess(HANDLE hProcess, LPDWORD lpExitCode)
BOOL fastcall VerQueryValueW(LPCVOID pBlock, LPCWSTR lpSubBlock, LPVOID * lplpBuffer, PUINT puLen)
BOOL fastcall EnumProcesses(DWORD * lpidProcess, DWORD cb, LPDWORD lpcbNeeded)
LPSTR fastcall CharPrevA(LPCSTR lpszStart, LPCSTR lpszCurrent)
BOOL fastcall GetSecurityDescriptorOwner(PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID * pOwner, LPBOOL lpbOwnerDefaulted)
HMODULE fastcall LoadLibraryW(LPCWSTR lpLibFileName)
BOOL fastcall GetVolumePathNameW(LPCWSTR lpszFileName, LPWSTR lpszVolumePathName, DWORD cchBufferLength)
BOOL fastcall GetFileVersionInfoW(LPCWSTR lptstrFilename, DWORD dwHandle, DWORD dwLen, LPVOID lpData)
BOOL fastcall CancelIoEx(HANDLE hFile, LPOVERLAPPED lpOverlapped)
DWORD fastcall GetFullPathNameA(LPCSTR lpFileName, DWORD nBufferLength, LPSTR lpBuffer, LPSTR * lpFilePart)
BOOL fastcall TransactNamedPipe(HANDLE hNamedPipe, LPVOID lpInBuffer, DWORD nInBufferSize, LPVOID lpOutBuffer, DWORD nOutBufferSize, LPDWORD lpBytesRead, LPOVERLAPPED lpOverlapped)
int fastcall GetDateFormatEx(LPCWSTR lpLocaleName, DWORD dwFlags, SYSTEMTIME * lpDate, LPCWSTR lpFormat, LPWSTR lpDateStr, int cchDate, LPCWSTR lpCalendar)
int fastcall GetDateFormatW(LCID Locale, DWORD dwFlags, SYSTEMTIME * lpDate, LPCWSTR lpFormat, LPWSTR lpDateStr, int cchDate)
BOOL fastcall HeapValidate(HANDLE hHeap, DWORD dwFlags, LPCVOID lpMem)
BOOL fastcall InitializeProcThreadAttributeList(LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList, DWORD dwAttributeCount, DWORD dwFlags, PSIZE_T lpSize)
BOOL fastcall GetUserPreferredUILanguages(DWORD dwFlags, PULONG pulNumLanguages, PZZWSTR pwszLanguagesBuffer, PULONG pcchLanguagesBuffer)
BOOL fastcall GetSecurityDescriptorGroup(PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID * pGroup, LPBOOL lpbGroupDefaulted)
BOOL fastcall PathCanonicalizeW(LPWSTR pszBuf, LPCWSTR pszPath)
BOOL fastcall FlsFree(DWORD dwFlsIndex)
LSTATUS fastcall SHRegCreateUSKeyW(LPCWSTR pwzPath, REGSAM samDesired, HUSKEY hRelativeUSKey, PHUSKEY phNewUSKey, DWORD dwFlags)
BOOL fastcall QueryActCtxW(DWORD dwFlags, HANDLE hActCtx, PVOID pvSubInstance, ULONG ulInfoClass, PVOID pvBuffer, SIZE_T cbBuffer, SIZE_T * pcbWrittenOrRequired)
BOOL fastcall CreateProcessAsUserW(HANDLE hToken, LPCWSTR lpApplicationName, LPWSTR lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes, LPSECURITY_ATTRIBUTES lpThreadAttributes, BOOL bInheritHandles, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCWSTR lpCurrentDirectory, LPSTARTUPINFOW lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation)
DWORD fastcall GetFileVersionInfoSizeW(LPCWSTR lptstrFilename, LPDWORD lpdwHandle)
LSTATUS fastcall SHRegEnumUSValueW(HUSKEY hUSkey, DWORD dwIndex, LPWSTR pszValueName, LPDWORD pcchValueName, LPDWORD pdwType, void * pvData, LPDWORD pcbData, SHREGENUM_FLAGS enumRegFlags)
HMODULE fastcall LoadLibraryA(LPCSTR lpLibFileName)
BOOL fastcall WaitNamedPipeW(LPCWSTR lpNamedPipeName, DWORD nTimeOut)
BOOL fastcall PathFileExistsA(LPCSTR pszPath)
DWORD fastcall GetFileAttributesA(LPCSTR lpFileName)
BOOL fastcall GetUILanguageInfo(DWORD dwFlags, PCZZWSTR pwmszLanguage, PZZWSTR pwszFallbackLanguages, PDWORD pcchFallbackLanguages, PDWORD pAttributes)
void fastcall DeleteFiber(LPVOID lpFiber)
LANGID fastcall GetSystemDefaultUILanguage(void)
LPWSTR fastcall GetCommandLineW(void)
BOOL fastcall GetLogicalProcessorInformation(PSYSTEM_LOGICAL_PROCESSOR_INFORMATION Buffer, PDWORD ReturnedLength)
BOOL fastcall GetExitCodeThread(HANDLE hThread, LPDWORD lpExitCode)
int fastcall GetTimeFormatEx(LPCWSTR lpLocaleName, DWORD dwFlags, SYSTEMTIME * lpTime, LPCWSTR lpFormat, LPWSTR lpTimeStr, int cchTime)
int fastcall GetTimeFormatW(LCID Locale, DWORD dwFlags, SYSTEMTIME * lpTime, LPCWSTR lpFormat, LPWSTR lpTimeStr, int cchTime)
DWORD fastcall GetCompressedFileSizeW(LPCWSTR lpFileName, LPDWORD lpFileSizeHigh)
BOOL fastcall StrToIntExW(LPCWSTR pszString, STIF_FLAGS dwFlags, int * piRet)
BOOL fastcall StrToInt64ExW(LPCWSTR pszString, STIF_FLAGS dwFlags, LONGLONG * pllRet)
BOOLEAN fastcall ClosePrivateNamespace(HANDLE Handle, ULONG Flags)
HANDLE fastcall CreateActCtxW(PCACTCTXW pActCtx)
BOOL fastcall SetPriorityClass(HANDLE hProcess, DWORD dwPriorityClass)
int fastcall StrCmpLogicalW(LPCWSTR psz1, LPCWSTR psz2)
BOOL fastcall GetSystemPreferredUILanguages(DWORD dwFlags, PULONG pulNumLanguages, PZZWSTR pwszLanguagesBuffer, PULONG pcchLanguagesBuffer)
BOOL fastcall AreFileApisANSI(void)
PTP_CLEANUP_GROUP fastcall CreateThreadpoolCleanupGroup(void)
HRESULT fastcall WerRegisterMemoryBlock(PVOID pvAddress, DWORD dwSize)
DWORD fastcall GetConsoleTitleW(LPWSTR lpConsoleTitle, DWORD nSize)
BOOL fastcall K32QueryWorkingSetEx(HANDLE hProcess, PVOID pv, DWORD cb)
HANDLE fastcall CreateTimerQueue(void)
BOOL fastcall QueryMemoryResourceNotification(HANDLE ResourceNotificationHandle, PBOOL ResourceState)
LPSTR fastcall GetCommandLineA(void)
BOOL fastcall CreateProcessA(LPCSTR lpApplicationName, LPSTR lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes, LPSECURITY_ATTRIBUTES lpThreadAttributes, BOOL bInheritHandles, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCSTR lpCurrentDirectory, LPSTARTUPINFOA lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation)
UINT fastcall GetDriveTypeA(LPCSTR lpRootPathName)
DWORD fastcall GetCurrentDirectoryW(DWORD nBufferLength, LPWSTR lpBuffer)
DWORD fastcall GetVersion(void)
BOOL fastcall SetProcessShutdownParameters(DWORD dwLevel, DWORD dwFlags)
BOOL fastcall ChangeTimerQueueTimer(HANDLE TimerQueue, HANDLE Timer, ULONG DueTime, ULONG Period)
HANDLE fastcall CreateWaitableTimerW(LPSECURITY_ATTRIBUTES lpTimerAttributes, BOOL bManualReset, LPCWSTR lpTimerName)
BOOL fastcall VirtualLock(LPVOID lpAddress, SIZE_T dwSize)
BOOL fastcall SetSecurityDescriptorSacl(PSECURITY_DESCRIPTOR pSecurityDescriptor, BOOL bSaclPresent, PACL pSacl, BOOL bSaclDefaulted)
HANDLE fastcall FindFirstChangeNotificationW(LPCWSTR lpPathName, BOOL bWatchSubtree, DWORD dwNotifyFilter)
BOOL fastcall ImpersonateAnonymousToken(HANDLE ThreadHandle)
BOOL fastcall CreateRestrictedToken(HANDLE ExistingTokenHandle, DWORD Flags, DWORD DisableSidCount, PSID_AND_ATTRIBUTES SidsToDisable, DWORD DeletePrivilegeCount, PLUID_AND_ATTRIBUTES PrivilegesToDelete, DWORD RestrictedSidCount, PSID_AND_ATTRIBUTES SidsToRestrict, PHANDLE NewTokenHandle)
int fastcall GetSystemDefaultLocaleName(LPWSTR lpLocaleName, int cchLocaleName)
LPWSTR fastcall PathSkipRootW(LPCWSTR pszPath)
HANDLE fastcall CreateMemoryResourceNotification(MEMORY_RESOURCE_NOTIFICATION_TYPE NotificationType)
HRESULT fastcall UrlCombineW(LPCWSTR pszBase, LPCWSTR pszRelative, LPWSTR pszCombined, LPDWORD pcchCombined, DWORD dwFlags)
LSTATUS fastcall SHRegQueryInfoUSKeyW(HUSKEY hUSKey, LPDWORD pcSubKeys, LPDWORD pcchMaxSubKeyLen, LPDWORD pcValues, LPDWORD pcchMaxValueNameLen, SHREGENUM_FLAGS enumRegFlags)
HANDLE fastcall CreateBoundaryDescriptorW(LPCWSTR Name, ULONG Flags)
BOOL fastcall FlushViewOfFile(LPCVOID lpBaseAddress, SIZE_T dwNumberOfBytesToFlush)
BOOL fastcall SetSecurityDescriptorControl(PSECURITY_DESCRIPTOR pSecurityDescriptor, SECURITY_DESCRIPTOR_CONTROL ControlBitsOfInterest, SECURITY_DESCRIPTOR_CONTROL ControlBitsToSet)
PTP_POOL fastcall CreateThreadpool(PVOID reserved)
BOOL fastcall AdjustTokenGroups(HANDLE TokenHandle, BOOL ResetToDefault, PTOKEN_GROUPS NewState, DWORD BufferLength, PTOKEN_GROUPS PreviousState, PDWORD ReturnLength)
int fastcall StrCmpNCA(LPCSTR lpStr1, LPCSTR lpStr2, int nChar)
BOOL fastcall AddMandatoryAce(PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD MandatoryPolicy, PSID pLabelSid)
HANDLE fastcall CreateEventExA(LPSECURITY_ATTRIBUTES lpEventAttributes, LPCSTR lpName, DWORD dwFlags, DWORD dwDesiredAccess)
BOOL fastcall SetTokenInformation(HANDLE TokenHandle, TOKEN_INFORMATION_CLASS TokenInformationClass, LPVOID TokenInformation, DWORD TokenInformationLength)
BOOL fastcall SetConsoleMode(HANDLE hConsoleHandle, DWORD dwMode)
BOOL fastcall TerminateProcess(HANDLE hProcess, UINT uExitCode)
LCID fastcall ConvertDefaultLocale(LCID Locale)
BOOL fastcall DeleteTimerQueue(HANDLE TimerQueue)
BOOL fastcall DeleteTimerQueueEx(HANDLE TimerQueue, HANDLE CompletionEvent)
DWORD fastcall GetProcessIdOfThread(HANDLE Thread)
BOOL fastcall GetNumaHighestNodeNumber(PULONG HighestNodeNumber)
BOOL fastcall VirtualFreeEx(HANDLE hProcess, LPVOID lpAddress, SIZE_T dwSize, DWORD dwFreeType)
BOOL fastcall GetComputerNameExA(COMPUTER_NAME_FORMAT NameType, LPSTR lpBuffer, LPDWORD nSize)
BOOL fastcall SetFileSecurityW(LPCWSTR lpFileName, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor)
void fastcall SetSecurityAccessMask(SECURITY_INFORMATION SecurityInformation, LPDWORD DesiredAccess)
int fastcall IdnToUnicode(DWORD dwFlags, LPCWSTR lpASCIICharStr, int cchASCIIChar, LPWSTR lpUnicodeCharStr, int cchUnicodeChar)
BOOL fastcall Wow64DisableWow64FsRedirection(PVOID * OldValue)
DWORD fastcall GetThreadId(HANDLE Thread)
BOOL fastcall AddSIDToBoundaryDescriptor(HANDLE * BoundaryDescriptor, PSID RequiredSid)
int fastcall StrToIntA(LPCSTR lpSrc)
DWORD fastcall GetPriorityClass(HANDLE hProcess)
BOOL fastcall ObjectOpenAuditAlarmW(LPCWSTR SubsystemName, LPVOID HandleId, LPWSTR ObjectTypeName, LPWSTR ObjectName, PSECURITY_DESCRIPTOR pSecurityDescriptor, HANDLE ClientToken, DWORD DesiredAccess, DWORD GrantedAccess, PPRIVILEGE_SET Privileges, BOOL ObjectCreation, BOOL AccessGranted, LPBOOL GenerateOnClose)
BOOL fastcall WriteFileGather(HANDLE hFile, FILE_SEGMENT_ELEMENT * aSegmentArray, DWORD nNumberOfBytesToWrite, LPDWORD lpReserved, LPOVERLAPPED lpOverlapped)
BOOL fastcall FindVolumeClose(HANDLE hFindVolume)
BOOL fastcall QueryProcessCycleTime(HANDLE ProcessHandle, PULONG64 CycleTime)
BOOL fastcall AllocateLocallyUniqueId(PLUID Luid)
BOOL fastcall FindNextChangeNotification(HANDLE hChangeHandle)
LPWSTR fastcall PathFindNextComponentW(LPCWSTR pszPath)
BOOL fastcall SetThreadpoolThreadMinimum(PTP_POOL ptpp, DWORD cthrdMic)
BOOL fastcall SetCurrentDirectoryW(LPCWSTR lpPathName)
void fastcall DeleteProcThreadAttributeList(LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList)
BOOL fastcall ReadFileScatter(HANDLE hFile, FILE_SEGMENT_ELEMENT * aSegmentArray, DWORD nNumberOfBytesToRead, LPDWORD lpReserved, LPOVERLAPPED lpOverlapped)
BOOL fastcall GetSystemTimeAdjustment(PDWORD lpTimeAdjustment, PDWORD lpTimeIncrement, PBOOL lpTimeAdjustmentDisabled)
UINT fastcall GetOEMCP(void)
DWORD fastcall GetSecurityDescriptorRMControl(PSECURITY_DESCRIPTOR SecurityDescriptor, PUCHAR RMControl)
HWND fastcall GetConsoleWindow(void)
BOOL fastcall GetThreadContext(HANDLE hThread, LPCONTEXT lpContext)
BOOL fastcall NeedCurrentDirectoryForExePathW(LPCWSTR ExeName)
LPCWSTR fastcall UrlGetLocationW(LPCWSTR psz1)
BOOL fastcall ObjectCloseAuditAlarmW(LPCWSTR SubsystemName, LPVOID HandleId, BOOL GenerateOnClose)
BOOL fastcall GetProcessorSystemCycleTime(USHORT Group, PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION Buffer, PDWORD ReturnedLength)
HGLOBAL fastcall GlobalHandle(LPCVOID pMem)
DWORD fastcall SuspendThread(HANDLE hThread)
HRESULT fastcall WerUnregisterMemoryBlock(PVOID pvAddress)
BOOL fastcall FreeResource(HGLOBAL hResData)
BOOL fastcall SetProcessWorkingSetSizeEx(HANDLE hProcess, SIZE_T dwMinimumWorkingSetSize, SIZE_T dwMaximumWorkingSetSize, DWORD Flags)
BOOL fastcall VerQueryValueA(LPCVOID pBlock, LPCSTR lpSubBlock, LPVOID * lplpBuffer, PUINT puLen)
DWORD fastcall SetSecurityDescriptorRMControl(PSECURITY_DESCRIPTOR SecurityDescriptor, PUCHAR RMControl)
BOOL fastcall K32QueryWorkingSet(HANDLE hProcess, PVOID pv, DWORD cb)
int fastcall GetCalendarInfoW(LCID Locale, CALID Calendar, CALTYPE CalType, LPWSTR lpCalData, int cchData, LPDWORD lpValue)
BOOL fastcall CheckRemoteDebuggerPresent(HANDLE hProcess, PBOOL pbDebuggerPresent)
BOOL fastcall IsInternetESCEnabled(void)
BOOL fastcall GetProcessWorkingSetSizeEx(HANDLE hProcess, PSIZE_T lpMinimumWorkingSetSize, PSIZE_T lpMaximumWorkingSetSize, PDWORD Flags)
BOOL fastcall SetFileValidData(HANDLE hFile, LONGLONG ValidDataLength)
BOOL fastcall CancelIo(HANDLE hFile)
BOOL fastcall GetProcessHandleCount(HANDLE hProcess, PDWORD pdwHandleCount)
BOOL fastcall EnumSystemLocalesA(LOCALE_ENUMPROCA lpLocaleEnumProc, DWORD dwFlags)
void fastcall PathStripPathW(LPWSTR pszPath)
BOOL fastcall HeapUnlock(HANDLE hHeap)
BOOL fastcall HeapLock(HANDLE hHeap)
int fastcall StrCmpCA(LPCSTR pszStr1, LPCSTR pszStr2)
BOOL fastcall SetProcessPreferredUILanguages(DWORD dwFlags, PCZZWSTR pwszLanguagesBuffer, PULONG pulNumLanguages)
BOOL fastcall SetThreadPriorityBoost(HANDLE hThread, BOOL bDisablePriorityBoost)
BOOL fastcall FindCloseChangeNotification(HANDLE hObject)
BOOL fastcall UrlIsNoHistoryW(LPCWSTR pszURL)
void fastcall OutputDebugStringW(LPCWSTR lpOutputString)
void fastcall OutputDebugStringA(LPCSTR lpOutputString)
void fastcall RaiseException(DWORD dwExceptionCode, DWORD dwExceptionFlags, DWORD nNumberOfArguments, ULONG_PTR * lpArguments)
HGLOBAL fastcall GlobalFree(HGLOBAL hMem)
HGLOBAL fastcall GlobalAlloc(UINT uFlags, SIZE_T dwBytes)
HANDLE fastcall FindFirstVolumeW(LPWSTR lpszVolumeName, DWORD cchBufferLength)
DWORD fastcall GetFinalPathNameByHandleW(HANDLE hFile, LPWSTR lpszFilePath, DWORD cchFilePath, DWORD dwFlags)
BOOL fastcall GetVolumePathNamesForVolumeNameW(LPCWSTR lpszVolumeName, LPWCH lpszVolumePathNames, DWORD cchBufferLength, PDWORD lpcchReturnLength)
BOOL fastcall FindNextVolumeW(HANDLE hFindVolume, LPWSTR lpszVolumeName, DWORD cchBufferLength)
void cdecl _amsg_exit(int param_1)
BOOL fastcall CreateHardLinkW(LPCWSTR lpFileName, LPCWSTR lpExistingFileName, LPSECURITY_ATTRIBUTES lpSecurityAttributes)
DWORD fastcall CharLowerBuffA(LPSTR lpsz, DWORD cchLength)
BOOL fastcall PathRelativePathToW(LPWSTR pszPath, LPCWSTR pszFrom, DWORD dwAttrFrom, LPCWSTR pszTo, DWORD dwAttrTo)
int fastcall GetDateFormatA(LCID Locale, DWORD dwFlags, SYSTEMTIME * lpDate, LPCSTR lpFormat, LPSTR lpDateStr, int cchDate)
int fastcall GetTimeFormatA(LCID Locale, DWORD dwFlags, SYSTEMTIME * lpTime, LPCSTR lpFormat, LPSTR lpTimeStr, int cchTime)
LSTATUS fastcall RegSaveKeyExW(HKEY hKey, LPCWSTR lpFile, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD Flags)
DWORD fastcall GetTempPathA(DWORD nBufferLength, LPSTR lpBuffer)
BOOL fastcall EnumResourceNamesW(HMODULE hModule, LPCWSTR lpType, ENUMRESNAMEPROCW lpEnumFunc, LONG_PTR lParam)
BOOL fastcall AttachConsole(DWORD dwProcessId)
BOOLEAN fastcall Wow64EnableWow64FsRedirection(BOOLEAN Wow64FsEnableRedirection)
BOOL fastcall SetProcessWorkingSetSize(HANDLE hProcess, SIZE_T dwMinimumWorkingSetSize, SIZE_T dwMaximumWorkingSetSize)
BOOL fastcall CreatePipe(PHANDLE hReadPipe, PHANDLE hWritePipe, LPSECURITY_ATTRIBUTES lpPipeAttributes, DWORD nSize)
UINT fastcall GetConsoleCP(void)
LSTATUS fastcall RegCopyTreeW(HKEY hKeySrc, LPCWSTR lpSubKey, HKEY hKeyDest)
UINT fastcall GetSystemDirectoryA(LPSTR lpBuffer, UINT uSize)
HANDLE fastcall FindFirstFileNameW(LPCWSTR lpFileName, DWORD dwFlags, LPDWORD StringLength, PWCHAR LinkName)
BOOL fastcall FindNextFileNameW(HANDLE hFindStream, LPDWORD StringLength, PWCHAR LinkName)
BOOL fastcall GetFileMUIPath(DWORD dwFlags, PCWSTR pcwszFilePath, PWSTR pwszLanguage, PULONG pcchLanguage, PWSTR pwszFileMUIPath, PULONG pcchFileMUIPath, PULONGLONG pululEnumerator)
BOOL fastcall GetFileVersionInfoA(LPCSTR lptstrFilename, DWORD dwHandle, DWORD dwLen, LPVOID lpData)
DWORD fastcall GetFileVersionInfoSizeA(LPCSTR lptstrFilename, LPDWORD lpdwHandle)
BOOL fastcall PathSearchAndQualifyW(LPCWSTR pszPath, LPWSTR pszBuf, UINT cchBuf)
BOOL fastcall ReadConsoleOutputA(HANDLE hConsoleOutput, PCHAR_INFO lpBuffer, COORD dwBufferSize, COORD dwBufferCoord, PSMALL_RECT lpReadRegion)
BOOL fastcall ReadConsoleOutputW(HANDLE hConsoleOutput, PCHAR_INFO lpBuffer, COORD dwBufferSize, COORD dwBufferCoord, PSMALL_RECT lpReadRegion)
BOOL fastcall WriteConsoleOutputW(HANDLE hConsoleOutput, CHAR_INFO * lpBuffer, COORD dwBufferSize, COORD dwBufferCoord, PSMALL_RECT lpWriteRegion)
BOOL fastcall FindNextFileA(HANDLE hFindFile, LPWIN32_FIND_DATAA lpFindFileData)
BOOL fastcall DeleteVolumeMountPointW(LPCWSTR lpszVolumeMountPoint)
BOOL fastcall GetSystemTimes(LPFILETIME lpIdleTime, LPFILETIME lpKernelTime, LPFILETIME lpUserTime)
BOOL fastcall SetConsoleTextAttribute(HANDLE hConsoleOutput, WORD wAttributes)
BOOL fastcall EnumResourceLanguagesExW(HMODULE hModule, LPCWSTR lpType, LPCWSTR lpName, ENUMRESLANGPROCW lpEnumFunc, LONG_PTR lParam, DWORD dwFlags, LANGID LangId)
DWORD fastcall SetThreadIdealProcessor(HANDLE hThread, DWORD dwIdealProcessor)
DWORD fastcall GetCurrentDirectoryA(DWORD nBufferLength, LPSTR lpBuffer)
HANDLE fastcall CreateConsoleScreenBuffer(DWORD dwDesiredAccess, DWORD dwShareMode, SECURITY_ATTRIBUTES * lpSecurityAttributes, DWORD dwFlags, LPVOID lpScreenBufferData)
BOOL fastcall FillConsoleOutputAttribute(HANDLE hConsoleOutput, WORD wAttribute, DWORD nLength, COORD dwWriteCoord, LPDWORD lpNumberOfAttrsWritten)
BOOL fastcall FillConsoleOutputCharacterW(HANDLE hConsoleOutput, WCHAR cCharacter, DWORD nLength, COORD dwWriteCoord, LPDWORD lpNumberOfCharsWritten)
BOOL fastcall CreateDirectoryA(LPCSTR lpPathName, LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL fastcall WriteConsoleOutputCharacterW(HANDLE hConsoleOutput, LPCWSTR lpCharacter, DWORD nLength, COORD dwWriteCoord, LPDWORD lpNumberOfCharsWritten)
BOOL fastcall GetProcessPreferredUILanguages(DWORD dwFlags, PULONG pulNumLanguages, PZZWSTR pwszLanguagesBuffer, PULONG pcchLanguagesBuffer)
BOOL fastcall ReadConsoleInputW(HANDLE hConsoleInput, PINPUT_RECORD lpBuffer, DWORD nLength, LPDWORD lpNumberOfEventsRead)
BOOL fastcall PeekConsoleInputW(HANDLE hConsoleInput, PINPUT_RECORD lpBuffer, DWORD nLength, LPDWORD lpNumberOfEventsRead)
HANDLE fastcall FindFirstFileA(LPCSTR lpFileName, LPWIN32_FIND_DATAA lpFindFileData)
BOOL fastcall SetConsoleCursorInfo(HANDLE hConsoleOutput, CONSOLE_CURSOR_INFO * lpConsoleCursorInfo)
BOOL fastcall SetConsoleOutputCP(UINT wCodePageID)
BOOL fastcall SetProcessAffinityUpdateMode(HANDLE hProcess, DWORD dwFlags)
BOOL fastcall SetConsoleActiveScreenBuffer(HANDLE hConsoleOutput)
BOOL fastcall ReadConsoleW(HANDLE hConsoleInput, LPVOID lpBuffer, DWORD nNumberOfCharsToRead, LPDWORD lpNumberOfCharsRead, PCONSOLE_READCONSOLE_CONTROL pInputControl)
LSTATUS fastcall RegUnLoadKeyW(HKEY hKey, LPCWSTR lpSubKey)
DWORD fastcall GetCompressedFileSizeA(LPCSTR lpFileName, LPDWORD lpFileSizeHigh)
BOOL fastcall FreeConsole(void)
BOOL fastcall SetConsoleCursorPosition(HANDLE hConsoleOutput, COORD dwCursorPosition)
BOOL fastcall SetConsoleTitleW(LPCWSTR lpConsoleTitle)
int fastcall FindNLSString(LCID Locale, DWORD dwFindNLSStringFlags, LPCWSTR lpStringSource, int cchSource, LPCWSTR lpStringValue, int cchValue, LPINT pcchFound)
BOOL fastcall GetCurrentConsoleFontEx(HANDLE hConsoleOutput, BOOL bMaximumWindow, PCONSOLE_FONT_INFOEX lpConsoleCurrentFontEx)
BOOL fastcall GetConsoleCursorInfo(HANDLE hConsoleOutput, PCONSOLE_CURSOR_INFO lpConsoleCursorInfo)
COORD fastcall GetLargestConsoleWindowSize(HANDLE hConsoleOutput)
LPWSTR fastcall lstrcpynW(LPWSTR lpString1, LPCWSTR lpString2, int iMaxLength)
DWORD fastcall VerLanguageNameW(DWORD wLang, LPWSTR szLang, DWORD cchLang)
BOOL fastcall SetThreadGroupAffinity(HANDLE hThread, GROUP_AFFINITY * GroupAffinity, PGROUP_AFFINITY PreviousGroupAffinity)
BOOL fastcall DeleteAce(PACL pAcl, DWORD dwAceIndex)
BOOL fastcall AddAccessDeniedAce(PACL pAcl, DWORD dwAceRevision, DWORD AccessMask, PSID pSid)
DWORD fastcall GetMappedFileNameW(HANDLE hProcess, LPVOID lpv, LPWSTR lpFilename, DWORD nSize)
LSTATUS fastcall RegLoadKeyW(HKEY hKey, LPCWSTR lpSubKey, LPCWSTR lpFile)
DWORD fastcall SearchPathA(LPCSTR lpPath, LPCSTR lpFileName, LPCSTR lpExtension, DWORD nBufferLength, LPSTR lpBuffer, LPSTR * lpFilePart)
void cdecl __security_check_cookie(uintptr_t _StackCookie)
void cdecl __report_gsfailure(uintptr_t _StackCookie)
void cdecl __security_init_cookie(void)
EXCEPTION_DISPOSITION __C_specific_handler(_EXCEPTION_RECORD * ExceptionRecord, void * EstablisherFrame, _CONTEXT * ContextRecord, _DISPATCHER_CONTEXT * DispatcherContext)
int cdecl _wcsicmp(wchar_t * _Str1, wchar_t * _Str2)
wchar_t * cdecl wcsrchr(wchar_t * _Str, wchar_t _Ch)
PRUNTIME_FUNCTION fastcall RtlLookupFunctionEntry(DWORD64 ControlPc, PDWORD64 ImageBase, PUNWIND_HISTORY_TABLE HistoryTable)
PEXCEPTION_ROUTINE fastcall RtlVirtualUnwind(DWORD HandlerType, DWORD64 ImageBase, DWORD64 ControlPc, PRUNTIME_FUNCTION FunctionEntry, PCONTEXT ContextRecord, PVOID * HandlerData, PDWORD64 EstablisherFrame, PKNONVOLATILE_CONTEXT_POINTERS ContextPointers)
__time64_t cdecl _time64(__time64_t * _Time)
__time64_t cdecl time(__time64_t * _Time)
HANDLE fastcall GetCurrentThread(void)
int cdecl memcmp(void * _Buf1, void * _Buf2, size_t _Size)
void * cdecl memcpy(void * _Dst, void * _Src, size_t _Size)
void * cdecl memmove(void * _Dst, void * _Src, size_t _Size)
void * cdecl memset(void * _Dst, int _Val, size_t _Size)
double cdecl sqrt(double _X)
int cdecl wcscmp(wchar_t * _Str1, wchar_t * _Str2)
LPVOID fastcall TlsGetValue(DWORD dwTlsIndex)
BOOL fastcall QueryFullProcessImageNameA(HANDLE hProcess, DWORD dwFlags, LPSTR lpExeName, PDWORD lpdwSize)
BOOL fastcall IsCharLowerW(WCHAR ch)
LPSTR fastcall CharNextExA(WORD CodePage, LPCSTR lpCurrentChar, DWORD dwFlags)
int fastcall StrCSpnA(LPCSTR lpStr, LPCSTR lpSet)
LPWSTR fastcall StrChrNIW(LPCWSTR lpStart, WCHAR wMatch, UINT cchMax)
int fastcall StrCmpNA(LPCSTR lpStr1, LPCSTR lpStr2, int nChar)
LPWSTR fastcall StrRChrIW(LPCWSTR lpStart, LPCWSTR lpEnd, WCHAR wMatch)
HRESULT fastcall UrlCombineA(LPCSTR pszBase, LPCSTR pszRelative, LPSTR pszCombined, LPDWORD pcchCombined, DWORD dwFlags)
BOOL fastcall GetStringTypeA(LCID Locale, DWORD dwInfoType, LPCSTR lpSrcStr, int cchSrc, LPWORD lpCharType)
int fastcall GetNumberFormatEx(LPCWSTR lpLocaleName, DWORD dwFlags, LPCWSTR lpValue, NUMBERFMTW * lpFormat, LPWSTR lpNumberStr, int cchNumber)
BOOL fastcall IsNormalizedString(NORM_FORM NormForm, LPCWSTR lpString, int cwLength)
int fastcall NormalizeString(NORM_FORM NormForm, LPCWSTR lpSrcString, int cwSrcLength, LPWSTR lpDstString, int cwDstLength)
HRESULT fastcall PathMatchSpecExW(LPCWSTR pszFile, LPCWSTR pszSpec, DWORD dwFlags)
BOOL fastcall PathUnExpandEnvStringsW(LPCWSTR pszPath, LPWSTR pszBuf, UINT cchBuf)
BOOL fastcall PathAddExtensionW(LPWSTR pszPath, LPCWSTR pszExt)
HRESULT fastcall StringCopyWorkerA(STRSAFE_LPSTR pszDest, size_t cchDest, size_t * pcchNewDestLength, STRSAFE_PCNZCH pszSrc, size_t cchToCopy)
BOOL fastcall PathIsUNCA(LPCSTR pszPath)
BOOL fastcall PathRemoveFileSpecA(LPSTR pszPath)
BOOL fastcall PathAppendA(LPSTR pszPath, LPCSTR pMore)
void fastcall PathStripPathA(LPSTR pszPath)
BOOL fastcall EnumProcessModulesEx(HANDLE hProcess, HMODULE * lphModule, DWORD cb, LPDWORD lpcbNeeded, DWORD dwFilterFlag)
DWORD fastcall GetProcessImageFileNameA(HANDLE hProcess, LPSTR lpImageFileName, DWORD nSize)
BOOL fastcall PeekConsoleInputA(HANDLE hConsoleInput, PINPUT_RECORD lpBuffer, DWORD nLength, LPDWORD lpNumberOfEventsRead)
BOOL fastcall WriteConsoleOutputCharacterA(HANDLE hConsoleOutput, LPCSTR lpCharacter, DWORD nLength, COORD dwWriteCoord, LPDWORD lpNumberOfCharsWritten)
BOOL fastcall AreAllAccessesGranted(DWORD GrantedAccess, DWORD DesiredAccess)
BOOL fastcall CreatePrivateObjectSecurity(PSECURITY_DESCRIPTOR ParentDescriptor, PSECURITY_DESCRIPTOR CreatorDescriptor, PSECURITY_DESCRIPTOR * NewDescriptor, BOOL IsDirectoryObject, HANDLE Token, PGENERIC_MAPPING GenericMapping)
SIZE_T fastcall GetLargePageMinimum(void)
BOOL fastcall GetProcessWorkingSetSize(HANDLE hProcess, PSIZE_T lpMinimumWorkingSetSize, PSIZE_T lpMaximumWorkingSetSize)
BOOL fastcall CallNamedPipeW(LPCWSTR lpNamedPipeName, LPVOID lpInBuffer, DWORD nInBufferSize, LPVOID lpOutBuffer, DWORD nOutBufferSize, LPDWORD lpBytesRead, DWORD nTimeOut)
BOOL fastcall Wow64RevertWow64FsRedirection(PVOID OlValue)
DWORD fastcall SignalObjectAndWait(HANDLE hObjectToSignal, HANDLE hObjectToWaitOn, DWORD dwMilliseconds, BOOL bAlertable)
BOOL fastcall WaitForDebugEvent(LPDEBUG_EVENT lpDebugEvent, DWORD dwMilliseconds)
BOOL fastcall GetThreadIOPendingFlag(HANDLE hThread, PBOOL lpIOIsPending)
BOOL fastcall GetThreadPriorityBoost(HANDLE hThread, PBOOL pDisablePriorityBoost)
BOOL fastcall SetThreadContext(HANDLE hThread, CONTEXT * lpContext)
BOOL fastcall SetThreadIdealProcessorEx(HANDLE hThread, PPROCESSOR_NUMBER lpIdealProcessor, PPROCESSOR_NUMBER lpPreviousIdealProcessor)
BOOL fastcall GetQueuedCompletionStatusEx(HANDLE CompletionPort, LPOVERLAPPED_ENTRY lpCompletionPortEntries, ULONG ulCount, PULONG ulNumEntriesRemoved, DWORD dwMilliseconds, BOOL fAlertable)
DWORD fastcall GetThreadErrorMode(void)
BOOL fastcall GetFileAttributesExA(LPCSTR lpFileName, GET_FILEEX_INFO_LEVELS fInfoLevelId, LPVOID lpFileInformation)
UINT fastcall GetSystemWow64DirectoryA(LPSTR lpBuffer, UINT uSize)
UINT fastcall GetWindowsDirectoryA(LPSTR lpBuffer, UINT uSize)
BOOL fastcall HeapWalk(HANDLE hHeap, LPPROCESS_HEAP_ENTRY lpEntry)
LPSTR fastcall lstrcpyn(LPSTR lpString1, LPCSTR lpString2, int iMaxLength)
BOOL fastcall GetFileVersionInfoExA(DWORD dwFlags, LPCSTR lpwstrFilename, DWORD dwHandle, DWORD dwLen, LPVOID lpData)
DWORD fastcall GetFileVersionInfoSizeExA(DWORD dwFlags, LPCSTR lpwstrFilename, LPDWORD lpdwHandle)
DWORD fastcall VerFindFileA(DWORD uFlags, LPCSTR szFileName, LPCSTR szWinDir, LPCSTR szAppDir, LPSTR szCurDir, PUINT lpuCurDirLen, LPSTR szDestDir, PUINT lpuDestDirLen)
DWORD fastcall VerFindFileW(DWORD uFlags, LPCWSTR szFileName, LPCWSTR szWinDir, LPCWSTR szAppDir, LPWSTR szCurDir, PUINT lpuCurDirLen, LPWSTR szDestDir, PUINT lpuDestDirLen)
DWORD fastcall DsBindWithSpnExW(LPCWSTR DomainControllerName, LPCWSTR DnsDomainName, RPC_AUTH_IDENTITY_HANDLE AuthIdentity, LPCWSTR ServicePrincipalName, DWORD BindFlags, HANDLE * phDS)
DWORD fastcall DsCrackNamesW(HANDLE hDS, DS_NAME_FLAGS flags, DS_NAME_FORMAT formatOffered, DS_NAME_FORMAT formatDesired, DWORD cNames, LPCWSTR * rpNames, PDS_NAME_RESULTW * ppResult)
void fastcall DsFreeDomainControllerInfoW(DWORD InfoLevel, DWORD cInfo, void * pInfo)
void fastcall DsFreeNameResultW(DS_NAME_RESULTW * pResult)
void fastcall DsFreePasswordCredentials(RPC_AUTH_IDENTITY_HANDLE AuthIdentity)
DWORD fastcall DsGetDomainControllerInfoW(HANDLE hDs, LPCWSTR DomainName, DWORD InfoLevel, DWORD * pcOut, void * * ppInfo)
DWORD fastcall DsMakePasswordCredentialsW(LPCWSTR User, LPCWSTR Domain, LPCWSTR Password, RPC_AUTH_IDENTITY_HANDLE * pAuthIdentity)
DWORD fastcall DsUnBindW(HANDLE * phDS)
BOOL fastcall ZombifyActCtx(HANDLE hActCtx)
HRESULT fastcall GetApplicationRecoveryCallback(HANDLE hProcess, APPLICATION_RECOVERY_CALLBACK * pRecoveryCallback, PVOID * ppvParameter, PDWORD pdwPingInterval, PDWORD pdwFlags)
HRESULT fastcall UnregisterApplicationRestart(void)
BOOL fastcall IsCharUpperW(WCHAR ch)
LPSTR fastcall CharPrevExA(WORD CodePage, LPCSTR lpStart, LPCSTR lpCurrentChar, DWORD dwFlags)
LPSTR fastcall CharUpperA(LPSTR lpsz)
DWORD fastcall CharUpperBuffA(LPSTR lpsz, DWORD cchLength)
BOOL fastcall IsCharAlphaA(CHAR ch)
BOOL fastcall IsCharAlphaNumericA(CHAR ch)
BOOL fastcall IsCharLowerA(CHAR ch)
BOOL fastcall IsCharUpperA(CHAR ch)
HANDLE fastcall ReOpenFile(HANDLE hOriginalFile, DWORD dwDesiredAccess, DWORD dwShareMode, DWORD dwFlagsAndAttributes)
BOOLEAN fastcall CreateSymbolicLinkW(LPCWSTR lpSymlinkFileName, LPCWSTR lpTargetFileName, DWORD dwFlags)
UINT fastcall GlobalFlags(HGLOBAL hMem)
UINT fastcall LocalFlags(HLOCAL hMem)
BOOL fastcall CreateDirectoryExW(LPCWSTR lpTemplateDirectory, LPCWSTR lpNewDirectory, LPSECURITY_ATTRIBUTES lpSecurityAttributes)
int fastcall StrCSpnIA(LPCSTR lpStr, LPCSTR lpSet)
int fastcall StrCSpnIW(LPCWSTR lpStr, LPCWSTR lpSet)
LPSTR fastcall StrCatBuffA(LPSTR pszDest, LPCSTR pszSrc, int cchDestBuffSize)
LPWSTR fastcall StrCatBuffW(LPWSTR pszDest, LPCWSTR pszSrc, int cchDestBuffSize)
DWORD fastcall StrCatChainW(LPWSTR pszDst, DWORD cchDst, DWORD ichAt, LPCWSTR pszSrc)
LPWSTR fastcall StrCpyNW(LPWSTR psz1, LPCWSTR psz2, int cchMax)
LPSTR fastcall StrDupA(LPCSTR lpSrch)
LPSTR fastcall StrPBrkA(LPCSTR psz, LPCSTR pszSet)
LPSTR fastcall StrRChrA(LPCSTR lpStart, LPCSTR lpEnd, WORD wMatch)
LPSTR fastcall StrRChrIA(LPCSTR lpStart, LPCSTR lpEnd, WORD wMatch)
LPSTR fastcall StrRStrIA(LPCSTR lpSource, LPCSTR lpLast, LPCSTR lpSrch)
int fastcall StrSpnA(LPCSTR psz, LPCSTR pszSet)
int fastcall StrSpnW(LPCWSTR psz, LPCWSTR pszSet)
LPWSTR fastcall StrStrNIW(LPCWSTR lpFirst, LPCWSTR lpSrch, UINT cchMax)
LPWSTR fastcall StrStrNW(LPCWSTR lpFirst, LPCWSTR lpSrch, UINT cchMax)
BOOL fastcall StrToInt64ExA(LPCSTR pszString, STIF_FLAGS dwFlags, LONGLONG * pllRet)
BOOL fastcall StrToIntExA(LPCSTR pszString, STIF_FLAGS dwFlags, int * piRet)
BOOL fastcall StrTrimA(LPSTR psz, LPCSTR pszTrimChars)
BOOL fastcall IsCharSpaceA(CHAR wch)
BOOL fastcall CreateHardLinkA(LPCSTR lpFileName, LPCSTR lpExistingFileName, LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LSTATUS fastcall SHRegCreateUSKeyA(LPCSTR pszPath, REGSAM samDesired, HUSKEY hRelativeUSKey, PHUSKEY phNewUSKey, DWORD dwFlags)
LSTATUS fastcall SHRegDeleteEmptyUSKeyA(HUSKEY hUSKey, LPCSTR pszSubKey, SHREGDEL_FLAGS delRegFlags)
LSTATUS fastcall SHRegDeleteEmptyUSKeyW(HUSKEY hUSKey, LPCWSTR pwzSubKey, SHREGDEL_FLAGS delRegFlags)
LSTATUS fastcall SHRegDeleteUSValueA(HUSKEY hUSKey, LPCSTR pszValue, SHREGDEL_FLAGS delRegFlags)
LSTATUS fastcall SHRegDeleteUSValueW(HUSKEY hUSKey, LPCWSTR pwzValue, SHREGDEL_FLAGS delRegFlags)
BOOL fastcall SHRegGetBoolUSValueA(LPCSTR pszSubKey, LPCSTR pszValue, BOOL fIgnoreHKCU, BOOL fDefault)
HRESULT fastcall PathCreateFromUrlA(LPCSTR pszUrl, LPSTR pszPath, LPDWORD pcchPath, DWORD dwFlags)
HRESULT fastcall PathCreateFromUrlAlloc(LPCWSTR pszIn, LPWSTR * ppszOut, DWORD dwFlags)
HRESULT fastcall UrlCanonicalizeA(LPCSTR pszUrl, LPSTR pszCanonicalized, LPDWORD pcchCanonicalized, DWORD dwFlags)
int fastcall UrlCompareA(LPCSTR psz1, LPCSTR psz2, BOOL fIgnoreSlash)
int fastcall UrlCompareW(LPCWSTR psz1, LPCWSTR psz2, BOOL fIgnoreSlash)
HRESULT fastcall UrlCreateFromPathA(LPCSTR pszPath, LPSTR pszUrl, LPDWORD pcchUrl, DWORD dwFlags)
HRESULT fastcall UrlEscapeA(LPCSTR pszUrl, LPSTR pszEscaped, LPDWORD pcchEscaped, DWORD dwFlags)
HRESULT fastcall UrlFixupW(LPCWSTR pszIn, LPWSTR pszOut, DWORD cchOut)
LPCSTR fastcall UrlGetLocationA(LPCSTR psz1)
HRESULT fastcall UrlHashA(LPCSTR pszUrl, LPBYTE pbHash, DWORD cbHash)
HRESULT fastcall UrlHashW(LPCWSTR pszUrl, LPBYTE pbHash, DWORD cbHash)
BOOL fastcall UrlIsA(LPCSTR pszUrl, URLIS UrlIs)
BOOL fastcall UrlIsNoHistoryA(LPCSTR pszURL)
BOOL fastcall UrlIsOpaqueA(LPCSTR pszURL)
BOOL fastcall UrlIsOpaqueW(LPCWSTR pszURL)
void fastcall DebugBreak(void)
int fastcall LCMapStringA(LCID Locale, DWORD dwMapFlags, LPCSTR lpSrcStr, int cchSrc, LPSTR lpDestStr, int cchDest)
BOOL fastcall IsValidLanguageGroup(LGRPID LanguageGroup, DWORD dwFlags)
BOOL fastcall SetCalendarInfoW(LCID Locale, CALID Calendar, CALTYPE CalType, LPCWSTR lpCalData)
BOOL fastcall SetLocaleInfoW(LCID Locale, LCTYPE LCType, LPCWSTR lpLCData)
DWORD fastcall VerLanguageNameA(DWORD wLang, LPSTR szLang, DWORD cchLang)
BOOL fastcall EnumCalendarInfoExW(CALINFO_ENUMPROCEXW lpCalInfoEnumProcEx, LCID Locale, CALID Calendar, CALTYPE CalType)
BOOL fastcall EnumCalendarInfoW(CALINFO_ENUMPROCW lpCalInfoEnumProc, LCID Locale, CALID Calendar, CALTYPE CalType)
BOOL fastcall EnumDateFormatsExW(DATEFMT_ENUMPROCEXW lpDateFmtEnumProcEx, LCID Locale, DWORD dwFlags)
BOOL fastcall EnumDateFormatsW(DATEFMT_ENUMPROCW lpDateFmtEnumProc, LCID Locale, DWORD dwFlags)
BOOL fastcall EnumLanguageGroupLocalesW(LANGGROUPLOCALE_ENUMPROCW lpLangGroupLocaleEnumProc, LGRPID LanguageGroup, DWORD dwFlags, LONG_PTR lParam)
BOOL fastcall EnumSystemCodePagesW(CODEPAGE_ENUMPROCW lpCodePageEnumProc, DWORD dwFlags)
BOOL fastcall EnumSystemLanguageGroupsW(LANGUAGEGROUP_ENUMPROCW lpLanguageGroupEnumProc, DWORD dwFlags, LONG_PTR lParam)
BOOL fastcall EnumSystemLocalesW(LOCALE_ENUMPROCW lpLocaleEnumProc, DWORD dwFlags)
BOOL fastcall EnumTimeFormatsW(TIMEFMT_ENUMPROCW lpTimeFmtEnumProc, LCID Locale, DWORD dwFlags)
int fastcall FoldStringW(DWORD dwMapFlags, LPCWSTR lpSrcStr, int cchSrc, LPWSTR lpDestStr, int cchDest)
int fastcall GetCurrencyFormatEx(LPCWSTR lpLocaleName, DWORD dwFlags, LPCWSTR lpValue, CURRENCYFMTW * lpFormat, LPWSTR lpCurrencyStr, int cchCurrency)
int fastcall GetCurrencyFormatW(LCID Locale, DWORD dwFlags, LPCWSTR lpValue, CURRENCYFMTW * lpFormat, LPWSTR lpCurrencyStr, int cchCurrency)
int fastcall GetDurationFormatEx(LPCWSTR lpLocaleName, DWORD dwFlags, SYSTEMTIME * lpDuration, ULONGLONG ullDuration, LPCWSTR lpFormat, LPWSTR lpDurationStr, int cchDuration)
BOOL fastcall GetFileMUIInfo(DWORD dwFlags, PCWSTR pcwszFilePath, PFILEMUIINFO pFileMUIInfo, DWORD * pcbFileMUIInfo)
int fastcall IdnToNameprepUnicode(DWORD dwFlags, LPCWSTR lpUnicodeCharStr, int cchUnicodeChar, LPWSTR lpNameprepCharStr, int cchNameprepChar)
BOOL fastcall VerifyScripts(DWORD dwFlags, LPCWSTR lpLocaleScripts, int cchLocaleScripts, LPCWSTR lpTestScripts, int cchTestScripts)
BOOL fastcall SetUserGeoID(GEOID GeoId)
BOOL fastcall IsNLSDefinedString(NLS_FUNCTION Function, DWORD dwFlags, LPNLSVERSIONINFO lpVersionInformation, LPCWSTR lpString, INT cchStr)
DWORD fastcall GetLongPathNameA(LPCSTR lpszShortPath, LPSTR lpszLongPath, DWORD cchBuffer)
UINT fastcall GetSystemWindowsDirectoryA(LPSTR lpBuffer, UINT uSize)
BOOL fastcall QueryThreadpoolStackInformation(PTP_POOL ptpp, PTP_POOL_STACK_INFORMATION ptpsi)
BOOL fastcall SetThreadpoolStackInformation(PTP_POOL ptpp, PTP_POOL_STACK_INFORMATION ptpsi)
void cdecl _c_exit(void)
void cdecl _cexit(void)
void cdecl _exit(int _Code)
void cdecl exit(int _Code)
int cdecl wprintf(wchar_t * _Format, ...)
BOOL fastcall PathIsLFNFileSpecW(LPCWSTR lpName)
BOOL fastcall PathIsSameRootW(LPCWSTR pszPath1, LPCWSTR pszPath2)
BOOL fastcall PathRenameExtensionW(LPWSTR pszPath, LPCWSTR pszExt)
LPSTR fastcall PathAddBackslashA(LPSTR pszPath)
LPSTR fastcall PathCombineA(LPSTR pszDest, LPCSTR pszDir, LPCSTR pszFile)
LPSTR fastcall PathFindExtensionA(LPCSTR pszPath)
BOOL fastcall PathIsUNCServerA(LPCSTR pszPath)
BOOL fastcall PathIsUNCServerShareA(LPCSTR pszPath)
BOOL fastcall PathMatchSpecA(LPCSTR pszFile, LPCSTR pszSpec)
HRESULT fastcall PathMatchSpecExA(LPCSTR pszFile, LPCSTR pszSpec, DWORD dwFlags)
int fastcall PathParseIconLocationA(LPSTR pszIconFile)
BOOL fastcall PathQuoteSpacesA(LPSTR lpsz)
void fastcall PathRemoveBlanksA(LPSTR pszPath)
BOOL fastcall PathUnExpandEnvStringsA(LPCSTR pszPath, LPSTR pszBuf, UINT cchBuf)
BOOL fastcall PathUnquoteSpacesA(LPSTR lpsz)
BOOL fastcall PathAddExtensionA(LPSTR pszPath, LPCSTR pszExt)
BOOL fastcall PathCanonicalizeA(LPSTR pszBuf, LPCSTR pszPath)
LPSTR fastcall PathFindNextComponentA(LPCSTR pszPath)
LPSTR fastcall PathGetArgsA(LPCSTR pszPath)
UINT fastcall PathGetCharTypeA(UCHAR ch)
BOOL fastcall PathIsFileSpecA(LPCSTR pszPath)
BOOL fastcall PathIsLFNFileSpecA(LPCSTR lpName)
BOOL fastcall PathIsRelativeA(LPCSTR pszPath)
BOOL fastcall PathIsSameRootA(LPCSTR pszPath1, LPCSTR pszPath2)
BOOL fastcall PathRelativePathToA(LPSTR pszPath, LPCSTR pszFrom, DWORD dwAttrFrom, LPCSTR pszTo, DWORD dwAttrTo)
LPSTR fastcall PathRemoveBackslashA(LPSTR pszPath)
void fastcall PathRemoveExtensionA(LPSTR pszPath)
BOOL fastcall PathRenameExtensionA(LPSTR pszPath, LPCSTR pszExt)
BOOL fastcall PathSearchAndQualifyA(LPCSTR pszPath, LPSTR pszBuf, UINT cchBuf)
LPSTR fastcall PathSkipRootA(LPCSTR pszPath)
BOOL fastcall PathStripToRootA(LPSTR pszPath)
LSTATUS fastcall SHRegEnumUSKeyA(HUSKEY hUSKey, DWORD dwIndex, LPSTR pszName, LPDWORD pcchName, SHREGENUM_FLAGS enumRegFlags)
LSTATUS fastcall SHRegEnumUSValueA(HUSKEY hUSkey, DWORD dwIndex, LPSTR pszValueName, LPDWORD pcchValueName, LPDWORD pdwType, void * pvData, LPDWORD pcbData, SHREGENUM_FLAGS enumRegFlags)
LSTATUS fastcall SHRegQueryInfoUSKeyA(HUSKEY hUSKey, LPDWORD pcSubKeys, LPDWORD pcchMaxSubKeyLen, LPDWORD pcValues, LPDWORD pcchMaxValueNameLen, SHREGENUM_FLAGS enumRegFlags)
LSTATUS fastcall SHRegSetUSValueA(LPCSTR pszSubKey, LPCSTR pszValue, DWORD dwType, void * pvData, DWORD cbData, DWORD dwFlags)
LSTATUS fastcall SHRegWriteUSValueA(HUSKEY hUSKey, LPCSTR pszValue, DWORD dwType, void * pvData, DWORD cbData, DWORD dwFlags)
LSTATUS fastcall RegDeleteKeyExA(HKEY hKey, LPCSTR lpSubKey, REGSAM samDesired, DWORD Reserved)
LSTATUS fastcall RegLoadKeyA(HKEY hKey, LPCSTR lpSubKey, LPCSTR lpFile)
LSTATUS fastcall RegUnLoadKeyA(HKEY hKey, LPCSTR lpSubKey)
LSTATUS fastcall RegLoadMUIStringA(HKEY hKey, LPCSTR pszValue, LPSTR pszOutBuf, DWORD cbOutBuf, LPDWORD pcbData, DWORD Flags, LPCSTR pszDirectory)
LSTATUS fastcall RegQueryMultipleValuesA(HKEY hKey, PVALENTA val_list, DWORD num_vals, LPSTR lpValueBuf, LPDWORD ldwTotsize)
LSTATUS fastcall RegRestoreKeyA(HKEY hKey, LPCSTR lpFile, DWORD dwFlags)
LSTATUS fastcall RegRestoreKeyW(HKEY hKey, LPCWSTR lpFile, DWORD dwFlags)
LSTATUS fastcall RegSaveKeyExA(HKEY hKey, LPCSTR lpFile, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD Flags)
BOOL fastcall EmptyWorkingSet(HANDLE hProcess)
DWORD fastcall GetDeviceDriverFileNameA(LPVOID ImageBase, LPSTR lpFilename, DWORD nSize)
DWORD fastcall GetDeviceDriverFileNameW(LPVOID ImageBase, LPWSTR lpFilename, DWORD nSize)
BOOL fastcall EnumPageFilesA(PENUM_PAGE_FILE_CALLBACKA pCallBackRoutine, LPVOID pContext)
BOOL fastcall EnumPageFilesW(PENUM_PAGE_FILE_CALLBACKW pCallBackRoutine, LPVOID pContext)
BOOL fastcall GetWsChanges(HANDLE hProcess, PPSAPI_WS_WATCH_INFORMATION lpWatchInfo, DWORD cb)
BOOL fastcall GetWsChangesEx(HANDLE hProcess, PPSAPI_WS_WATCH_INFORMATION_EX lpWatchInfoEx, PDWORD cb)
BOOL fastcall InitializeProcessForWsWatch(HANDLE hProcess)
DWORD fastcall GetMappedFileNameA(HANDLE hProcess, LPVOID lpv, LPSTR lpFilename, DWORD nSize)
BOOL fastcall AddConsoleAliasA(LPSTR Source, LPSTR Target, LPSTR ExeName)
BOOL fastcall AddConsoleAliasW(LPWSTR Source, LPWSTR Target, LPWSTR ExeName)
DWORD fastcall GetConsoleAliasA(LPSTR Source, LPSTR TargetBuffer, DWORD TargetBufferLength, LPSTR ExeName)
DWORD fastcall GetConsoleAliasExesA(LPSTR ExeNameBuffer, DWORD ExeNameBufferLength)
DWORD fastcall GetConsoleAliasExesLengthA(void)
DWORD fastcall GetConsoleAliasExesLengthW(void)
DWORD fastcall GetConsoleAliasExesW(LPWSTR ExeNameBuffer, DWORD ExeNameBufferLength)
DWORD fastcall GetConsoleAliasW(LPWSTR Source, LPWSTR TargetBuffer, DWORD TargetBufferLength, LPWSTR ExeName)
DWORD fastcall GetConsoleAliasesA(LPSTR AliasBuffer, DWORD AliasBufferLength, LPSTR ExeName)
DWORD fastcall GetConsoleAliasesLengthA(LPSTR ExeName)
DWORD fastcall GetConsoleAliasesLengthW(LPWSTR ExeName)
DWORD fastcall GetConsoleAliasesW(LPWSTR AliasBuffer, DWORD AliasBufferLength, LPWSTR ExeName)
DWORD fastcall GetConsoleOriginalTitleA(LPSTR lpConsoleTitle, DWORD nSize)
DWORD fastcall GetConsoleOriginalTitleW(LPWSTR lpConsoleTitle, DWORD nSize)
DWORD fastcall GetConsoleTitleA(LPSTR lpConsoleTitle, DWORD nSize)
BOOL fastcall SetConsoleTitleA(LPCSTR lpConsoleTitle)
BOOL fastcall AllocConsole(void)
BOOL fastcall FillConsoleOutputCharacterA(HANDLE hConsoleOutput, CHAR cCharacter, DWORD nLength, COORD dwWriteCoord, LPDWORD lpNumberOfCharsWritten)
BOOL fastcall ReadConsoleInputA(HANDLE hConsoleInput, PINPUT_RECORD lpBuffer, DWORD nLength, LPDWORD lpNumberOfEventsRead)
BOOL fastcall ReadConsoleOutputAttribute(HANDLE hConsoleOutput, LPWORD lpAttribute, DWORD nLength, COORD dwReadCoord, LPDWORD lpNumberOfAttrsRead)
BOOL fastcall ReadConsoleOutputCharacterA(HANDLE hConsoleOutput, LPSTR lpCharacter, DWORD nLength, COORD dwReadCoord, LPDWORD lpNumberOfCharsRead)
BOOL fastcall ReadConsoleOutputCharacterW(HANDLE hConsoleOutput, LPWSTR lpCharacter, DWORD nLength, COORD dwReadCoord, LPDWORD lpNumberOfCharsRead)
BOOL fastcall WriteConsoleInputA(HANDLE hConsoleInput, INPUT_RECORD * lpBuffer, DWORD nLength, LPDWORD lpNumberOfEventsWritten)
BOOL fastcall WriteConsoleInputW(HANDLE hConsoleInput, INPUT_RECORD * lpBuffer, DWORD nLength, LPDWORD lpNumberOfEventsWritten)
BOOL fastcall WriteConsoleOutputA(HANDLE hConsoleOutput, CHAR_INFO * lpBuffer, COORD dwBufferSize, COORD dwBufferCoord, PSMALL_RECT lpWriteRegion)
BOOL fastcall WriteConsoleOutputAttribute(HANDLE hConsoleOutput, WORD * lpAttribute, DWORD nLength, COORD dwWriteCoord, LPDWORD lpNumberOfAttrsWritten)
BOOL fastcall FlushConsoleInputBuffer(HANDLE hConsoleInput)
BOOL fastcall GenerateConsoleCtrlEvent(DWORD dwCtrlEvent, DWORD dwProcessGroupId)
BOOL fastcall GetConsoleDisplayMode(LPDWORD lpModeFlags)
COORD fastcall GetConsoleFontSize(HANDLE hConsoleOutput, DWORD nFont)
BOOL fastcall GetConsoleHistoryInfo(PCONSOLE_HISTORY_INFO lpConsoleHistoryInfo)
DWORD fastcall GetConsoleProcessList(LPDWORD lpdwProcessList, DWORD dwProcessCount)
BOOL fastcall GetConsoleSelectionInfo(PCONSOLE_SELECTION_INFO lpConsoleSelectionInfo)
BOOL fastcall GetCurrentConsoleFont(HANDLE hConsoleOutput, BOOL bMaximumWindow, PCONSOLE_FONT_INFO lpConsoleCurrentFont)
BOOL fastcall GetNumberOfConsoleInputEvents(HANDLE hConsoleInput, LPDWORD lpNumberOfEvents)
BOOL fastcall GetNumberOfConsoleMouseButtons(LPDWORD lpNumberOfMouseButtons)
BOOL fastcall ScrollConsoleScreenBufferA(HANDLE hConsoleOutput, SMALL_RECT * lpScrollRectangle, SMALL_RECT * lpClipRectangle, COORD dwDestinationOrigin, CHAR_INFO * lpFill)
BOOL fastcall ScrollConsoleScreenBufferW(HANDLE hConsoleOutput, SMALL_RECT * lpScrollRectangle, SMALL_RECT * lpClipRectangle, COORD dwDestinationOrigin, CHAR_INFO * lpFill)
BOOL fastcall SetConsoleCP(UINT wCodePageID)
BOOL fastcall SetConsoleDisplayMode(HANDLE hConsoleOutput, DWORD dwFlags, PCOORD lpNewScreenBufferDimensions)
BOOL fastcall SetConsoleHistoryInfo(PCONSOLE_HISTORY_INFO lpConsoleHistoryInfo)
BOOL fastcall SetConsoleScreenBufferInfoEx(HANDLE hConsoleOutput, PCONSOLE_SCREEN_BUFFER_INFOEX lpConsoleScreenBufferInfoEx)
BOOL fastcall SetConsoleScreenBufferSize(HANDLE hConsoleOutput, COORD dwSize)
BOOL fastcall SetConsoleWindowInfo(HANDLE hConsoleOutput, BOOL bAbsolute, SMALL_RECT * lpConsoleWindow)
BOOL fastcall SetCurrentConsoleFontEx(HANDLE hConsoleOutput, BOOL bMaximumWindow, PCONSOLE_FONT_INFOEX lpConsoleCurrentFontEx)
BOOL fastcall ReadConsoleA(HANDLE hConsoleInput, LPVOID lpBuffer, DWORD nNumberOfCharsToRead, LPDWORD lpNumberOfCharsRead, PCONSOLE_READCONSOLE_CONTROL pInputControl)
BOOL fastcall WriteConsoleA(HANDLE hConsoleOutput, void * lpBuffer, DWORD nNumberOfCharsToWrite, LPDWORD lpNumberOfCharsWritten, LPVOID lpReserved)
BOOL fastcall AccessCheckByTypeAndAuditAlarmW(LPCWSTR SubsystemName, LPVOID HandleId, LPCWSTR ObjectTypeName, LPCWSTR ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, DWORD DesiredAccess, AUDIT_EVENT_TYPE AuditType, DWORD Flags, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, BOOL ObjectCreation, LPDWORD GrantedAccess, LPBOOL AccessStatus, LPBOOL pfGenerateOnClose)
BOOL fastcall AccessCheckByTypeResultList(PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID PrincipalSelfSid, HANDLE ClientToken, DWORD DesiredAccess, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, PPRIVILEGE_SET PrivilegeSet, LPDWORD PrivilegeSetLength, LPDWORD GrantedAccessList, LPDWORD AccessStatusList)
BOOL fastcall AccessCheckByTypeResultListAndAuditAlarmByHandleW(LPCWSTR SubsystemName, LPVOID HandleId, HANDLE ClientToken, LPCWSTR ObjectTypeName, LPCWSTR ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, DWORD DesiredAccess, AUDIT_EVENT_TYPE AuditType, DWORD Flags, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, BOOL ObjectCreation, LPDWORD GrantedAccess, LPDWORD AccessStatusList, LPBOOL pfGenerateOnClose)
BOOL fastcall AccessCheckByTypeResultListAndAuditAlarmW(LPCWSTR SubsystemName, LPVOID HandleId, LPCWSTR ObjectTypeName, LPCWSTR ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, DWORD DesiredAccess, AUDIT_EVENT_TYPE AuditType, DWORD Flags, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, BOOL ObjectCreation, LPDWORD GrantedAccess, LPDWORD AccessStatusList, LPBOOL pfGenerateOnClose)
BOOL fastcall AddAccessAllowedObjectAce(PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD AccessMask, GUID * ObjectTypeGuid, GUID * InheritedObjectTypeGuid, PSID pSid)
BOOL fastcall AddAccessDeniedAceEx(PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD AccessMask, PSID pSid)
BOOL fastcall AddAccessDeniedObjectAce(PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD AccessMask, GUID * ObjectTypeGuid, GUID * InheritedObjectTypeGuid, PSID pSid)
BOOL fastcall AddAuditAccessAce(PACL pAcl, DWORD dwAceRevision, DWORD dwAccessMask, PSID pSid, BOOL bAuditSuccess, BOOL bAuditFailure)
BOOL fastcall AddAuditAccessAceEx(PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD dwAccessMask, PSID pSid, BOOL bAuditSuccess, BOOL bAuditFailure)
BOOL fastcall AddAuditAccessObjectAce(PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD AccessMask, GUID * ObjectTypeGuid, GUID * InheritedObjectTypeGuid, PSID pSid, BOOL bAuditSuccess, BOOL bAuditFailure)
BOOL fastcall AreAnyAccessesGranted(DWORD GrantedAccess, DWORD DesiredAccess)
BOOL fastcall ConvertToAutoInheritPrivateObjectSecurity(PSECURITY_DESCRIPTOR ParentDescriptor, PSECURITY_DESCRIPTOR CurrentSecurityDescriptor, PSECURITY_DESCRIPTOR * NewSecurityDescriptor, GUID * ObjectType, BOOLEAN IsDirectoryObject, PGENERIC_MAPPING GenericMapping)
BOOL fastcall CreatePrivateObjectSecurityWithMultipleInheritance(PSECURITY_DESCRIPTOR ParentDescriptor, PSECURITY_DESCRIPTOR CreatorDescriptor, PSECURITY_DESCRIPTOR * NewDescriptor, GUID * * ObjectTypes, ULONG GuidCount, BOOL IsContainerObject, ULONG AutoInheritFlags, HANDLE Token, PGENERIC_MAPPING GenericMapping)
BOOL fastcall FindFirstFreeAce(PACL pAcl, LPVOID * pAce)
BOOL fastcall GetPrivateObjectSecurity(PSECURITY_DESCRIPTOR ObjectDescriptor, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR ResultantDescriptor, DWORD DescriptorLength, PDWORD ReturnLength)
BOOL fastcall IsValidRelativeSecurityDescriptor(PSECURITY_DESCRIPTOR pSecurityDescriptor, ULONG SecurityDescriptorLength, SECURITY_INFORMATION RequiredInformation)
BOOL fastcall MakeAbsoluteSD2(PSECURITY_DESCRIPTOR pSelfRelativeSecurityDescriptor, LPDWORD lpdwBufferSize)
BOOL fastcall ObjectDeleteAuditAlarmW(LPCWSTR SubsystemName, LPVOID HandleId, BOOL GenerateOnClose)
BOOL fastcall ObjectPrivilegeAuditAlarmW(LPCWSTR SubsystemName, LPVOID HandleId, HANDLE ClientToken, DWORD DesiredAccess, PPRIVILEGE_SET Privileges, BOOL AccessGranted)
BOOL fastcall PrivilegedServiceAuditAlarmW(LPCWSTR SubsystemName, LPCWSTR ServiceName, HANDLE ClientToken, PPRIVILEGE_SET Privileges, BOOL AccessGranted)
BOOL fastcall SetAclInformation(PACL pAcl, LPVOID pAclInformation, DWORD nAclInformationLength, ACL_INFORMATION_CLASS dwAclInformationClass)
BOOL fastcall SetPrivateObjectSecurity(SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR ModificationDescriptor, PSECURITY_DESCRIPTOR * ObjectsSecurityDescriptor, PGENERIC_MAPPING GenericMapping, HANDLE Token)
BOOL fastcall SetPrivateObjectSecurityEx(SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR ModificationDescriptor, PSECURITY_DESCRIPTOR * ObjectsSecurityDescriptor, ULONG AutoInheritFlags, PGENERIC_MAPPING GenericMapping, HANDLE Token)
BOOL fastcall EnumResourceLanguagesExA(HMODULE hModule, LPCSTR lpType, LPCSTR lpName, ENUMRESLANGPROCA lpEnumFunc, LONG_PTR lParam, DWORD dwFlags, LANGID LangId)
BOOL fastcall EnumResourceNamesA(HMODULE hModule, LPCSTR lpType, ENUMRESNAMEPROCA lpEnumFunc, LONG_PTR lParam)
BOOL fastcall EnumResourceNamesExA(HMODULE hModule, LPCSTR lpType, ENUMRESNAMEPROCA lpEnumFunc, LONG_PTR lParam, DWORD dwFlags, LANGID LangId)
BOOL fastcall EnumResourceTypesExA(HMODULE hModule, ENUMRESTYPEPROCA lpEnumFunc, LONG_PTR lParam, DWORD dwFlags, LANGID LangId)
BOOL fastcall EnumResourceTypesExW(HMODULE hModule, ENUMRESTYPEPROCW lpEnumFunc, LONG_PTR lParam, DWORD dwFlags, LANGID LangId)
BOOL fastcall AllocateUserPhysicalPages(HANDLE hProcess, PULONG_PTR NumberOfPages, PULONG_PTR PageArray)
BOOL fastcall AllocateUserPhysicalPagesNuma(HANDLE hProcess, PULONG_PTR NumberOfPages, PULONG_PTR PageArray, DWORD nndPreferred)
BOOL fastcall FreeUserPhysicalPages(HANDLE hProcess, PULONG_PTR NumberOfPages, PULONG_PTR PageArray)
BOOL fastcall GetSystemFileCacheSize(PSIZE_T lpMinimumFileCacheSize, PSIZE_T lpMaximumFileCacheSize, PDWORD lpFlags)
BOOL fastcall MapUserPhysicalPages(PVOID VirtualAddress, ULONG_PTR NumberOfPages, PULONG_PTR PageArray)
BOOL fastcall SetSystemFileCacheSize(SIZE_T MinimumFileCacheSize, SIZE_T MaximumFileCacheSize, DWORD Flags)
void fastcall SetFileApisToANSI(void)
void fastcall SetFileApisToOEM(void)
BOOL fastcall Beep(DWORD dwFreq, DWORD dwDuration)
BOOL fastcall GetNamedPipeHandleStateW(HANDLE hNamedPipe, LPDWORD lpState, LPDWORD lpCurInstances, LPDWORD lpMaxCollectionCount, LPDWORD lpCollectDataTimeout, LPWSTR lpUserName, DWORD nMaxUserNameSize)
BOOL fastcall GetNamedPipeInfo(HANDLE hNamedPipe, LPDWORD lpFlags, LPDWORD lpOutBufferSize, LPDWORD lpInBufferSize, LPDWORD lpMaxInstances)
BOOL fastcall CancelSynchronousIo(HANDLE hThread)
DWORD fastcall GetFinalPathNameByHandleA(HANDLE hFile, LPSTR lpszFilePath, DWORD cchFilePath, DWORD dwFlags)
UINT fastcall SetHandleCount(UINT uNumber)
HANDLE fastcall OpenWaitableTimerW(DWORD dwDesiredAccess, BOOL bInheritHandle, LPCWSTR lpTimerName)
BOOL fastcall ContinueDebugEvent(DWORD dwProcessId, DWORD dwThreadId, DWORD dwContinueStatus)
BOOL fastcall DebugActiveProcess(DWORD dwProcessId)
BOOL fastcall DebugActiveProcessStop(DWORD dwProcessId)
BOOL fastcall ClearCommBreak(HANDLE hFile)
BOOL fastcall ClearCommError(HANDLE hFile, LPDWORD lpErrors, LPCOMSTAT lpStat)
BOOL fastcall EscapeCommFunction(HANDLE hFile, DWORD dwFunc)
BOOL fastcall GetCommConfig(HANDLE hCommDev, LPCOMMCONFIG lpCC, LPDWORD lpdwSize)
BOOL fastcall GetCommMask(HANDLE hFile, LPDWORD lpEvtMask)
BOOL fastcall GetCommModemStatus(HANDLE hFile, LPDWORD lpModemStat)
BOOL fastcall GetCommProperties(HANDLE hFile, LPCOMMPROP lpCommProp)
BOOL fastcall GetCommState(HANDLE hFile, LPDCB lpDCB)
BOOL fastcall GetCommTimeouts(HANDLE hFile, LPCOMMTIMEOUTS lpCommTimeouts)
BOOL fastcall PurgeComm(HANDLE hFile, DWORD dwFlags)
BOOL fastcall SetCommBreak(HANDLE hFile)
BOOL fastcall SetCommConfig(HANDLE hCommDev, LPCOMMCONFIG lpCC, DWORD dwSize)
BOOL fastcall SetCommMask(HANDLE hFile, DWORD dwEvtMask)
BOOL fastcall SetCommState(HANDLE hFile, LPDCB lpDCB)
BOOL fastcall SetCommTimeouts(HANDLE hFile, LPCOMMTIMEOUTS lpCommTimeouts)
BOOL fastcall SetupComm(HANDLE hFile, DWORD dwInQueue, DWORD dwOutQueue)
BOOL fastcall TransmitCommChar(HANDLE hFile, char cChar)
BOOL fastcall WaitCommEvent(HANDLE hFile, LPDWORD lpEvtMask, LPOVERLAPPED lpOverlapped)
BOOL fastcall SetDynamicTimeZoneInformation(DYNAMIC_TIME_ZONE_INFORMATION * lpTimeZoneInformation)
BOOL fastcall SetLocalTime(SYSTEMTIME * lpSystemTime)
BOOL fastcall SetSystemTime(SYSTEMTIME * lpSystemTime)
BOOL fastcall SetSystemTimeAdjustment(DWORD dwTimeAdjustment, BOOL bTimeAdjustmentDisabled)
BOOL fastcall SetTimeZoneInformation(TIME_ZONE_INFORMATION * lpTimeZoneInformation)
HANDLE fastcall CreateRemoteThread(HANDLE hProcess, LPSECURITY_ATTRIBUTES lpThreadAttributes, SIZE_T dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress, LPVOID lpParameter, DWORD dwCreationFlags, LPDWORD lpThreadId)
HANDLE fastcall CreateThread(LPSECURITY_ATTRIBUTES lpThreadAttributes, SIZE_T dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress, LPVOID lpParameter, DWORD dwCreationFlags, LPDWORD lpThreadId)
BOOL fastcall GetThreadGroupAffinity(HANDLE hThread, PGROUP_AFFINITY GroupAffinity)
BOOL fastcall TerminateThread(HANDLE hThread, DWORD dwExitCode)
BOOL fastcall Wow64GetThreadContext(HANDLE hThread, PWOW64_CONTEXT lpContext)
BOOL fastcall Wow64SetThreadContext(HANDLE hThread, WOW64_CONTEXT * lpContext)
DWORD fastcall Wow64SuspendThread(HANDLE hThread)
BOOL fastcall RemoveDirectoryA(LPCSTR lpPathName)
BOOL fastcall SetFileIoOverlappedRange(HANDLE FileHandle, PUCHAR OverlappedRangeStart, ULONG Length)
BOOL fastcall CreateProcessAsUserA(HANDLE hToken, LPCSTR lpApplicationName, LPSTR lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes, LPSECURITY_ATTRIBUTES lpThreadAttributes, BOOL bInheritHandles, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCSTR lpCurrentDirectory, LPSTARTUPINFOA lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation)
void fastcall FatalAppExitA(UINT uAction, LPCSTR lpMessageText)
void fastcall FatalAppExitW(UINT uAction, LPCWSTR lpMessageText)
BOOL fastcall GetProcessGroupAffinity(HANDLE hProcess, PUSHORT GroupCount, PUSHORT GroupArray)
BOOL fastcall GetProcessPriorityBoost(HANDLE hProcess, PBOOL pDisablePriorityBoost)
BOOL fastcall GetProcessShutdownParameters(LPDWORD lpdwLevel, LPDWORD lpdwFlags)
DWORD fastcall GetProcessVersion(DWORD ProcessId)
BOOL fastcall NeedCurrentDirectoryForExePathA(LPCSTR ExeName)
BOOL fastcall QueryProcessAffinityUpdateMode(HANDLE hProcess, LPDWORD lpdwFlags)
BOOL fastcall SetProcessPriorityBoost(HANDLE hProcess, BOOL bDisablePriorityBoost)
BOOL fastcall DefineDosDeviceW(DWORD dwFlags, LPCWSTR lpDeviceName, LPCWSTR lpTargetPath)
BOOL fastcall SetFileAttributesA(LPCSTR lpFileName, DWORD dwFileAttributes)
BOOL fastcall SetComputerNameA(LPCSTR lpComputerName)
BOOL fastcall SetComputerNameExA(COMPUTER_NAME_FORMAT NameType, LPCSTR lpBuffer)
BOOL fastcall SetComputerNameExW(COMPUTER_NAME_FORMAT NameType, LPCWSTR lpBuffer)
BOOL fastcall SetComputerNameW(LPCWSTR lpComputerName)
UINT fastcall EnumSystemFirmwareTables(DWORD FirmwareTableProviderSignature, PVOID pFirmwareTableEnumBuffer, DWORD BufferSize)
BOOL fastcall FreeEnvironmentStringsA(LPCH param_1)
LPCH fastcall GetEnvironmentStrings(void)
BOOL fastcall SetEnvironmentStringsW(LPWCH NewEnvironment)
BOOL fastcall SetEnvironmentVariableA(LPCSTR lpName, LPCSTR lpValue)
HANDLE fastcall FindFirstChangeNotificationA(LPCSTR lpPathName, BOOL bWatchSubtree, DWORD dwNotifyFilter)
HANDLE fastcall FindFirstFileExA(LPCSTR lpFileName, FINDEX_INFO_LEVELS fInfoLevelId, LPVOID lpFindFileData, FINDEX_SEARCH_OPS fSearchOp, LPVOID lpSearchFilter, DWORD dwAdditionalFlags)
HANDLE fastcall FindFirstStreamW(LPCWSTR lpFileName, STREAM_INFO_LEVELS InfoLevel, LPVOID lpFindStreamData, DWORD dwFlags)
BOOL fastcall FindNextStreamW(HANDLE hFindStream, LPVOID lpFindStreamData)
int fastcall LoadStringA(HINSTANCE hInstance, UINT uID, LPSTR lpBuffer, int cchBufferMax)
BOOL fastcall SetCurrentDirectoryA(LPCSTR lpPathName)
BOOL fastcall GetDiskFreeSpaceA(LPCSTR lpRootPathName, LPDWORD lpSectorsPerCluster, LPDWORD lpBytesPerSector, LPDWORD lpNumberOfFreeClusters, LPDWORD lpTotalNumberOfClusters)
BOOL fastcall GetVolumeInformationA(LPCSTR lpRootPathName, LPSTR lpVolumeNameBuffer, DWORD nVolumeNameSize, LPDWORD lpVolumeSerialNumber, LPDWORD lpMaximumComponentLength, LPDWORD lpFileSystemFlags, LPSTR lpFileSystemNameBuffer, DWORD nFileSystemNameSize)
BOOL fastcall GetNumaNodeProcessorMaskEx(USHORT Node, PGROUP_AFFINITY ProcessorMask)
BOOL fastcall GetNumaProximityNodeEx(ULONG ProximityId, PUSHORT NodeNumber)
BOOL fastcall HeapQueryInformation(HANDLE HeapHandle, HEAP_INFORMATION_CLASS HeapInformationClass, PVOID HeapInformation, SIZE_T HeapInformationLength, PSIZE_T ReturnLength)
BOOL fastcall SetStdHandleEx(DWORD nStdHandle, HANDLE hHandle, PHANDLE phPrevValue)
BOOL fastcall QueryIdleProcessorCycleTime(PULONG BufferLength, PULONG64 ProcessorIdleCycleTime)
BOOL fastcall QueryIdleProcessorCycleTimeEx(USHORT Group, PULONG BufferLength, PULONG64 ProcessorIdleCycleTime)
void fastcall RaiseFailFastException(PEXCEPTION_RECORD pExceptionRecord, PCONTEXT pContextRecord, DWORD dwFlags)
LONG fastcall UnhandledExceptionFilter(_EXCEPTION_POINTERS * ExceptionInfo)
HLOCAL fastcall LocalFree(HLOCAL hMem)