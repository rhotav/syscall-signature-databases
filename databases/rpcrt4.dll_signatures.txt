CLIENT_CALL_RETURN cdecl NdrAsyncClientCall(PMIDL_STUB_DESC pStubDescriptor, PFORMAT_STRING pFormat, ...)
CLIENT_CALL_RETURN cdecl NdrClientCall2(PMIDL_STUB_DESC pStubDescriptor, PFORMAT_STRING pFormat, ...)
void fastcall NdrAsyncServerCall(PRPC_MESSAGE pRpcMsg)
RPC_STATUS fastcall RpcAsyncCompleteCall(PRPC_ASYNC_STATE pAsync, void * Reply)
RPC_STATUS fastcall RpcAsyncInitializeHandle(PRPC_ASYNC_STATE pAsync, uint Size)
RPC_STATUS fastcall RpcAsyncAbortCall(PRPC_ASYNC_STATE pAsync, ulong ExceptionCode)
void fastcall NdrClearOutParameters(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat, void * ArgAddr)
void fastcall RpcSsDestroyClientContext(void * * ContextHandle)
uchar * fastcall NdrServerInitializeNew(PRPC_MESSAGE pRpcMsg, PMIDL_STUB_MESSAGE pStubMsg, PMIDL_STUB_DESC pStubDescriptor)
uchar * fastcall NdrServerInitialize(PRPC_MESSAGE pRpcMsg, PMIDL_STUB_MESSAGE pStubMsg, PMIDL_STUB_DESC pStubDescriptor)
RPC_STATUS fastcall I_RpcBindingInqLocalClientPID(RPC_BINDING_HANDLE Binding, ulong * Pid)
RPC_BINDING_HANDLE fastcall NDRCContextBinding(NDR_CCONTEXT CContext)
void fastcall NdrClientInitializeNew(PRPC_MESSAGE pRpcMsg, PMIDL_STUB_MESSAGE pStubMsg, PMIDL_STUB_DESC pStubDescriptor, uint ProcNum)
void fastcall NdrClientInitialize(PRPC_MESSAGE pRpcMsg, PMIDL_STUB_MESSAGE pStubMsg, PMIDL_STUB_DESC pStubDescriptor, uint ProcNum)
uchar * fastcall NdrSendReceive(PMIDL_STUB_MESSAGE pStubMsg, uchar * pBufferEnd)
void fastcall RpcRaiseException(RPC_STATUS exception)
long fastcall I_RpcMapWin32Status(RPC_STATUS Status)
RPC_STATUS fastcall RpcBindingInqObject(RPC_BINDING_HANDLE Binding, UUID * ObjectUuid)
RPC_STATUS fastcall I_RpcBindingInqTransportType(RPC_BINDING_HANDLE Binding, uint * Type)
int fastcall RpcServerInqCallAttributesA(longlong * param_1, uint * param_2)
ulonglong fastcall MesDecodeIncrementalHandleCreate(void * param_1, void * param_2, LPVOID * param_3)
int fastcall MesIncrementalHandleReset(void * * param_1, void * param_2, void * param_3, void * param_4, void * param_5, uint param_6)
ulonglong fastcall MesEncodeDynBufferHandleCreate(void * * param_1, void * param_2, LPVOID * param_3)
int fastcall MesBufferHandleReset(void * * param_1, int param_2, int param_3, void * * param_4, uint param_5, void * param_6)
ulonglong fastcall MesDecodeBufferHandleCreate(void * param_1, ulonglong param_2, LPVOID * param_3)
ulonglong fastcall MesEncodeFixedBufferHandleCreate(void * param_1, ulonglong param_2, void * param_3, LPVOID * param_4)
void fastcall NdrCorrelationInitialize(PMIDL_STUB_MESSAGE pStubMsg, void * pMemory, ulong CacheSize, ulong flags)
void fastcall NdrComplexStructFree(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrUserMarshalFree(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrNonEncapsulatedUnionFree(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrComplexArrayFree(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrConformantVaryingArrayFree(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrVaryingArrayFree(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
uchar * fastcall NdrVaryingArrayMarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
ulong fastcall NdrVaryingArrayMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat)
uchar * fastcall NdrVaryingArrayUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * * ppMemory, PFORMAT_STRING pFormat, uchar fMustAlloc)
ulong fastcall NdrConformantStructMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat)
ulong fastcall NdrNonEncapsulatedUnionMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat)
uchar * fastcall NdrConformantVaryingArrayUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * * ppMemory, PFORMAT_STRING pFormat, uchar fMustAlloc)
uchar * fastcall NdrConformantVaryingArrayMarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrVaryingArrayBufferSize(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrConformantVaryingArrayBufferSize(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
ulong fastcall NdrConformantStringMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat)
void fastcall NdrNonEncapsulatedUnionBufferSize(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
ulong fastcall NdrFixedArrayMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat)
ulong fastcall NdrConformantArrayMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat)
ulong fastcall NdrComplexArrayMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat)
void fastcall NdrConformantArrayFree(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrConformantStringBufferSize(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
int fastcall I_RpcExceptionFilter(ulong ExceptionCode)
void fastcall NdrOleFree(void * NodeToFree)
void * fastcall NdrOleAllocate(size_t Size)
void fastcall NdrFreeBuffer(PMIDL_STUB_MESSAGE pStubMsg)
RPC_STATUS fastcall I_RpcFreeBuffer(RPC_MESSAGE * Message)
RPC_STATUS fastcall RpcImpersonateClient(RPC_BINDING_HANDLE BindingHandle)
void fastcall NdrConformantStructBufferSize(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
RPC_STATUS fastcall NdrGetUserMarshalInfo(ulong * pFlags, ulong InformationLevel, NDR_USER_MARSHAL_INFO * pMarshalInfo)
RPC_STATUS fastcall RpcRevertToSelfEx(RPC_BINDING_HANDLE BindingHandle)
RPC_STATUS fastcall RpcRevertToSelf(void)
ulonglong fastcall RpcServerSubscribeForNotification(longlong param_1, ulonglong param_2, uint param_3, longlong * param_4)
uchar * fastcall NdrRangeUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * * ppMemory, PFORMAT_STRING pFormat, uchar fMustAlloc)
int fastcall UuidEqual(UUID * Uuid1, UUID * Uuid2, RPC_STATUS * Status)
HRESULT fastcall NdrDllCanUnloadNow(CStdPSFactoryBuffer * pPSFactoryBuffer)
HRESULT fastcall NdrDllGetClassObject(IID * rclsid, IID * riid, void * * ppv, ProxyFileInfo * * pProxyFileList, CLSID * pclsid, CStdPSFactoryBuffer * pPSFactoryBuffer)
RPC_STATUS fastcall I_RpcReceive(PRPC_MESSAGE Message, uint Size)
void fastcall NdrFixedArrayBufferSize(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
ulong fastcall NdrUserMarshalMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat)
HRESULT fastcall CStdStubBuffer_Invoke(IRpcStubBuffer * This, RPCOLEMESSAGE * pRpcMsg, IRpcChannelBuffer * pRpcChannelBuffer)
ULONG fastcall IUnknown_AddRef_Proxy(IUnknown * This)
ULONG fastcall IUnknown_Release_Proxy(IUnknown * This)
HRESULT fastcall IUnknown_QueryInterface_Proxy(IUnknown * This, IID * riid, void * * ppvObject)
uchar * fastcall NdrFixedArrayMarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
ULONG fastcall NdrCStdStubBuffer_Release(IRpcStubBuffer * This, IPSFactoryBuffer * pPSF)
uchar * fastcall NdrFixedArrayUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * * ppMemory, PFORMAT_STRING pFormat, uchar fMustAlloc)
uchar * fastcall NdrNonEncapsulatedUnionMarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
uchar * fastcall NdrNonEncapsulatedUnionUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * * ppMemory, PFORMAT_STRING pFormat, uchar fMustAlloc)
ULONG fastcall CStdStubBuffer_AddRef(IRpcStubBuffer * This)
RPC_STATUS fastcall I_RpcBindingIsClientLocal(RPC_BINDING_HANDLE BindingHandle, uint * ClientLocalFlag)
void fastcall I_RpcRequestMutex(I_RPC_MUTEX * Mutex)
void fastcall NdrServerCall2(PRPC_MESSAGE pRpcMsg)
RPC_STATUS fastcall RpcBindingCopy(RPC_BINDING_HANDLE SourceBinding, RPC_BINDING_HANDLE * DestinationBinding)
RPC_STATUS fastcall I_RpcServerInqLocalConnAddress(RPC_BINDING_HANDLE Binding, void * Buffer, ulong * BufferSize, ulong * AddressFormat)
RPC_STATUS fastcall I_RpcServerInqRemoteConnAddress(RPC_BINDING_HANDLE Binding, void * Buffer, ulong * BufferSize, ulong * AddressFormat)
void fastcall CStdStubBuffer_Disconnect(IRpcStubBuffer * This)
RPC_STATUS fastcall RpcBindingInqAuthInfoExW(RPC_BINDING_HANDLE Binding, RPC_WSTR * ServerPrincName, ulong * AuthnLevel, ulong * AuthnSvc, RPC_AUTH_IDENTITY_HANDLE * AuthIdentity, ulong * AuthzSvc, ulong RpcQosVersion, RPC_SECURITY_QOS * SecurityQOS)
uchar * fastcall NdrByteCountPointerUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * * ppMemory, PFORMAT_STRING pFormat, uchar fMustAlloc)
RPC_STATUS fastcall RpcAsyncGetCallStatus(PRPC_ASYNC_STATE pAsync)
ulonglong fastcall RpcBindingUnbind(longlong * param_1)
HRESULT fastcall CStdStubBuffer_QueryInterface(IRpcStubBuffer * This, IID * riid, void * * ppvObject)
uchar * fastcall NdrByteCountPointerMarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrByteCountPointerBufferSize(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
RPC_STATUS fastcall RpcNetworkIsProtseqValidW(RPC_WSTR Protseq)
RPC_STATUS fastcall RpcNetworkInqProtseqsW(RPC_PROTSEQ_VECTORW * * ProtseqVector)
RPC_STATUS fastcall RpcProtseqVectorFreeW(RPC_PROTSEQ_VECTORW * * ProtseqVector)
RPC_STATUS fastcall RpcMgmtSetCancelTimeout(long Timeout)
void fastcall NdrByteCountPointerFree(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
RPC_STATUS fastcall RpcEpResolveBinding(RPC_BINDING_HANDLE Binding, RPC_IF_HANDLE IfSpec)
RPC_STATUS fastcall RpcBindingSetAuthInfoW(RPC_BINDING_HANDLE Binding, RPC_WSTR ServerPrincName, ulong AuthnLevel, ulong AuthnSvc, RPC_AUTH_IDENTITY_HANDLE AuthIdentity, ulong AuthzSvc)
RPC_STATUS fastcall RpcBindingSetObject(RPC_BINDING_HANDLE Binding, UUID * ObjectUuid)
RPC_STATUS fastcall RpcObjectSetType(UUID * ObjUuid, UUID * TypeUuid)
RPC_STATUS fastcall RpcServerTestCancel(RPC_BINDING_HANDLE BindingHandle)
int fastcall UuidIsNil(UUID * Uuid, RPC_STATUS * Status)
RPC_STATUS fastcall RpcServerListen(uint MinimumCallThreads, uint MaxCalls, uint DontWait)
RPC_STATUS fastcall NdrMapCommAndFaultStatus(PMIDL_STUB_MESSAGE pStubMsg, ulong * pCommStatus, ulong * pFaultStatus, RPC_STATUS Status)
int fastcall UuidCompare(UUID * Uuid1, UUID * Uuid2, RPC_STATUS * Status)
void fastcall NdrFixedArrayFree(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
bool fastcall I_RpcMgmtQueryDedicatedThreadPool(void)
RPC_STATUS fastcall RpcMgmtSetServerStackSize(ulong ThreadStackSize)
DWORD fastcall RpcErrorGetNextRecord(int * param_1, int param_2, int * param_3)
RPC_STATUS fastcall RpcSsGetContextBinding(void * ContextHandle, RPC_BINDING_HANDLE * Binding)
RPC_STATUS fastcall RpcServerRegisterIfEx(RPC_IF_HANDLE IfSpec, UUID * MgrTypeUuid, void * MgrEpv, uint Flags, uint MaxCalls, RPC_IF_CALLBACK_FN * IfCallback)
RPC_STATUS fastcall RpcBindingFromStringBindingA(RPC_CSTR StringBinding, RPC_BINDING_HANDLE * Binding)
RPC_STATUS fastcall RpcStringFreeA(RPC_WSTR * String)
RPC_STATUS fastcall RpcStringBindingParseW(RPC_WSTR StringBinding, RPC_WSTR * ObjUuid, RPC_WSTR * Protseq, RPC_WSTR * NetworkAddr, RPC_WSTR * Endpoint, RPC_WSTR * NetworkOptions)
RPC_STATUS fastcall I_RpcSend(PRPC_MESSAGE Message)
void fastcall NdrCorrelationFree(PMIDL_STUB_MESSAGE pStubMsg)
void fastcall NdrFullPointerXlatFree(PFULL_PTR_XLAT_TABLES pXlatTables)
uchar * fastcall NdrPointerMarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NDRCContextMarshall(NDR_CCONTEXT CContext, void * pBuff)
void fastcall NDRSContextMarshall2(RPC_BINDING_HANDLE BindingHandle, NDR_SCONTEXT CContext, void * pBuff, NDR_RUNDOWN userRunDownIn, void * CtxGuard, ulong Flags)
RPC_STATUS fastcall UuidCreate(UUID * Uuid)
uchar * fastcall NdrUserMarshalMarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrServerContextNewMarshall(PMIDL_STUB_MESSAGE pStubMsg, NDR_SCONTEXT ContextHandle, NDR_RUNDOWN RundownRoutine, PFORMAT_STRING pFormat)
uchar * fastcall NdrConformantStructMarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
uchar * fastcall NdrConformantStringMarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
RPC_STATUS fastcall UuidToStringW(UUID * Uuid, RPC_WSTR * StringUuid)
RPC_STATUS fastcall UuidFromStringW(RPC_WSTR StringUuid, UUID * Uuid)
RPC_STATUS fastcall RpcStringBindingComposeW(RPC_WSTR ObjUuid, RPC_WSTR ProtSeq, RPC_WSTR NetworkAddr, RPC_WSTR Endpoint, RPC_WSTR Options, RPC_WSTR * StringBinding)
RPC_STATUS fastcall RpcBindingFromStringBindingW(RPC_WSTR StringBinding, RPC_BINDING_HANDLE * Binding)
long fastcall NdrStubCall2(void * pThis, void * pChannel, PRPC_MESSAGE pRpcMsg, ulong * pdwStubPhase)
void fastcall NdrPointerBufferSize(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrPointerFree(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
uchar * fastcall NdrComplexArrayUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * * ppMemory, PFORMAT_STRING pFormat, uchar fMustAlloc)
uchar * fastcall NdrComplexArrayMarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrComplexArrayBufferSize(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
uchar * fastcall NdrPointerUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * * ppMemory, PFORMAT_STRING pFormat, uchar fMustAlloc)
uchar * fastcall NdrComplexStructUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * * ppMemory, PFORMAT_STRING pFormat, uchar fMustAlloc)
void fastcall NdrSimpleTypeUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, uchar FormatChar)
uchar * fastcall NdrComplexStructMarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrComplexStructBufferSize(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
char * fastcall NdrpMemoryIncrement(longlong param_1, longlong param_2, byte * param_3)
void fastcall NdrSimpleStructBufferSize(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
ulong fastcall NdrComplexStructMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat)
uchar * fastcall NdrSimpleStructMarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
ulong fastcall NdrSimpleStructMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat)
uchar * fastcall NdrSimpleStructUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * * ppMemory, PFORMAT_STRING pFormat, uchar fMustAlloc)
void fastcall NdrConformantArrayBufferSize(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
uchar * fastcall NdrConformantArrayMarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrUserMarshalBufferSize(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
RPC_STATUS fastcall I_RpcSendReceive(RPC_MESSAGE * Message)
uint * fastcall I_RpcNegotiateTransferSyntax(longlong * * param_1, uint * param_2, uint * param_3)
uchar * fastcall NdrGetBuffer(PMIDL_STUB_MESSAGE pStubMsg, ulong BufferLength, RPC_BINDING_HANDLE Handle)
RPC_STATUS fastcall I_RpcGetBuffer(RPC_MESSAGE * Message)
RPC_STATUS fastcall I_RpcGetBufferWithObject(RPC_MESSAGE * Message, UUID * ObjectUuid)
void fastcall NdrServerCallAll(PRPC_MESSAGE pRpcMsg)
long fastcall NdrStubCall3(void * pThis, void * pChannel, PRPC_MESSAGE pRpcMsg, ulong * pdwStubPhase)
uchar * fastcall NdrConformantArrayUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * * ppMemory, PFORMAT_STRING pFormat, uchar fMustAlloc)
uchar * fastcall NdrConformantStructUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * * ppMemory, PFORMAT_STRING pFormat, uchar fMustAlloc)
void fastcall NdrCorrelationPass(PMIDL_STUB_MESSAGE pStubMsg)
uchar * fastcall NdrConformantStringUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * * ppMemory, PFORMAT_STRING pFormat, uchar fMustAlloc)
NDR_SCONTEXT fastcall NdrServerContextNewUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat)
NDR_SCONTEXT fastcall NDRSContextUnmarshall2(RPC_BINDING_HANDLE BindingHandle, void * pBuff, ulong DataRepresentation, void * CtxGuard, ulong Flags)
void * fastcall I_RpcAllocate(uint Size)
RPC_STATUS fastcall I_RpcBindingCopy(RPC_BINDING_HANDLE SourceBinding, RPC_BINDING_HANDLE * DestinationBinding)
ulonglong fastcall RpcImpersonateClient2(longlong * param_1, uint * param_2, uint * param_3)
RPC_STATUS fastcall I_RpcAsyncSetHandle(PRPC_MESSAGE Message, PRPC_ASYNC_STATE pAsync)
RPC_STATUS fastcall RpcBindingSetAuthInfoExW(RPC_BINDING_HANDLE Binding, RPC_WSTR ServerPrincName, ulong AuthnLevel, ulong AuthnSvc, RPC_AUTH_IDENTITY_HANDLE AuthIdentity, ulong AuthzSvc, RPC_SECURITY_QOS * SecurityQOS)
RPC_STATUS fastcall RpcBindingFree(RPC_BINDING_HANDLE * Binding)
RPC_STATUS fastcall RpcBindingSetOption(RPC_BINDING_HANDLE hBinding, ulong option, ULONG_PTR optionValue)
NDR_SCONTEXT fastcall NdrContextHandleInitialize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat)
PFULL_PTR_XLAT_TABLES fastcall NdrFullPointerXlatInit(ulong NumberOfPointers, XLAT_SIDE XlatSide)
uchar * fastcall NdrUserMarshalUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * * ppMemory, PFORMAT_STRING pFormat, uchar fMustAlloc)
RPC_STATUS fastcall RpcBindingServerFromClient(RPC_BINDING_HANDLE ClientBinding, RPC_BINDING_HANDLE * ServerBinding)
RPC_STATUS fastcall RpcBindingInqAuthClientExW(RPC_BINDING_HANDLE ClientBinding, RPC_AUTHZ_HANDLE * Privs, RPC_WSTR * ServerPrincName, ulong * AuthnLevel, ulong * AuthnSvc, ulong * AuthzSvc, ulong Flags)
RPC_STATUS fastcall RpcBindingInqAuthClientW(RPC_BINDING_HANDLE ClientBinding, RPC_AUTHZ_HANDLE * Privs, RPC_WSTR * ServerPrincName, ulong * AuthnLevel, ulong * AuthnSvc, ulong * AuthzSvc)
RPC_STATUS fastcall RpcBindingToStringBindingW(RPC_BINDING_HANDLE Binding, RPC_WSTR * StringBinding)
RPC_STATUS fastcall RpcServerUnregisterIf(RPC_IF_HANDLE IfSpec, UUID * MgrTypeUuid, uint WaitForCallsToComplete)
RPC_STATUS fastcall RpcMgmtSetComTimeout(RPC_BINDING_HANDLE Binding, uint Timeout)
RPC_STATUS fastcall RpcStringFreeW(RPC_WSTR * String)
RPC_STATUS fastcall RpcServerUseProtseqEpW(RPC_WSTR Protseq, uint MaxCalls, RPC_WSTR Endpoint, void * SecurityDescriptor)
RPC_STATUS fastcall I_RpcServerUseProtseqEp2W(RPC_WSTR NetworkAddress, RPC_WSTR Protseq, uint MaxCalls, RPC_WSTR Endpoint, void * SecurityDescriptor, void * Policy)
RPC_STATUS fastcall I_RpcIfInqTransferSyntaxes(RPC_IF_HANDLE RpcIfHandle, RPC_TRANSFER_SYNTAX * TransferSyntaxes, uint TransferSyntaxSize, uint * TransferSyntaxCount)
RPC_STATUS fastcall RpcIfInqId(RPC_IF_HANDLE RpcIfHandle, RPC_IF_ID * RpcIfId)
RPC_STATUS fastcall I_RpcBindingInqDynamicEndpointW(RPC_BINDING_HANDLE Binding, RPC_WSTR * DynamicEndpoint)
RPC_STATUS fastcall RpcBindingToStringBindingA(RPC_BINDING_HANDLE Binding, RPC_CSTR * StringBinding)
RPC_STATUS fastcall RpcStringBindingParseA(RPC_CSTR StringBinding, RPC_CSTR * ObjUuid, RPC_CSTR * Protseq, RPC_CSTR * NetworkAddr, RPC_CSTR * Endpoint, RPC_CSTR * NetworkOptions)
RPC_STATUS fastcall RpcServerRegisterAuthInfoW(RPC_WSTR ServerPrincName, ulong AuthnSvc, RPC_AUTH_KEY_RETRIEVAL_FN GetKeyFn, void * Arg)
RPC_STATUS fastcall RpcEpRegisterW(RPC_IF_HANDLE IfSpec, RPC_BINDING_VECTOR * BindingVector, UUID_VECTOR * UuidVector, RPC_WSTR Annotation)
RPC_STATUS fastcall RpcServerUseProtseqW(RPC_WSTR Protseq, uint MaxCalls, void * SecurityDescriptor)
RPC_STATUS fastcall I_RpcServerUseProtseq2W(RPC_WSTR NetworkAddress, RPC_WSTR Protseq, uint MaxCalls, void * SecurityDescriptor, void * Policy)
RPC_STATUS fastcall RpcServerInqBindings(RPC_BINDING_VECTOR * * BindingVector)
RPC_STATUS fastcall RpcEpUnregister(RPC_IF_HANDLE IfSpec, RPC_BINDING_VECTOR * BindingVector, UUID_VECTOR * UuidVector)
RPC_STATUS fastcall RpcBindingVectorFree(RPC_BINDING_VECTOR * * BindingVector)
RPC_STATUS fastcall RpcServerInqDefaultPrincNameW(ulong AuthnSvc, RPC_WSTR * PrincName)
RPC_STATUS fastcall RpcStringBindingComposeA(RPC_CSTR ObjUuid, RPC_CSTR ProtSeq, RPC_CSTR NetworkAddr, RPC_CSTR Endpoint, RPC_CSTR Options, RPC_CSTR * StringBinding)
RPC_STATUS fastcall UuidCreateSequential(UUID * Uuid)
ULONG fastcall NdrCStdStubBuffer2_Release(IRpcStubBuffer * This, IPSFactoryBuffer * pPSF)
ulonglong fastcall I_RpcBindingInqSecurityContextKeyInfo(longlong * param_1, uint * param_2, uint * param_3)
EXCEPTION_DISPOSITION __C_specific_handler(_EXCEPTION_RECORD * ExceptionRecord, void * EstablisherFrame, _CONTEXT * ContextRecord, _DISPATCHER_CONTEXT * DispatcherContext)
void cdecl __security_check_cookie(uintptr_t _StackCookie)
void cdecl __report_gsfailure(uintptr_t _StackCookie)
void cdecl __security_init_cookie(void)
RPC_ADDRESS_CHANGE_FN * fastcall I_RpcServerInqAddressChangeFn(void)
void fastcall NdrSimpleTypeMarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, uchar FormatChar)
uchar * fastcall NdrNsSendReceive(PMIDL_STUB_MESSAGE pStubMsg, uchar * pBufferEnd, RPC_BINDING_HANDLE * pAutoHandle)
int cdecl memcmp(void * _Buf1, void * _Buf2, size_t _Size)
void * cdecl memcpy(void * _Dst, void * _Src, size_t _Size)
void * cdecl memmove(void * _Dst, void * _Src, size_t _Size)
void * cdecl memset(void * _Dst, int _Val, size_t _Size)
int cdecl wcscmp(wchar_t * _Str1, wchar_t * _Str2)
ushort fastcall UuidHash(UUID * Uuid, RPC_STATUS * Status)
longlong fastcall caseD_d(void)
void fastcall I_RpcPauseExecution(DWORD dwMilliseconds)
RPC_STATUS fastcall I_RpcBindingInqDynamicEndpointA(RPC_BINDING_HANDLE Binding, RPC_CSTR * DynamicEndpoint)
ulonglong fastcall I_RpcBindingIsServerLocal(longlong * param_1)
RPC_STATUS fastcall I_RpcServerRegisterForwardFunction(RPC_FORWARD_FUNCTION * pForwardFunction)
RPC_STATUS fastcall I_RpcServerSetAddressChangeFn(RPC_ADDRESS_CHANGE_FN * pAddressChangeFn)
RPC_STATUS fastcall I_RpcServerStartService(RPC_WSTR Protseq, RPC_WSTR Endpoint, RPC_IF_HANDLE IfSpec)
void fastcall I_RpcSessionStrictContextHandle(void)
RPC_STATUS fastcall RpcIfIdVectorFree(RPC_IF_ID_VECTOR * * IfIdVector)
ulonglong fastcall RpcImpersonateClientContainer(longlong * param_1, uint * param_2, uint * param_3)
RPC_STATUS fastcall RpcMgmtInqIfIds(RPC_BINDING_HANDLE Binding, RPC_IF_ID_VECTOR * * IfIdVector)
RPC_STATUS fastcall RpcMgmtInqServerPrincNameW(RPC_BINDING_HANDLE Binding, ulong AuthnSvc, RPC_WSTR * ServerPrincName)
RPC_STATUS fastcall RpcMgmtInqStats(RPC_BINDING_HANDLE Binding, RPC_STATS_VECTOR * * Statistics)
RPC_STATUS fastcall RpcMgmtIsServerListening(RPC_BINDING_HANDLE Binding)
RPC_STATUS fastcall RpcMgmtStatsVectorFree(RPC_STATS_VECTOR * * StatsVector)
RPC_STATUS fastcall RpcMgmtStopServerListening(RPC_BINDING_HANDLE Binding)
RPC_STATUS fastcall RpcMgmtWaitServerListen(void)
RPC_STATUS fastcall RpcObjectInqType(UUID * ObjUuid, UUID * TypeUuid)
RPC_STATUS fastcall RpcObjectSetInqFn(RPC_OBJECT_INQ_FN * InquiryFn)
RPC_STATUS fastcall RpcServerCompleteSecurityCallback(RPC_BINDING_HANDLE BindingHandle, RPC_STATUS Status)
RPC_STATUS fastcall RpcServerInqDefaultPrincNameA(ulong AuthnSvc, RPC_CSTR * PrincName)
RPC_STATUS fastcall RpcServerInqIf(RPC_IF_HANDLE IfSpec, UUID * MgrTypeUuid, void * * MgrEpv)
RPC_STATUS fastcall RpcServerRegisterIf(RPC_IF_HANDLE IfSpec, UUID * MgrTypeUuid, void * MgrEpv)
RPC_STATUS fastcall RpcServerRegisterIf2(RPC_IF_HANDLE IfSpec, UUID * MgrTypeUuid, void * MgrEpv, uint Flags, uint MaxCalls, uint MaxRpcSize, RPC_IF_CALLBACK_FN * IfCallbackFn)
RPC_STATUS fastcall RpcServerUseAllProtseqs(uint MaxCalls, void * SecurityDescriptor)
RPC_STATUS fastcall RpcServerUseAllProtseqsEx(uint MaxCalls, void * SecurityDescriptor, PRPC_POLICY Policy)
RPC_STATUS fastcall RpcServerUseAllProtseqsIf(uint MaxCalls, RPC_IF_HANDLE IfSpec, void * SecurityDescriptor)
RPC_STATUS fastcall RpcServerUseAllProtseqsIfEx(uint MaxCalls, RPC_IF_HANDLE IfSpec, void * SecurityDescriptor, PRPC_POLICY Policy)
RPC_STATUS fastcall RpcServerUseProtseqEpExW(RPC_WSTR Protseq, uint MaxCalls, RPC_WSTR Endpoint, void * SecurityDescriptor, PRPC_POLICY Policy)
RPC_STATUS fastcall RpcServerUseProtseqExW(RPC_WSTR Protseq, uint MaxCalls, void * SecurityDescriptor, PRPC_POLICY Policy)
RPC_STATUS fastcall RpcServerUseProtseqIfExW(RPC_WSTR Protseq, uint MaxCalls, RPC_IF_HANDLE IfSpec, void * SecurityDescriptor, PRPC_POLICY Policy)
RPC_STATUS fastcall RpcServerUseProtseqIfW(RPC_WSTR Protseq, uint MaxCalls, RPC_IF_HANDLE IfSpec, void * SecurityDescriptor)
RPC_STATUS fastcall DceErrorInqTextA(RPC_STATUS RpcStatus, RPC_CSTR ErrorText)
RPC_STATUS fastcall DceErrorInqTextW(RPC_STATUS RpcStatus, RPC_WSTR ErrorText)
RPC_STATUS fastcall RpcMgmtEnableIdleCleanup(void)
RPC_STATUS fastcall RpcMgmtInqComTimeout(RPC_BINDING_HANDLE Binding, uint * Timeout)
RPC_STATUS fastcall I_RpcAsyncAbortCall(PRPC_ASYNC_STATE pAsync, ulong ExceptionCode)
RPC_STATUS fastcall I_RpcBindingCreateNP(RPC_WSTR ServerName, RPC_WSTR ServiceName, RPC_WSTR NetworkOptions, RPC_BINDING_HANDLE * Binding)
RPC_STATUS fastcall I_RpcBindingInqSecurityContext(RPC_BINDING_HANDLE Binding, void * * SecurityContextHandle)
RPC_STATUS fastcall I_RpcNsBindingSetEntryNameA(RPC_BINDING_HANDLE Binding, ulong EntryNameSyntax, RPC_CSTR EntryName)
RPC_STATUS fastcall I_RpcNsBindingSetEntryNameW(RPC_BINDING_HANDLE Binding, ulong EntryNameSyntax, RPC_WSTR EntryName)
RPC_STATUS fastcall I_RpcTurnOnEEInfoPropagation(void)
RPC_STATUS fastcall RpcBindingInqAuthInfoW(RPC_BINDING_HANDLE Binding, RPC_WSTR * ServerPrincName, ulong * AuthnLevel, ulong * AuthnSvc, RPC_AUTH_IDENTITY_HANDLE * AuthIdentity, ulong * AuthzSvc)
RPC_STATUS fastcall RpcBindingReset(RPC_BINDING_HANDLE Binding)
RPC_STATUS fastcall RpcNsBindingInqEntryNameW(RPC_BINDING_HANDLE Binding, ulong EntryNameSyntax, RPC_WSTR * EntryName)
RPC_STATUS fastcall I_RpcBindingHandleToAsyncHandle(RPC_BINDING_HANDLE Binding, void * * AsyncHandle)
RPC_STATUS fastcall I_RpcBindingInqWireIdForSnego(RPC_BINDING_HANDLE Binding, RPC_CSTR WireId)
ulonglong fastcall I_RpcBindingSetPrivateOption(longlong * param_1)
RPC_STATUS fastcall I_RpcBindingToStaticStringBindingW(RPC_BINDING_HANDLE Binding, ushort * * StringBinding)
RPC_STATUS fastcall RpcBindingInqOption(RPC_BINDING_HANDLE hBinding, ulong option, ULONG_PTR * pOptionValue)
RPC_STATUS fastcall RpcMgmtInqDefaultProtectLevel(ulong AuthnSvc, ulong * AuthnLevel)
void fastcall I_RpcDeleteMutex(I_RPC_MUTEX Mutex)
longlong fastcall I_RpcTransServerNewConnection(longlong param_1, longlong param_2, SIZE_T param_3)
RPC_STATUS fastcall I_RpcFreePipeBuffer(RPC_MESSAGE * Message)
RPC_STATUS fastcall I_RpcReallocPipeBuffer(PRPC_MESSAGE Message, uint NewSize)
RPC_BINDING_HANDLE fastcall I_RpcGetCurrentCallHandle(void)
RPC_STATUS fastcall I_RpcServerInqTransportType(uint * Type)
RPC_STATUS fastcall I_RpcGetExtendedError(void)
longlong fastcall I_RpcTransGetThreadEventThreadOptional(void)
RPC_STATUS fastcall RpcCancelThread(void * Thread)
RPC_STATUS fastcall RpcCancelThreadEx(void * Thread, long Timeout)
void fastcall RpcServerYield(void)
RPC_STATUS fastcall RpcTestCancel(void)
ulonglong fastcall I_RpcSystemFunction001(uint param_1, longlong * param_2, longlong * param_3)
RPC_STATUS fastcall I_RpcNsInterfaceExported(ulong EntryNameSyntax, ushort * EntryName, RPC_SERVER_INTERFACE * RpcInterfaceInformation)
ulonglong fastcall RpcErrorAddRecord(int * param_1, uint * param_2, uint * param_3)
ulonglong fastcall RpcErrorSaveErrorInfo(int * param_1, void * * param_2, ulonglong * param_3)
RPC_STATUS fastcall I_RpcServerUseProtseq2A(RPC_CSTR NetworkAddress, RPC_CSTR Protseq, uint MaxCalls, void * SecurityDescriptor, void * Policy)
RPC_STATUS fastcall I_RpcServerUseProtseqEp2A(RPC_CSTR NetworkAddress, RPC_CSTR Protseq, uint MaxCalls, RPC_CSTR Endpoint, void * SecurityDescriptor, void * Policy)
RPC_STATUS fastcall RpcBindingInqAuthClientA(RPC_BINDING_HANDLE ClientBinding, RPC_AUTHZ_HANDLE * Privs, RPC_CSTR * ServerPrincName, ulong * AuthnLevel, ulong * AuthnSvc, ulong * AuthzSvc)
RPC_STATUS fastcall RpcBindingInqAuthClientExA(RPC_BINDING_HANDLE ClientBinding, RPC_AUTHZ_HANDLE * Privs, RPC_CSTR * ServerPrincName, ulong * AuthnLevel, ulong * AuthnSvc, ulong * AuthzSvc, ulong Flags)
RPC_STATUS fastcall RpcBindingInqAuthInfoA(RPC_BINDING_HANDLE Binding, RPC_CSTR * ServerPrincName, ulong * AuthnLevel, ulong * AuthnSvc, RPC_AUTH_IDENTITY_HANDLE * AuthIdentity, ulong * AuthzSvc)
RPC_STATUS fastcall RpcBindingInqAuthInfoExA(RPC_BINDING_HANDLE Binding, RPC_CSTR * ServerPrincName, ulong * AuthnLevel, ulong * AuthnSvc, RPC_AUTH_IDENTITY_HANDLE * AuthIdentity, ulong * AuthzSvc, ulong RpcQosVersion, RPC_SECURITY_QOS * SecurityQOS)
RPC_STATUS fastcall RpcBindingSetAuthInfoA(RPC_BINDING_HANDLE Binding, RPC_CSTR ServerPrincName, ulong AuthnLevel, ulong AuthnSvc, RPC_AUTH_IDENTITY_HANDLE AuthIdentity, ulong AuthzSvc)
RPC_STATUS fastcall RpcBindingSetAuthInfoExA(RPC_BINDING_HANDLE Binding, RPC_CSTR ServerPrincName, ulong AuthnLevel, ulong AuthnSvc, RPC_AUTH_IDENTITY_HANDLE AuthIdentity, ulong AuthzSvc, RPC_SECURITY_QOS * SecurityQos)
RPC_STATUS fastcall RpcMgmtInqServerPrincNameA(RPC_BINDING_HANDLE Binding, ulong AuthnSvc, RPC_CSTR * ServerPrincName)
RPC_STATUS fastcall RpcNetworkInqProtseqsA(RPC_PROTSEQ_VECTORA * * ProtseqVector)
RPC_STATUS fastcall RpcNetworkIsProtseqValidA(RPC_CSTR Protseq)
RPC_STATUS fastcall RpcNsBindingInqEntryNameA(RPC_BINDING_HANDLE Binding, ulong EntryNameSyntax, RPC_CSTR * EntryName)
RPC_STATUS fastcall RpcProtseqVectorFreeA(RPC_PROTSEQ_VECTORW * * ProtseqVector)
RPC_STATUS fastcall RpcServerRegisterAuthInfoA(RPC_CSTR ServerPrincName, ulong AuthnSvc, RPC_AUTH_KEY_RETRIEVAL_FN GetKeyFn, void * Arg)
RPC_STATUS fastcall RpcServerUseProtseqA(RPC_CSTR Protseq, uint MaxCalls, void * SecurityDescriptor)
RPC_STATUS fastcall RpcServerUseProtseqEpA(RPC_CSTR Protseq, uint MaxCalls, RPC_CSTR Endpoint, void * SecurityDescriptor)
RPC_STATUS fastcall RpcServerUseProtseqEpExA(RPC_CSTR Protseq, uint MaxCalls, RPC_CSTR Endpoint, void * SecurityDescriptor, PRPC_POLICY Policy)
RPC_STATUS fastcall RpcServerUseProtseqExA(RPC_CSTR Protseq, uint MaxCalls, void * SecurityDescriptor, PRPC_POLICY Policy)
RPC_STATUS fastcall RpcServerUseProtseqIfA(RPC_CSTR Protseq, uint MaxCalls, RPC_IF_HANDLE IfSpec, void * SecurityDescriptor)
RPC_STATUS fastcall RpcServerUseProtseqIfExA(RPC_CSTR Protseq, uint MaxCalls, RPC_IF_HANDLE IfSpec, void * SecurityDescriptor, PRPC_POLICY Policy)
RPC_STATUS fastcall UuidFromStringA(RPC_CSTR StringUuid, UUID * Uuid)
RPC_STATUS fastcall UuidToStringA(UUID * Uuid, RPC_CSTR * StringUuid)
RPC_STATUS fastcall I_UuidCreate(UUID * Uuid)
RPC_STATUS fastcall UuidCreateNil(UUID * NilUuid)
RPC_STATUS fastcall RpcAsyncCancelCall(PRPC_ASYNC_STATE pAsync, BOOL fAbort)
RPC_STATUS fastcall RpcAsyncRegisterInfo(PRPC_ASYNC_STATE pAsync)
RPC_STATUS fastcall RpcEpRegisterA(RPC_IF_HANDLE IfSpec, RPC_BINDING_VECTOR * BindingVector, UUID_VECTOR * UuidVector, RPC_CSTR Annotation)
RPC_STATUS fastcall RpcEpRegisterNoReplaceA(RPC_IF_HANDLE IfSpec, RPC_BINDING_VECTOR * BindingVector, UUID_VECTOR * UuidVector, RPC_CSTR Annotation)
RPC_STATUS fastcall RpcEpRegisterNoReplaceW(RPC_IF_HANDLE IfSpec, RPC_BINDING_VECTOR * BindingVector, UUID_VECTOR * UuidVector, RPC_WSTR Annotation)
RPC_STATUS fastcall RpcMgmtEpEltInqBegin(RPC_BINDING_HANDLE EpBinding, ulong InquiryType, RPC_IF_ID * IfId, ulong VersOption, UUID * ObjectUuid, RPC_EP_INQ_HANDLE * InquiryContext)
RPC_STATUS fastcall RpcMgmtEpEltInqDone(RPC_EP_INQ_HANDLE * InquiryContext)
RPC_STATUS fastcall RpcMgmtEpEltInqNextA(RPC_EP_INQ_HANDLE InquiryContext, RPC_IF_ID * IfId, RPC_BINDING_HANDLE * Binding, UUID * ObjectUuid, RPC_CSTR * Annotation)
RPC_STATUS fastcall RpcMgmtEpEltInqNextW(RPC_EP_INQ_HANDLE InquiryContext, RPC_IF_ID * IfId, RPC_BINDING_HANDLE * Binding, UUID * ObjectUuid, RPC_WSTR * Annotation)
RPC_STATUS fastcall RpcMgmtEpUnregister(RPC_BINDING_HANDLE EpBinding, RPC_IF_ID * IfId, RPC_BINDING_HANDLE Binding, UUID * ObjectUuid)
RPC_STATUS fastcall RpcMgmtSetAuthorizationFn(RPC_MGMT_AUTHORIZATION_FN AuthorizationFn)
void fastcall NDRCContextUnmarshall(NDR_CCONTEXT * pCContext, RPC_BINDING_HANDLE hBinding, void * pBuff, ulong DataRepresentation)
void fastcall I_RpcSsDontSerializeContext(void)
void fastcall NDRSContextMarshall(NDR_SCONTEXT CContext, void * pBuff, NDR_RUNDOWN userRunDownIn)
void fastcall NDRSContextMarshallEx(RPC_BINDING_HANDLE BindingHandle, NDR_SCONTEXT CContext, void * pBuff, NDR_RUNDOWN userRunDownIn)
NDR_SCONTEXT fastcall NDRSContextUnmarshall(void * pBuff, ulong DataRepresentation)
NDR_SCONTEXT fastcall NDRSContextUnmarshallEx(RPC_BINDING_HANDLE BindingHandle, void * pBuff, ulong DataRepresentation)
void fastcall NdrConformantStructFree(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrConformantVaryingStructFree(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrEncapsulatedUnionFree(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrInterfacePointerFree(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrSimpleStructFree(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrXmitOrRepAsFree(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrClientContextMarshall(PMIDL_STUB_MESSAGE pStubMsg, NDR_CCONTEXT ContextHandle, int fCheck)
uchar * fastcall NdrConformantVaryingStructMarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
uchar * fastcall NdrEncapsulatedUnionMarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
uchar * fastcall NdrInterfacePointerMarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
uchar * fastcall NdrNonConformantStringMarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrPartialIgnoreClientMarshall(PMIDL_STUB_MESSAGE pStubMsg, void * pMemory)
void fastcall NdrServerContextMarshall(PMIDL_STUB_MESSAGE pStubMsg, NDR_SCONTEXT ContextHandle, NDR_RUNDOWN RundownRoutine)
uchar * fastcall NdrXmitOrRepAsMarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrConformantVaryingStructBufferSize(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrContextHandleSize(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrEncapsulatedUnionBufferSize(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrInterfacePointerBufferSize(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrNonConformantStringBufferSize(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrPartialIgnoreClientBufferSize(PMIDL_STUB_MESSAGE pStubMsg, void * pMemory)
void fastcall NdrXmitOrRepAsBufferSize(PMIDL_STUB_MESSAGE pStubMsg, uchar * pMemory, PFORMAT_STRING pFormat)
void fastcall NdrClientContextUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, NDR_CCONTEXT * pContextHandle, RPC_BINDING_HANDLE BindHandle)
uchar * fastcall NdrConformantVaryingStructUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * * ppMemory, PFORMAT_STRING pFormat, uchar fMustAlloc)
uchar * fastcall NdrEncapsulatedUnionUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * * ppMemory, PFORMAT_STRING pFormat, uchar fMustAlloc)
uchar * fastcall NdrInterfacePointerUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * * ppMemory, PFORMAT_STRING pFormat, uchar fMustAlloc)
uchar * fastcall NdrNonConformantStringUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * * ppMemory, PFORMAT_STRING pFormat, uchar fMustAlloc)
void fastcall NdrPartialIgnoreServerUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, void * * ppMemory)
NDR_SCONTEXT fastcall NdrServerContextUnmarshall(PMIDL_STUB_MESSAGE pStubMsg)
uchar * fastcall NdrXmitOrRepAsUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, uchar * * ppMemory, PFORMAT_STRING pFormat, uchar fMustAlloc)
HRESULT fastcall CStdStubBuffer_Connect(IRpcStubBuffer * This, IUnknown * pUnkServer)
ULONG fastcall CStdStubBuffer_CountRefs(IRpcStubBuffer * This)
HRESULT fastcall CStdStubBuffer_DebugServerQueryInterface(IRpcStubBuffer * This, void * * ppv)
void fastcall CStdStubBuffer_DebugServerRelease(IRpcStubBuffer * This, void * pv)
IRpcStubBuffer * fastcall CStdStubBuffer_IsIIDSupported(IRpcStubBuffer * This, IID * riid)
HRESULT fastcall DllGetClassObject(IID * rclsid, IID * riid, LPVOID * ppv)
ulonglong fastcall DllRegisterServer(void)
CLIENT_CALL_RETURN cdecl Ndr64DcomAsyncClientCall(MIDL_STUBLESS_PROXY_INFO * pProxyInfo, ulong nProcNum, void * pReturnValue, ...)
long fastcall Ndr64DcomAsyncStubCall(IRpcStubBuffer * pThis, IRpcChannelBuffer * pChannel, PRPC_MESSAGE pRpcMsg, ulong * pdwStubPhase)
RPC_STATUS fastcall NdrCreateServerInterfaceFromStub(IRpcStubBuffer * pStub, RPC_SERVER_INTERFACE * pServerIf)
CLIENT_CALL_RETURN cdecl NdrDcomAsyncClientCall(PMIDL_STUB_DESC pStubDescriptor, PFORMAT_STRING pFormat, ...)
long fastcall NdrDcomAsyncStubCall(IRpcStubBuffer * pThis, IRpcChannelBuffer * pChannel, PRPC_MESSAGE pRpcMsg, ulong * pdwStubPhase)
HRESULT fastcall NdrDllRegisterProxy(HMODULE hDll, ProxyFileInfo * * pProxyFileList, CLSID * pclsid)
HRESULT fastcall NdrDllUnregisterProxy(HMODULE hDll, ProxyFileInfo * * pProxyFileList, CLSID * pclsid)
RPC_STATUS fastcall NdrGetDcomProtocolVersion(PMIDL_STUB_MESSAGE pStubMsg, RPC_VERSION * pVersion)
void fastcall NdrProxyFreeBuffer(void * This, MIDL_STUB_MESSAGE * pStubMsg)
void fastcall NdrProxyGetBuffer(void * This, PMIDL_STUB_MESSAGE pStubMsg)
void fastcall NdrProxyInitialize(void * This, PRPC_MESSAGE pRpcMsg, PMIDL_STUB_MESSAGE pStubMsg, PMIDL_STUB_DESC pStubDescriptor, uint ProcNum)
void fastcall NdrProxySendReceive(void * This, MIDL_STUB_MESSAGE * pStubMsg)
void fastcall NdrStubForwardingFunction(IRpcStubBuffer * This, IRpcChannelBuffer * pChannel, PRPC_MESSAGE pmsg, DWORD * pdwStubPhase)
void fastcall NdrStubGetBuffer(IRpcStubBuffer * This, IRpcChannelBuffer * pRpcChannelBuffer, PMIDL_STUB_MESSAGE pStubMsg)
void fastcall NdrStubInitialize(PRPC_MESSAGE pRpcMsg, PMIDL_STUB_MESSAGE pStubMsg, PMIDL_STUB_DESC pStubDescriptor, IRpcChannelBuffer * pRpcChannelBuffer)
ulonglong fastcall MesEncodeIncrementalHandleCreate(void * param_1, void * param_2, void * param_3, LPVOID * param_4)
int fastcall NdrMesSimpleTypeAlignSize(longlong param_1)
void * fastcall NdrAllocate(PMIDL_STUB_MESSAGE pStubMsg, size_t Len)
uchar * fastcall NdrNsGetBuffer(PMIDL_STUB_MESSAGE pStubMsg, ulong BufferLength, RPC_BINDING_HANDLE Handle)
void fastcall NdrServerInitializeMarshall(PRPC_MESSAGE pRpcMsg, PMIDL_STUB_MESSAGE pStubMsg)
void fastcall NdrServerInitializePartial(PRPC_MESSAGE pRpcMsg, PMIDL_STUB_MESSAGE pStubMsg, PMIDL_STUB_DESC pStubDescriptor, ulong RequestedBufferSize)
uchar * fastcall NdrServerInitializeUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, PMIDL_STUB_DESC pStubDescriptor, PRPC_MESSAGE pRpcMsg)
void fastcall RpcUserFree(handle_t AsyncHandle, void * pBuffer)
ulong fastcall NdrConformantVaryingArrayMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat)
ulong fastcall NdrConformantVaryingStructMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat)
ulong fastcall NdrEncapsulatedUnionMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat)
ulong fastcall NdrInterfacePointerMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat)
ulong fastcall NdrNonConformantStringMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat)
ulong fastcall NdrPointerMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat)
ulong fastcall NdrXmitOrRepAsMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat)
void fastcall NdrConvert(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat)
void fastcall NdrConvert2(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat, long NumberParams)
uchar * fastcall NdrUserMarshalSimpleTypeConvert(ulong * pFlags, uchar * pBuffer, uchar FormatChar)
void fastcall NdrPartialIgnoreServerInitialize(PMIDL_STUB_MESSAGE pStubMsg, void * * ppMemory, PFORMAT_STRING pFormat)
HRESULT fastcall NdrProxyErrorHandler(DWORD dwExceptionCode)
void * fastcall NdrRpcSmClientAllocate(size_t Size)
void fastcall NdrRpcSmClientFree(void * NodeToFree)
void fastcall NdrRpcSmSetClientToOsf(PMIDL_STUB_MESSAGE pMessage)
void * fastcall NdrRpcSsDefaultAllocate(uint Size)
void fastcall NdrRpcSsDisableAllocate(PMIDL_STUB_MESSAGE pMessage)
void fastcall NdrRpcSsEnableAllocate(PMIDL_STUB_MESSAGE pMessage)
void * fastcall RpcSmAllocate(size_t Size, RPC_STATUS * pStatus)
RPC_STATUS fastcall RpcSmClientFree(void * pNodeToFree)
RPC_STATUS fastcall RpcSmDestroyClientContext(void * * ContextHandle)
RPC_STATUS fastcall RpcSmDisableAllocate(void)
RPC_STATUS fastcall RpcSmEnableAllocate(void)
RPC_STATUS fastcall RpcSmFree(void * NodeToFree)
RPC_SS_THREAD_HANDLE fastcall RpcSmGetThreadHandle(RPC_STATUS * pStatus)
RPC_STATUS fastcall RpcSmSetClientAllocFree(RPC_CLIENT_ALLOC * ClientAlloc, RPC_CLIENT_FREE * ClientFree)
RPC_STATUS fastcall RpcSmSetThreadHandle(RPC_SS_THREAD_HANDLE Id)
RPC_STATUS fastcall RpcSmSwapClientAllocFree(RPC_CLIENT_ALLOC * ClientAlloc, RPC_CLIENT_FREE * ClientFree, RPC_CLIENT_ALLOC * * OldClientAlloc, RPC_CLIENT_FREE * * OldClientFree)
void * fastcall RpcSsAllocate(size_t Size)
void fastcall RpcSsDisableAllocate(void)
void fastcall RpcSsEnableAllocate(void)
RPC_SS_THREAD_HANDLE fastcall RpcSsGetThreadHandle(void)
void fastcall RpcSsSetClientAllocFree(RPC_CLIENT_ALLOC * ClientAlloc, RPC_CLIENT_FREE * ClientFree)
void fastcall RpcSsSetThreadHandle(RPC_SS_THREAD_HANDLE Id)
void fastcall RpcSsSwapClientAllocFree(RPC_CLIENT_ALLOC * ClientAlloc, RPC_CLIENT_FREE * ClientFree, RPC_CLIENT_ALLOC * * OldClientAlloc, RPC_CLIENT_FREE * * OldClientFree)
int fastcall NdrMesSimpleTypeAlignSizeAll(longlong param_1, longlong param_2)
void fastcall NdrServerCallNdr64(PRPC_MESSAGE pRpcMsg)
CLIENT_CALL_RETURN cdecl Ndr64AsyncClientCall(MIDL_STUBLESS_PROXY_INFO * pProxyInfo, ulong nProcNum, void * pReturnValue, ...)
CLIENT_CALL_RETURN cdecl NdrClientCall3(MIDL_STUBLESS_PROXY_INFO * pProxyInfo, ulong nProcNum, void * pReturnValue, ...)
void fastcall Ndr64AsyncServerCallAll(PRPC_MESSAGE pRpcMsg)
void fastcall Ndr64AsyncServerCall64(PRPC_MESSAGE pRpcMsg)