ulonglong fastcall QueryLocalUserServiceName(longlong param_1, short * param_2, uint * param_3)
bool fastcall ConvertStringSecurityDescriptorToSecurityDescriptorW(wchar_t * param_1, int param_2, HLOCAL * param_3, uint * param_4)
bool fastcall ConvertSidToStringSidW(longlong param_1, short * * param_2)
uint fastcall ConvertStringSidToSidW(wchar_t * param_1, HLOCAL * param_2)
BOOL fastcall LookupAccountNameLocalW(LPCWSTR lpAccountName, PSID Sid, LPDWORD cbSid, LPWSTR ReferencedDomainName, LPDWORD cchReferencedDomainName, PSID_NAME_USE peUse)
NTSTATUS fastcall LsaLookupTranslateNames(LSA_LOOKUP_HANDLE PolicyHandle, ULONG Flags, ULONG Count, PLSA_UNICODE_STRING Names, PLSA_REFERENCED_DOMAIN_LIST * ReferencedDomains, PLSA_TRANSLATED_SID2 * Sids)
NTSTATUS fastcall LsaLookupGetDomainInfo(LSA_LOOKUP_HANDLE PolicyHandle, LSA_LOOKUP_DOMAIN_INFO_CLASS DomainInfoClass, PVOID * DomainInfo)
BOOL fastcall LookupAccountSidLocalW(PSID Sid, LPWSTR Name, LPDWORD cchName, LPWSTR ReferencedDomainName, LPDWORD cchReferencedDomainName, PSID_NAME_USE peUse)
NTSTATUS fastcall LsaLookupOpenLocalPolicy(PLSA_OBJECT_ATTRIBUTES ObjectAttributes, ACCESS_MASK AccessMask, PLSA_LOOKUP_HANDLE PolicyHandle)
NTSTATUS fastcall LsaLookupClose(LSA_LOOKUP_HANDLE ObjectHandle)
uint fastcall QueryTransientObjectSecurityDescriptor(int param_1, short * param_2, void * * param_3)
NTSTATUS fastcall LsaLookupTranslateSids(LSA_LOOKUP_HANDLE PolicyHandle, ULONG Count, PSID * Sids, PLSA_REFERENCED_DOMAIN_LIST * ReferencedDomains, PLSA_TRANSLATED_NAME * Names)
void * cdecl operator_new[](__uint64 param_1, FILL param_2)
BOOL fastcall StartServiceW(SC_HANDLE hService, DWORD dwNumServiceArgs, LPCWSTR * lpServiceArgVectors)
BOOL fastcall StartServiceCtrlDispatcherW(SERVICE_TABLE_ENTRYW * lpServiceStartTable)
BOOL fastcall EnumServicesStatusExW(SC_HANDLE hSCManager, SC_ENUM_TYPE InfoLevel, DWORD dwServiceType, DWORD dwServiceState, LPBYTE lpServices, DWORD cbBufSize, LPDWORD pcbBytesNeeded, LPDWORD lpServicesReturned, LPDWORD lpResumeHandle, LPCWSTR pszGroupName)
BOOL fastcall QueryServiceStatus(SC_HANDLE hService, LPSERVICE_STATUS lpServiceStatus)
BOOL fastcall QueryServiceStatusEx(SC_HANDLE hService, SC_STATUS_TYPE InfoLevel, LPBYTE lpBuffer, DWORD cbBufSize, LPDWORD pcbBytesNeeded)
BOOL fastcall SetServiceStatus(SERVICE_STATUS_HANDLE hServiceStatus, LPSERVICE_STATUS lpServiceStatus)
BOOL fastcall QueryServiceConfigW(SC_HANDLE hService, LPQUERY_SERVICE_CONFIGW lpServiceConfig, DWORD cbBufSize, LPDWORD pcbBytesNeeded)
SC_HANDLE fastcall OpenSCManagerA(LPCSTR lpMachineName, LPCSTR lpDatabaseName, DWORD dwDesiredAccess)
SC_HANDLE fastcall OpenServiceW(SC_HANDLE hSCManager, LPCWSTR lpServiceName, DWORD dwDesiredAccess)
SC_HANDLE fastcall OpenSCManagerW(LPCWSTR lpMachineName, LPCWSTR lpDatabaseName, DWORD dwDesiredAccess)
BOOL fastcall CloseServiceHandle(SC_HANDLE hSCObject)
ulonglong fastcall ControlTraceW(longlong param_1, wchar_t * param_2, uint * param_3, int param_4)
SERVICE_STATUS_HANDLE fastcall RegisterServiceCtrlHandlerExW(LPCWSTR lpServiceName, LPHANDLER_FUNCTION_EX lpHandlerProc, LPVOID lpContext)
NTSTATUS fastcall LsaLookupNames2(LSA_HANDLE PolicyHandle, ULONG Flags, ULONG Count, PLSA_UNICODE_STRING Names, PLSA_REFERENCED_DOMAIN_LIST * ReferencedDomains, PLSA_TRANSLATED_SID2 * Sids)
NTSTATUS fastcall LsaQueryInformationPolicy(LSA_HANDLE PolicyHandle, POLICY_INFORMATION_CLASS InformationClass, PVOID * Buffer)
NTSTATUS fastcall LsaLookupSids(LSA_HANDLE PolicyHandle, ULONG Count, PSID * Sids, PLSA_REFERENCED_DOMAIN_LIST * ReferencedDomains, PLSA_TRANSLATED_NAME * Names)
NTSTATUS fastcall LsaOpenPolicy(PLSA_UNICODE_STRING SystemName, PLSA_OBJECT_ATTRIBUTES ObjectAttributes, ACCESS_MASK DesiredAccess, PLSA_HANDLE PolicyHandle)
NTSTATUS fastcall LsaClose(LSA_HANDLE ObjectHandle)
uint fastcall RpcClientCapabilityCheck(short * param_1)
ulonglong fastcall ControlTraceA(longlong param_1, char * param_2, uint * param_3, int param_4)
NTSTATUS fastcall LsaFreeMemory(PVOID Buffer)
BOOL fastcall QueryServiceConfig2W(SC_HANDLE hService, DWORD dwInfoLevel, LPBYTE lpBuffer, DWORD cbBufSize, LPDWORD pcbBytesNeeded)
bool fastcall I_ScUnregisterDeviceNotification(int * param_1)
BOOL fastcall QueryServiceConfigA(SC_HANDLE hService, LPQUERY_SERVICE_CONFIGA lpServiceConfig, DWORD cbBufSize, LPDWORD pcbBytesNeeded)
ulonglong fastcall QueryUserServiceNameForContext(longlong param_1, longlong param_2, wchar_t * param_3, uint * param_4)
BOOL fastcall ChangeServiceConfigW(SC_HANDLE hService, DWORD dwServiceType, DWORD dwStartType, DWORD dwErrorControl, LPCWSTR lpBinaryPathName, LPCWSTR lpLoadOrderGroup, LPDWORD lpdwTagId, LPCWSTR lpDependencies, LPCWSTR lpServiceStartName, LPCWSTR lpPassword, LPCWSTR lpDisplayName)
SC_HANDLE fastcall OpenServiceA(SC_HANDLE hSCManager, LPCSTR lpServiceName, DWORD dwDesiredAccess)
SERVICE_STATUS_HANDLE fastcall RegisterServiceCtrlHandlerW(LPCWSTR lpServiceName, LPHANDLER_FUNCTION lpHandlerProc)
void cdecl __security_check_cookie(uintptr_t _StackCookie)
void cdecl __report_gsfailure(uintptr_t _StackCookie)
void cdecl __security_init_cookie(void)
PVOID fastcall DecodePointer(PVOID Ptr)
PRUNTIME_FUNCTION fastcall RtlLookupFunctionEntry(DWORD64 ControlPc, PDWORD64 ImageBase, PUNWIND_HISTORY_TABLE HistoryTable)
PEXCEPTION_ROUTINE fastcall RtlVirtualUnwind(DWORD HandlerType, DWORD64 ImageBase, DWORD64 ControlPc, PRUNTIME_FUNCTION FunctionEntry, PCONTEXT ContextRecord, PVOID * HandlerData, PDWORD64 EstablisherFrame, PKNONVOLATILE_CONTEXT_POINTERS ContextPointers)
FARPROC fastcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
void fastcall SetLastError(DWORD dwErrCode)
DWORD fastcall GetLastError(void)
BOOL fastcall CloseHandle(HANDLE hObject)
BOOL fastcall HeapFree(HANDLE hHeap, DWORD dwFlags, LPVOID lpMem)
LPVOID fastcall HeapAlloc(HANDLE hHeap, DWORD dwFlags, SIZE_T dwBytes)
HANDLE fastcall GetProcessHeap(void)
DWORD fastcall GetCurrentThreadId(void)
DWORD fastcall GetCurrentProcessId(void)
DWORD fastcall WaitForSingleObject(HANDLE hHandle, DWORD dwMilliseconds)
HANDLE fastcall CreateMutexExW(LPSECURITY_ATTRIBUTES lpMutexAttributes, LPCWSTR lpName, DWORD dwFlags, DWORD dwDesiredAccess)
int cdecl memcmp(void * _Buf1, void * _Buf2, size_t _Size)
void * cdecl memcpy(void * _Dst, void * _Src, size_t _Size)
void * cdecl memmove(void * _Dst, void * _Src, size_t _Size)
void * cdecl memset(void * _Dst, int _Val, size_t _Size)
int cdecl wcscmp(wchar_t * _Str1, wchar_t * _Str2)
_onexit_t cdecl _guard_dispatch_icall(_onexit_t _Func)
_onexit_t cdecl _guard_dispatch_icall(_onexit_t _Func)
DWORD fastcall GetIdentityProviderInfoByName(wchar_t * param_1, void * param_2, uint * param_3, HLOCAL * param_4)
BOOL fastcall LookupAccountNameLocalA(LPCSTR lpAccountName, PSID Sid, LPDWORD cbSid, LPSTR ReferencedDomainName, LPDWORD cchReferencedDomainName, PSID_NAME_USE peUse)
BOOL fastcall LookupAccountSidLocalA(PSID Sid, LPSTR Name, LPDWORD cchName, LPSTR ReferencedDomainName, LPDWORD cchReferencedDomainName, PSID_NAME_USE peUse)
BOOL fastcall ControlService(SC_HANDLE hService, DWORD dwControl, LPSERVICE_STATUS lpServiceStatus)
CLIENT_CALL_RETURN fastcall GetServiceProcessToken(longlong param_1, longlong param_2, longlong param_3)
uint fastcall CredpConvertOneCredentialSize(int param_1, longlong param_2)
bool fastcall CredpEncodeCredential(longlong param_1)
void fastcall DebugBreak(void)
DWORD fastcall GetIdentityProviderInfoByGUID(longlong * param_1, void * param_2, uint * param_3, HLOCAL * param_4)
HLOCAL fastcall AuditFree(HLOCAL hMem)
longlong fastcall GetDigitFromChar(int param_1, char * param_2)
uint fastcall GetOperatorIndexByToken(char param_1)
uint fastcall LocalRpcBindingSetAuthInfoEx(RPC_BINDING_HANDLE param_1, short * param_2)
uint fastcall SetLocalRpcServerProtseqSecurity(void)
BOOL fastcall ChangeServiceConfig2A(SC_HANDLE hService, DWORD dwInfoLevel, LPVOID lpInfo)
BOOL fastcall ChangeServiceConfig2W(SC_HANDLE hService, DWORD dwInfoLevel, LPVOID lpInfo)
BOOL fastcall ChangeServiceConfigA(SC_HANDLE hService, DWORD dwServiceType, DWORD dwStartType, DWORD dwErrorControl, LPCSTR lpBinaryPathName, LPCSTR lpLoadOrderGroup, LPDWORD lpdwTagId, LPCSTR lpDependencies, LPCSTR lpServiceStartName, LPCSTR lpPassword, LPCSTR lpDisplayName)
SC_HANDLE fastcall CreateServiceA(SC_HANDLE hSCManager, LPCSTR lpServiceName, LPCSTR lpDisplayName, DWORD dwDesiredAccess, DWORD dwServiceType, DWORD dwStartType, DWORD dwErrorControl, LPCSTR lpBinaryPathName, LPCSTR lpLoadOrderGroup, LPDWORD lpdwTagId, LPCSTR lpDependencies, LPCSTR lpServiceStartName, LPCSTR lpPassword)
SC_HANDLE fastcall CreateServiceW(SC_HANDLE hSCManager, LPCWSTR lpServiceName, LPCWSTR lpDisplayName, DWORD dwDesiredAccess, DWORD dwServiceType, DWORD dwStartType, DWORD dwErrorControl, LPCWSTR lpBinaryPathName, LPCWSTR lpLoadOrderGroup, LPDWORD lpdwTagId, LPCWSTR lpDependencies, LPCWSTR lpServiceStartName, LPCWSTR lpPassword)
BOOL fastcall DeleteService(SC_HANDLE hService)
BOOL fastcall EnumDependentServicesW(SC_HANDLE hService, DWORD dwServiceState, LPENUM_SERVICE_STATUSW lpServices, DWORD cbBufSize, LPDWORD pcbBytesNeeded, LPDWORD lpServicesReturned)
BOOL fastcall GetServiceDisplayNameW(SC_HANDLE hSCManager, LPCWSTR lpServiceName, LPWSTR lpDisplayName, LPDWORD lpcchBuffer)
BOOL fastcall GetServiceKeyNameW(SC_HANDLE hSCManager, LPCWSTR lpDisplayName, LPWSTR lpServiceName, LPDWORD lpcchBuffer)
ulonglong fastcall I_ScReparseServiceDatabase(void)
BOOL fastcall QueryServiceConfig2A(SC_HANDLE hService, DWORD dwInfoLevel, LPBYTE lpBuffer, DWORD cbBufSize, LPDWORD pcbBytesNeeded)
BOOL fastcall QueryServiceObjectSecurity(SC_HANDLE hService, SECURITY_INFORMATION dwSecurityInformation, PSECURITY_DESCRIPTOR lpSecurityDescriptor, DWORD cbBufSize, LPDWORD pcbBytesNeeded)
CLIENT_CALL_RETURN fastcall ReparseServiceConfig(longlong param_1, longlong param_2, longlong param_3)
BOOL fastcall SetServiceObjectSecurity(SC_HANDLE hService, SECURITY_INFORMATION dwSecurityInformation, PSECURITY_DESCRIPTOR lpSecurityDescriptor)
BOOL fastcall StartServiceA(SC_HANDLE hService, DWORD dwNumServiceArgs, LPCSTR * lpServiceArgVectors)
SERVICE_STATUS_HANDLE fastcall RegisterServiceCtrlHandlerA(LPCSTR lpServiceName, LPHANDLER_FUNCTION lpHandlerProc)
SERVICE_STATUS_HANDLE fastcall RegisterServiceCtrlHandlerExA(LPCSTR lpServiceName, LPHANDLER_FUNCTION_EX lpHandlerProc, LPVOID lpContext)
BOOL fastcall StartServiceCtrlDispatcherA(SERVICE_TABLE_ENTRYA * lpServiceStartTable)
RPC_BINDING_HANDLE fastcall I_ScRpcBindA(longlong param_1)
RPC_BINDING_HANDLE fastcall I_ScRpcBindW(wchar_t * param_1)
uint fastcall Ordinal_1001(uint * param_1, uint param_2, uint * param_3)
NTSTATUS fastcall LsaAddAccountRights(LSA_HANDLE PolicyHandle, PSID AccountSid, PLSA_UNICODE_STRING UserRights, ULONG CountOfRights)
NTSTATUS fastcall LsaEnumerateAccountRights(LSA_HANDLE PolicyHandle, PSID AccountSid, PLSA_UNICODE_STRING * UserRights, PULONG CountOfRights)
NTSTATUS fastcall LsaEnumerateAccountsWithUserRight(LSA_HANDLE PolicyHandle, PLSA_UNICODE_STRING UserRight, PVOID * Buffer, PULONG CountReturned)
NTSTATUS fastcall LsaRemoveAccountRights(LSA_HANDLE PolicyHandle, PSID AccountSid, BOOLEAN AllRights, PLSA_UNICODE_STRING UserRights, ULONG CountOfRights)
ulonglong fastcall LsaDelete(HLOCAL param_1)
NTSTATUS fastcall LsaSetInformationPolicy(LSA_HANDLE PolicyHandle, POLICY_INFORMATION_CLASS InformationClass, PVOID Buffer)
ulonglong fastcall LsaQuerySecret(longlong param_1, uint * * param_2, longlong * param_3, uint * * param_4, longlong * param_5)
NTSTATUS fastcall LsaRetrievePrivateData(LSA_HANDLE PolicyHandle, PLSA_UNICODE_STRING KeyName, PLSA_UNICODE_STRING * PrivateData)
NTSTATUS fastcall LsaStorePrivateData(LSA_HANDLE PolicyHandle, PLSA_UNICODE_STRING KeyName, PLSA_UNICODE_STRING PrivateData)
BOOLEAN fastcall AuditComputeEffectivePolicyBySid(PSID pSid, GUID * pSubCategoryGuids, ULONG dwPolicyCount, PAUDIT_POLICY_INFORMATION * ppAuditPolicy)
BOOLEAN fastcall AuditEnumerateCategories(GUID * * ppAuditCategoriesArray, PULONG pdwCountReturned)
BOOLEAN fastcall AuditEnumeratePerUserPolicy(PPOLICY_AUDIT_SID_ARRAY * ppAuditSidArray)
BOOLEAN fastcall AuditEnumerateSubCategories(GUID * pAuditCategoryGuid, BOOLEAN bRetrieveAllSubCategories, GUID * * ppAuditSubCategoriesArray, PULONG pdwCountReturned)
BOOLEAN fastcall AuditLookupCategoryNameW(GUID * pAuditCategoryGuid, PWSTR * ppszCategoryName)
BOOLEAN fastcall AuditLookupSubCategoryNameW(GUID * pAuditSubCategoryGuid, PWSTR * ppszSubCategoryName)
BOOLEAN fastcall AuditQueryGlobalSaclW(PCWSTR ObjectTypeName, PACL * Acl)
BOOLEAN fastcall AuditQueryPerUserPolicy(PSID pSid, GUID * pSubCategoryGuids, ULONG dwPolicyCount, PAUDIT_POLICY_INFORMATION * ppAuditPolicy)
BOOLEAN fastcall AuditQuerySecurity(SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR * ppSecurityDescriptor)
BOOLEAN fastcall AuditQuerySystemPolicy(GUID * pSubCategoryGuids, ULONG dwPolicyCount, PAUDIT_POLICY_INFORMATION * ppAuditPolicy)
BOOLEAN fastcall AuditSetGlobalSaclW(PCWSTR ObjectTypeName, PACL Acl)
BOOLEAN fastcall AuditSetPerUserPolicy(PSID pSid, PCAUDIT_POLICY_INFORMATION pAuditPolicy, ULONG dwPolicyCount)
BOOLEAN fastcall AuditSetSecurity(SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOLEAN fastcall AuditSetSystemPolicy(PCAUDIT_POLICY_INFORMATION pAuditPolicy, ULONG dwPolicyCount)
bool fastcall CredDeleteA(void * param_1)
bool fastcall CredDeleteW(void * param_1)
bool fastcall CredGetSessionTypes(void)
bool fastcall CredProfileLoaded(void)
bool fastcall CredProfileLoadedEx(void)
bool fastcall CredProfileUnloaded(void)
bool fastcall CredIsProtectedA(void * param_1, int * param_2)
ulonglong fastcall CredMarshalCredentialA(uint param_1, uint * * param_2, void * * param_3)
bool fastcall CredProtectA(int param_1, void * param_2, int param_3, void * param_4, uint * param_5, int * param_6)
bool fastcall CredUnprotectA(int param_1, void * param_2, uint param_3, void * param_4, uint * param_5)
int fastcall CredpConvertTargetInfo(int param_1, void * * param_2, HLOCAL * param_3, uint * param_4)
LPVOID * fastcall basic_string<>(LPVOID * param_1, LPVOID * param_2)