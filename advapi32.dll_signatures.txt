ulonglong fastcall PerfAddCounters(HANDLE * param_1, longlong param_2, uint param_3, byte param_4)
ulonglong fastcall PerfEnumerateCounterSet(LPCWSTR param_1, void * param_2, ulonglong param_3, uint * param_4)
LSTATUS fastcall RegDeleteKeyTransactedW(HKEY hKey, LPCWSTR lpSubKey, REGSAM samDesired, DWORD Reserved, HANDLE hTransaction, PVOID pExtendedParameter)
BOOL fastcall CreateRestrictedToken(HANDLE ExistingTokenHandle, DWORD Flags, DWORD DisableSidCount, PSID_AND_ATTRIBUTES SidsToDisable, DWORD DeletePrivilegeCount, PLUID_AND_ATTRIBUTES PrivilegesToDelete, DWORD RestrictedSidCount, PSID_AND_ATTRIBUTES SidsToRestrict, PHANDLE NewTokenHandle)
int fastcall ConvertSidToStringSidA(longlong param_1, LPSTR * param_2)
BOOL fastcall EnumServicesStatusExW(SC_HANDLE hSCManager, SC_ENUM_TYPE InfoLevel, DWORD dwServiceType, DWORD dwServiceState, LPBYTE lpServices, DWORD cbBufSize, LPDWORD pcbBytesNeeded, LPDWORD lpServicesReturned, LPDWORD lpResumeHandle, LPCWSTR pszGroupName)
BOOL fastcall SetTokenInformation(HANDLE TokenHandle, TOKEN_INFORMATION_CLASS TokenInformationClass, LPVOID TokenInformation, DWORD TokenInformationLength)
LSTATUS fastcall RegGetValueA(HKEY hkey, LPCSTR lpSubKey, LPCSTR lpValue, DWORD dwFlags, LPDWORD pdwType, PVOID pvData, LPDWORD pcbData)
BOOL fastcall InitializeSid(PSID Sid, PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority, BYTE nSubAuthorityCount)
LSTATUS fastcall RegLoadMUIStringW(HKEY hKey, LPCWSTR pszValue, LPWSTR pszOutBuf, DWORD cbOutBuf, LPDWORD pcbData, DWORD Flags, LPCWSTR pszDirectory)
BOOL fastcall GetSecurityDescriptorSacl(PSECURITY_DESCRIPTOR pSecurityDescriptor, LPBOOL lpbSaclPresent, PACL * pSacl, LPBOOL lpbSaclDefaulted)
LSTATUS fastcall RegDeleteKeyExW(HKEY hKey, LPCWSTR lpSubKey, REGSAM samDesired, DWORD Reserved)
HANDLE fastcall OpenEventLogW(LPCWSTR lpUNCServerName, LPCWSTR lpSourceName)
BOOL fastcall GetEventLogInformation(HANDLE hEventLog, DWORD dwInfoLevel, LPVOID lpBuffer, DWORD cbBufSize, LPDWORD pcbBytesNeeded)
BOOL fastcall CloseEventLog(HANDLE hEventLog)
HANDLE fastcall RegisterEventSourceW(LPCWSTR lpUNCServerName, LPCWSTR lpSourceName)
BOOL fastcall DeregisterEventSource(HANDLE hEventLog)
BOOL fastcall ReportEventW(HANDLE hEventLog, WORD wType, WORD wCategory, DWORD dwEventID, PSID lpUserSid, WORD wNumStrings, DWORD dwDataSize, LPCWSTR * lpStrings, LPVOID lpRawData)
DWORD fastcall EnumerateTraceGuids(longlong * param_1, ulonglong param_2, uint * param_3)
LSTATUS fastcall RegQueryValueExW(HKEY hKey, LPCWSTR lpValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData)
LSTATUS fastcall RegOpenKeyExW(HKEY hKey, LPCWSTR lpSubKey, DWORD ulOptions, REGSAM samDesired, PHKEY phkResult)
BOOL fastcall GetTokenInformation(HANDLE TokenHandle, TOKEN_INFORMATION_CLASS TokenInformationClass, LPVOID TokenInformation, DWORD TokenInformationLength, PDWORD ReturnLength)
LSTATUS fastcall RegCreateKeyTransactedW(HKEY hKey, LPCWSTR lpSubKey, DWORD Reserved, LPWSTR lpClass, DWORD dwOptions, REGSAM samDesired, LPSECURITY_ATTRIBUTES lpSecurityAttributes, PHKEY phkResult, LPDWORD lpdwDisposition, HANDLE hTransaction, PVOID pExtendedParemeter)
LSTATUS fastcall RegQueryInfoKeyW(HKEY hKey, LPWSTR lpClass, LPDWORD lpcchClass, LPDWORD lpReserved, LPDWORD lpcSubKeys, LPDWORD lpcbMaxSubKeyLen, LPDWORD lpcbMaxClassLen, LPDWORD lpcValues, LPDWORD lpcbMaxValueNameLen, LPDWORD lpcbMaxValueLen, LPDWORD lpcbSecurityDescriptor, PFILETIME lpftLastWriteTime)
LSTATUS fastcall RegEnumKeyExW(HKEY hKey, DWORD dwIndex, LPWSTR lpName, LPDWORD lpcchName, LPDWORD lpReserved, LPWSTR lpClass, LPDWORD lpcchClass, PFILETIME lpftLastWriteTime)
LSTATUS fastcall RegEnumKeyW(HKEY hKey, DWORD dwIndex, LPWSTR lpName, DWORD cchName)
BOOL fastcall IsTextUnicode(void * lpv, int iSize, LPINT lpiResult)
LSTATUS fastcall RegCloseKey(HKEY hKey)
LSTATUS fastcall RegOpenKeyTransactedW(HKEY hKey, LPCWSTR lpSubKey, DWORD ulOptions, REGSAM samDesired, PHKEY phkResult, HANDLE hTransaction, PVOID pExtendedParemeter)
LSTATUS fastcall RegQueryValueW(HKEY hKey, LPCWSTR lpSubKey, LPWSTR lpData, PLONG lpcbData)
BOOL fastcall LookupAccountSidW(LPCWSTR lpSystemName, PSID Sid, LPWSTR Name, LPDWORD cchName, LPWSTR ReferencedDomainName, LPDWORD cchReferencedDomainName, PSID_NAME_USE peUse)
LSTATUS fastcall RegQueryValueExA(HKEY hKey, LPCSTR lpValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData)
DWORD fastcall TreeResetNamedSecurityInfoW(LPWSTR pObjectName, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, PSID pOwner, PSID pGroup, PACL pDacl, PACL pSacl, BOOL KeepExplicit, FN_PROGRESS fnProgress, PROG_INVOKE_SETTING ProgressInvokeSetting, PVOID Args)
DWORD fastcall BuildSecurityDescriptorW(PTRUSTEE_W pOwner, PTRUSTEE_W pGroup, ULONG cCountOfAccessEntries, PEXPLICIT_ACCESS_W pListOfAccessEntries, ULONG cCountOfAuditEntries, PEXPLICIT_ACCESS_W pListOfAuditEntries, PSECURITY_DESCRIPTOR pOldSD, PULONG pSizeNewSD, PSECURITY_DESCRIPTOR * pNewSD)
BOOL fastcall AllocateAndInitializeSid(PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority, BYTE nSubAuthorityCount, DWORD nSubAuthority0, DWORD nSubAuthority1, DWORD nSubAuthority2, DWORD nSubAuthority3, DWORD nSubAuthority4, DWORD nSubAuthority5, DWORD nSubAuthority6, DWORD nSubAuthority7, PSID * pSid)
DWORD fastcall GetSecurityInfo(HANDLE handle, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, PSID * ppsidOwner, PSID * ppsidGroup, PACL * ppDacl, PACL * ppSacl, PSECURITY_DESCRIPTOR * ppSecurityDescriptor)
LSTATUS fastcall RegDeleteKeyW(HKEY hKey, LPCWSTR lpSubKey)
LSTATUS fastcall RegOpenKeyExA(HKEY hKey, LPCSTR lpSubKey, DWORD ulOptions, REGSAM samDesired, PHKEY phkResult)
BOOL fastcall LookupAccountNameW(LPCWSTR lpSystemName, LPCWSTR lpAccountName, PSID Sid, LPDWORD cbSid, LPWSTR ReferencedDomainName, LPDWORD cchReferencedDomainName, PSID_NAME_USE peUse)
LSTATUS fastcall RegOpenKeyW(HKEY hKey, LPCWSTR lpSubKey, PHKEY phkResult)
BOOL fastcall OpenProcessToken(HANDLE ProcessHandle, DWORD DesiredAccess, PHANDLE TokenHandle)
BOOL fastcall DuplicateTokenEx(HANDLE hExistingToken, DWORD dwDesiredAccess, LPSECURITY_ATTRIBUTES lpTokenAttributes, SECURITY_IMPERSONATION_LEVEL ImpersonationLevel, TOKEN_TYPE TokenType, PHANDLE phNewToken)
BOOL fastcall CopySid(DWORD nDestinationSidLength, PSID pDestinationSid, PSID pSourceSid)
LSTATUS fastcall RegEnumValueW(HKEY hKey, DWORD dwIndex, LPWSTR lpValueName, LPDWORD lpcchValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData)
BOOL fastcall SetSecurityDescriptorDacl(PSECURITY_DESCRIPTOR pSecurityDescriptor, BOOL bDaclPresent, PACL pDacl, BOOL bDaclDefaulted)
BOOL fastcall InitializeSecurityDescriptor(PSECURITY_DESCRIPTOR pSecurityDescriptor, DWORD dwRevision)
BOOL fastcall InitializeAcl(PACL pAcl, DWORD nAclLength, DWORD dwAclRevision)
LSTATUS fastcall RegGetValueW(HKEY hkey, LPCWSTR lpSubKey, LPCWSTR lpValue, DWORD dwFlags, LPDWORD pdwType, PVOID pvData, LPDWORD pcbData)
PDWORD fastcall GetSidSubAuthority(PSID pSid, DWORD nSubAuthority)
BOOL fastcall IsValidSid(PSID pSid)
DWORD fastcall GetLengthSid(PSID pSid)
LSTATUS fastcall RegCreateKeyExW(HKEY hKey, LPCWSTR lpSubKey, DWORD Reserved, LPWSTR lpClass, DWORD dwOptions, REGSAM samDesired, LPSECURITY_ATTRIBUTES lpSecurityAttributes, PHKEY phkResult, LPDWORD lpdwDisposition)
bool fastcall SaferiSearchMatchingHashRules(int param_1, longlong param_2)
PUCHAR fastcall GetSidSubAuthorityCount(PSID pSid)
LSTATUS fastcall RegSetKeyValueW(HKEY hKey, LPCWSTR lpSubKey, LPCWSTR lpValueName, DWORD dwType, LPCVOID lpData, DWORD cbData)
LSTATUS fastcall RegNotifyChangeKeyValue(HKEY hKey, BOOL bWatchSubtree, DWORD dwNotifyFilter, HANDLE hEvent, BOOL fAsynchronous)
DWORD fastcall SetSecurityInfo(HANDLE handle, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, PSID psidOwner, PSID psidGroup, PACL pDacl, PACL pSacl)
LSTATUS fastcall RegSetValueExW(HKEY hKey, LPCWSTR lpValueName, DWORD Reserved, DWORD dwType, BYTE * lpData, DWORD cbData)
BOOL fastcall SetThreadToken(PHANDLE Thread, HANDLE Token)
LSTATUS fastcall RegCreateKeyW(HKEY hKey, LPCWSTR lpSubKey, PHKEY phkResult)
BOOL fastcall CryptGetHashParam(HCRYPTHASH hHash, DWORD dwParam, BYTE * pbData, DWORD * pdwDataLen, DWORD dwFlags)
BOOL fastcall CreateProcessAsUserW(HANDLE hToken, LPCWSTR lpApplicationName, LPWSTR lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes, LPSECURITY_ATTRIBUTES lpThreadAttributes, BOOL bInheritHandles, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCWSTR lpCurrentDirectory, LPSTARTUPINFOW lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation)
BOOL fastcall OpenThreadToken(HANDLE ThreadHandle, DWORD DesiredAccess, BOOL OpenAsSelf, PHANDLE TokenHandle)
BOOL fastcall GetUserNameW(LPWSTR lpBuffer, LPDWORD pcbBuffer)
BOOL fastcall CryptImportKey(HCRYPTPROV hProv, BYTE * pbData, DWORD dwDataLen, HCRYPTKEY hPubKey, DWORD dwFlags, HCRYPTKEY * phKey)
BOOL fastcall EqualSid(PSID pSid1, PSID pSid2)
BOOL fastcall CryptCreateHash(HCRYPTPROV hProv, ALG_ID Algid, HCRYPTKEY hKey, DWORD dwFlags, HCRYPTHASH * phHash)
BOOL fastcall CryptExportKey(HCRYPTKEY hKey, HCRYPTKEY hExpKey, DWORD dwBlobType, DWORD dwFlags, BYTE * pbData, DWORD * pdwDataLen)
BOOL fastcall RevertToSelf(void)
BOOL fastcall CheckTokenMembership(HANDLE TokenHandle, PSID SidToCheck, PBOOL IsMember)
void fastcall BuildExplicitAccessWithNameW(PEXPLICIT_ACCESS_W pExplicitAccess, LPWSTR pTrusteeName, DWORD AccessPermissions, ACCESS_MODE AccessMode, DWORD Inheritance)
BOOL fastcall DuplicateToken(HANDLE ExistingTokenHandle, SECURITY_IMPERSONATION_LEVEL ImpersonationLevel, PHANDLE DuplicateTokenHandle)
BOOL fastcall AddAce(PACL pAcl, DWORD dwAceRevision, DWORD dwStartingAceIndex, LPVOID pAceList, DWORD nAceListLength)
DWORD fastcall SetEntriesInAclW(ULONG cCountOfExplicitEntries, PEXPLICIT_ACCESS_W pListOfExplicitEntries, PACL OldAcl, PACL * NewAcl)
BOOL fastcall CloseServiceHandle(SC_HANDLE hSCObject)
PVOID fastcall FreeSid(PSID pSid)
LSTATUS fastcall RegDisablePredefinedCache(void)
SC_HANDLE fastcall OpenServiceW(SC_HANDLE hSCManager, LPCWSTR lpServiceName, DWORD dwDesiredAccess)
BOOL fastcall AdjustTokenPrivileges(HANDLE TokenHandle, BOOL DisableAllPrivileges, PTOKEN_PRIVILEGES NewState, DWORD BufferLength, PTOKEN_PRIVILEGES PreviousState, PDWORD ReturnLength)
BOOL fastcall CryptAcquireContextA(HCRYPTPROV * phProv, LPCSTR szContainer, LPCSTR szProvider, DWORD dwProvType, DWORD dwFlags)
BOOL fastcall AddAccessAllowedAce(PACL pAcl, DWORD dwAceRevision, DWORD AccessMask, PSID pSid)
BOOL fastcall AddAccessAllowedAceEx(PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD AccessMask, PSID pSid)
BOOL fastcall CryptHashData(HCRYPTHASH hHash, BYTE * pbData, DWORD dwDataLen, DWORD dwFlags)
BOOL fastcall CryptDestroyHash(HCRYPTHASH hHash)
DWORD fastcall GetNamedSecurityInfoW(LPCWSTR pObjectName, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, PSID * ppsidOwner, PSID * ppsidGroup, PACL * ppDacl, PACL * ppSacl, PSECURITY_DESCRIPTOR * ppSecurityDescriptor)
BOOL fastcall QueryServiceConfigW(SC_HANDLE hService, LPQUERY_SERVICE_CONFIGW lpServiceConfig, DWORD cbBufSize, LPDWORD pcbBytesNeeded)
BOOL fastcall CryptAcquireContextW(HCRYPTPROV * phProv, LPCWSTR szContainer, LPCWSTR szProvider, DWORD dwProvType, DWORD dwFlags)
BOOL fastcall SetSecurityDescriptorOwner(PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID pOwner, BOOL bOwnerDefaulted)
BOOL fastcall GetAce(PACL pAcl, DWORD dwAceIndex, LPVOID * pAce)
BOOL fastcall CreateWellKnownSid(WELL_KNOWN_SID_TYPE WellKnownSidType, PSID DomainSid, PSID pSid, DWORD * cbSid)
BOOL fastcall CryptDestroyKey(HCRYPTKEY hKey)
BOOL fastcall CryptReleaseContext(HCRYPTPROV hProv, ULONG_PTR dwFlags)
LSTATUS fastcall RegEnumKeyA(HKEY hKey, DWORD dwIndex, LPSTR lpName, DWORD cchName)
BOOL fastcall GetAclInformation(PACL pAcl, LPVOID pAclInformation, DWORD nAclInformationLength, ACL_INFORMATION_CLASS dwAclInformationClass)
BOOL fastcall GetFileSecurityW(LPCWSTR lpFileName, SECURITY_INFORMATION RequestedInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor, DWORD nLength, LPDWORD lpnLengthNeeded)
BOOL fastcall CryptVerifySignatureW(HCRYPTHASH hHash, BYTE * pbSignature, DWORD dwSigLen, HCRYPTKEY hPubKey, LPCWSTR szDescription, DWORD dwFlags)
SC_HANDLE fastcall OpenSCManagerW(LPCWSTR lpMachineName, LPCWSTR lpDatabaseName, DWORD dwDesiredAccess)
BOOL fastcall CryptGetDefaultProviderW(DWORD dwProvType, DWORD * pdwReserved, DWORD dwFlags, LPWSTR pszProvName, DWORD * pcbProvName)
LSTATUS fastcall RegDeleteValueW(HKEY hKey, LPCWSTR lpValueName)
BOOL fastcall QueryServiceStatusEx(SC_HANDLE hService, SC_STATUS_TYPE InfoLevel, LPBYTE lpBuffer, DWORD cbBufSize, LPDWORD pcbBytesNeeded)
BOOL fastcall DeleteAce(PACL pAcl, DWORD dwAceIndex)
BOOL fastcall GetSecurityDescriptorDacl(PSECURITY_DESCRIPTOR pSecurityDescriptor, LPBOOL lpbDaclPresent, PACL * pDacl, LPBOOL lpbDaclDefaulted)
BOOL fastcall AccessCheck(PSECURITY_DESCRIPTOR pSecurityDescriptor, HANDLE ClientToken, DWORD DesiredAccess, PGENERIC_MAPPING GenericMapping, PPRIVILEGE_SET PrivilegeSet, LPDWORD PrivilegeSetLength, LPDWORD GrantedAccess, LPBOOL AccessStatus)
BOOL fastcall SetSecurityDescriptorGroup(PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID pGroup, BOOL bGroupDefaulted)
BOOL fastcall SetServiceStatus(SERVICE_STATUS_HANDLE hServiceStatus, LPSERVICE_STATUS lpServiceStatus)
BOOL fastcall CryptGenRandom(HCRYPTPROV hProv, DWORD dwLen, BYTE * pbBuffer)
NTSTATUS fastcall LsaFreeMemory(PVOID Buffer)
BOOL fastcall GetKernelObjectSecurity(HANDLE Handle, SECURITY_INFORMATION RequestedInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor, DWORD nLength, LPDWORD lpnLengthNeeded)
BOOL fastcall GetSecurityDescriptorOwner(PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID * pOwner, LPBOOL lpbOwnerDefaulted)
BOOL fastcall SetFileSecurityW(LPCWSTR lpFileName, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor)
LSTATUS fastcall RegOpenCurrentUser(REGSAM samDesired, PHKEY phkResult)
LSTATUS fastcall RegDeleteKeyValueW(HKEY hKey, LPCWSTR lpSubKey, LPCWSTR lpValueName)
BOOL fastcall QueryServiceStatus(SC_HANDLE hService, LPSERVICE_STATUS lpServiceStatus)
ulonglong fastcall LsaClose(int * param_1)
LSTATUS fastcall RegFlushKey(HKEY hKey)
BOOL fastcall StartServiceCtrlDispatcherW(SERVICE_TABLE_ENTRYW * lpServiceStartTable)
BOOL fastcall StartServiceW(SC_HANDLE hService, DWORD dwNumServiceArgs, LPCWSTR * lpServiceArgVectors)
BOOL fastcall SetKernelObjectSecurity(HANDLE Handle, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR SecurityDescriptor)
SERVICE_STATUS_HANDLE fastcall RegisterServiceCtrlHandlerW(LPCWSTR lpServiceName, LPHANDLER_FUNCTION lpHandlerProc)
LSTATUS fastcall RegDeleteTreeW(HKEY hKey, LPCWSTR lpSubKey)
HLOCAL fastcall MIDL_user_free_Ext(HLOCAL hMem)
void * cdecl operator_new[](__uint64 param_1, FILL param_2)
ulonglong fastcall ConvertStringSidToSidW(wchar_t * param_1, HLOCAL * param_2)
bool fastcall ConvertStringSecurityDescriptorToSecurityDescriptorW(wchar_t * param_1, int param_2, HLOCAL * param_3, uint * param_4)
BOOL fastcall LookupPrivilegeValueW(LPCWSTR lpSystemName, LPCWSTR lpName, PLUID lpLuid)
BOOL fastcall EnumServicesStatusExA(SC_HANDLE hSCManager, SC_ENUM_TYPE InfoLevel, DWORD dwServiceType, DWORD dwServiceState, LPBYTE lpServices, DWORD cbBufSize, LPDWORD pcbBytesNeeded, LPDWORD lpServicesReturned, LPDWORD lpResumeHandle, LPCSTR pszGroupName)
LSTATUS fastcall RegOpenKeyA(HKEY hKey, LPCSTR lpSubKey, PHKEY phkResult)
SC_HANDLE fastcall OpenSCManagerA(LPCSTR lpMachineName, LPCSTR lpDatabaseName, DWORD dwDesiredAccess)
BOOL fastcall ImpersonateSelf(SECURITY_IMPERSONATION_LEVEL ImpersonationLevel)
DWORD fastcall InitiateShutdownW(LPWSTR lpMachineName, LPWSTR lpMessage, DWORD dwGracePeriod, DWORD dwShutdownFlags, DWORD dwReason)
ulonglong fastcall CheckForHiberboot(void)
BOOL fastcall NotifyBootConfigStatus(BOOL BootAcceptable)
BOOL fastcall LookupPrivilegeValueA(LPCSTR lpSystemName, LPCSTR lpName, PLUID lpLuid)
BOOLEAN fastcall AuditQuerySystemPolicy(GUID * pSubCategoryGuids, ULONG dwPolicyCount, PAUDIT_POLICY_INFORMATION * ppAuditPolicy)
void fastcall AuditFree(PVOID Buffer)
BOOLEAN fastcall AuditQueryPerUserPolicy(PSID pSid, GUID * pSubCategoryGuids, ULONG dwPolicyCount, PAUDIT_POLICY_INFORMATION * ppAuditPolicy)
void fastcall BuildTrusteeWithSidW(PTRUSTEE_W pTrustee, PSID pSid)
BOOL fastcall ImpersonateLoggedOnUser(HANDLE hToken)
bool fastcall ConvertSecurityDescriptorToStringSecurityDescriptorW(longlong param_1, int param_2, uint param_3, wchar_t * * param_4, uint * param_5)
BOOL fastcall GetCurrentHwProfileW(LPHW_PROFILE_INFOW lpHwProfileInfo)
BOOL fastcall MakeAbsoluteSD(PSECURITY_DESCRIPTOR pSelfRelativeSecurityDescriptor, PSECURITY_DESCRIPTOR pAbsoluteSecurityDescriptor, LPDWORD lpdwAbsoluteSecurityDescriptorSize, PACL pDacl, LPDWORD lpdwDaclSize, PACL pSacl, LPDWORD lpdwSaclSize, PSID pOwner, LPDWORD lpdwOwnerSize, PSID pPrimaryGroup, LPDWORD lpdwPrimaryGroupSize)
BOOL fastcall ChangeServiceConfigW(SC_HANDLE hService, DWORD dwServiceType, DWORD dwStartType, DWORD dwErrorControl, LPCWSTR lpBinaryPathName, LPCWSTR lpLoadOrderGroup, LPDWORD lpdwTagId, LPCWSTR lpDependencies, LPCWSTR lpServiceStartName, LPCWSTR lpPassword, LPCWSTR lpDisplayName)
DWORD fastcall SetNamedSecurityInfoW(LPWSTR pObjectName, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, PSID psidOwner, PSID psidGroup, PACL pDacl, PACL pSacl)
SERVICE_STATUS_HANDLE fastcall RegisterServiceCtrlHandlerExW(LPCWSTR lpServiceName, LPHANDLER_FUNCTION_EX lpHandlerProc, LPVOID lpContext)
BOOL fastcall QueryServiceConfig2W(SC_HANDLE hService, DWORD dwInfoLevel, LPBYTE lpBuffer, DWORD cbBufSize, LPDWORD pcbBytesNeeded)
LSTATUS fastcall RegGetKeySecurity(HKEY hKey, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor, LPDWORD lpcbSecurityDescriptor)
BOOL fastcall IsWellKnownSid(PSID pSid, WELL_KNOWN_SID_TYPE WellKnownSidType)
BOOL fastcall ChangeServiceConfig2W(SC_HANDLE hService, DWORD dwInfoLevel, LPVOID lpInfo)
HLOCAL fastcall MIDL_user_free_Ext(HLOCAL hMem)
HLOCAL fastcall MIDL_user_free_Ext(HLOCAL hMem)
int cdecl memcmp(void * _Buf1, void * _Buf2, size_t _Size)
void * cdecl memcpy(void * _Dst, void * _Src, size_t _Size)
void * cdecl memmove(void * _Dst, void * _Src, size_t _Size)
void * cdecl memset(void * _Dst, int _Val, size_t _Size)
BOOL fastcall AddAccessDeniedAce(PACL pAcl, DWORD dwAceRevision, DWORD AccessMask, PSID pSid)
BOOL fastcall ControlService(SC_HANDLE hService, DWORD dwControl, LPSERVICE_STATUS lpServiceStatus)
BOOL fastcall CreatePrivateObjectSecurity(PSECURITY_DESCRIPTOR ParentDescriptor, PSECURITY_DESCRIPTOR CreatorDescriptor, PSECURITY_DESCRIPTOR * NewDescriptor, BOOL IsDirectoryObject, HANDLE Token, PGENERIC_MAPPING GenericMapping)
BOOL fastcall CreatePrivateObjectSecurityWithMultipleInheritance(PSECURITY_DESCRIPTOR ParentDescriptor, PSECURITY_DESCRIPTOR CreatorDescriptor, PSECURITY_DESCRIPTOR * NewDescriptor, GUID * * ObjectTypes, ULONG GuidCount, BOOL IsContainerObject, ULONG AutoInheritFlags, HANDLE Token, PGENERIC_MAPPING GenericMapping)
BOOL fastcall CryptContextAddRef(HCRYPTPROV hProv, DWORD * pdwReserved, DWORD dwFlags)
BOOL fastcall CryptDecrypt(HCRYPTKEY hKey, HCRYPTHASH hHash, BOOL Final, DWORD dwFlags, BYTE * pbData, DWORD * pdwDataLen)
BOOL fastcall CryptDeriveKey(HCRYPTPROV hProv, ALG_ID Algid, HCRYPTHASH hBaseData, DWORD dwFlags, HCRYPTKEY * phKey)
BOOL fastcall CryptDuplicateKey(HCRYPTKEY hKey, DWORD * pdwReserved, DWORD dwFlags, HCRYPTKEY * phKey)
BOOL fastcall CryptEncrypt(HCRYPTKEY hKey, HCRYPTHASH hHash, BOOL Final, DWORD dwFlags, BYTE * pbData, DWORD * pdwDataLen, DWORD dwBufLen)
BOOL fastcall CryptGetKeyParam(HCRYPTKEY hKey, DWORD dwParam, BYTE * pbData, DWORD * pdwDataLen, DWORD dwFlags)
BOOL fastcall CryptGetProvParam(HCRYPTPROV hProv, DWORD dwParam, BYTE * pbData, DWORD * pdwDataLen, DWORD dwFlags)
BOOL fastcall CryptGetUserKey(HCRYPTPROV hProv, DWORD dwKeySpec, HCRYPTKEY * phUserKey)
BOOL fastcall CryptSetHashParam(HCRYPTHASH hHash, DWORD dwParam, BYTE * pbData, DWORD dwFlags)
BOOL fastcall CryptSetKeyParam(HCRYPTKEY hKey, DWORD dwParam, BYTE * pbData, DWORD dwFlags)
BOOL fastcall CryptSignHashW(HCRYPTHASH hHash, DWORD dwKeySpec, LPCWSTR szDescription, DWORD dwFlags, BYTE * pbSignature, DWORD * pdwSigLen)
BOOL fastcall CryptVerifySignatureA(HCRYPTHASH hHash, BYTE * pbSignature, DWORD dwSigLen, HCRYPTKEY hPubKey, LPCSTR szDescription, DWORD dwFlags)
BOOL fastcall DestroyPrivateObjectSecurity(PSECURITY_DESCRIPTOR * ObjectDescriptor)
BOOL fastcall EnumDependentServicesW(SC_HANDLE hService, DWORD dwServiceState, LPENUM_SERVICE_STATUSW lpServices, DWORD cbBufSize, LPDWORD pcbBytesNeeded, LPDWORD lpServicesReturned)
BOOL fastcall GetSecurityDescriptorControl(PSECURITY_DESCRIPTOR pSecurityDescriptor, PSECURITY_DESCRIPTOR_CONTROL pControl, LPDWORD lpdwRevision)
BOOL fastcall GetSecurityDescriptorGroup(PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID * pGroup, LPBOOL lpbGroupDefaulted)
DWORD fastcall GetSecurityDescriptorLength(PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL fastcall GetServiceDisplayNameW(SC_HANDLE hSCManager, LPCWSTR lpServiceName, LPWSTR lpDisplayName, LPDWORD lpcchBuffer)
BOOL fastcall GetServiceKeyNameW(SC_HANDLE hSCManager, LPCWSTR lpDisplayName, LPWSTR lpServiceName, LPDWORD lpcchBuffer)
PSID_IDENTIFIER_AUTHORITY fastcall GetSidIdentifierAuthority(PSID pSid)
DWORD fastcall GetSidLengthRequired(UCHAR nSubAuthorityCount)
BOOL fastcall GetWindowsAccountDomainSid(PSID pSid, PSID pDomainSid, DWORD * cbDomainSid)
BOOL fastcall ImpersonateAnonymousToken(HANDLE ThreadHandle)
BOOL fastcall ImpersonateNamedPipeClient(HANDLE hNamedPipe)
BOOL fastcall IsTokenRestricted(HANDLE TokenHandle)
BOOL fastcall IsValidSecurityDescriptor(PSECURITY_DESCRIPTOR pSecurityDescriptor)
NTSTATUS fastcall LsaLookupSids(LSA_HANDLE PolicyHandle, ULONG Count, PSID * Sids, PLSA_REFERENCED_DOMAIN_LIST * ReferencedDomains, PLSA_TRANSLATED_NAME * Names)
BOOL fastcall MakeSelfRelativeSD(PSECURITY_DESCRIPTOR pAbsoluteSecurityDescriptor, PSECURITY_DESCRIPTOR pSelfRelativeSecurityDescriptor, LPDWORD lpdwBufferLength)
void fastcall MapGenericMask(PDWORD AccessMask, PGENERIC_MAPPING GenericMapping)
SC_HANDLE fastcall OpenServiceA(SC_HANDLE hSCManager, LPCSTR lpServiceName, DWORD dwDesiredAccess)
BOOL fastcall PrivilegeCheck(HANDLE ClientToken, PPRIVILEGE_SET RequiredPrivileges, LPBOOL pfResult)
BOOL fastcall QueryServiceConfig2A(SC_HANDLE hService, DWORD dwInfoLevel, LPBYTE lpBuffer, DWORD cbBufSize, LPDWORD pcbBytesNeeded)
BOOL fastcall QueryServiceConfigA(SC_HANDLE hService, LPQUERY_SERVICE_CONFIGA lpServiceConfig, DWORD cbBufSize, LPDWORD pcbBytesNeeded)
LSTATUS fastcall RegCreateKeyExA(HKEY hKey, LPCSTR lpSubKey, DWORD Reserved, LPSTR lpClass, DWORD dwOptions, REGSAM samDesired, LPSECURITY_ATTRIBUTES lpSecurityAttributes, PHKEY phkResult, LPDWORD lpdwDisposition)
LSTATUS fastcall RegDeleteValueA(HKEY hKey, LPCSTR lpValueName)
LSTATUS fastcall RegEnumKeyExA(HKEY hKey, DWORD dwIndex, LPSTR lpName, LPDWORD lpcchName, LPDWORD lpReserved, LPSTR lpClass, LPDWORD lpcchClass, PFILETIME lpftLastWriteTime)
LSTATUS fastcall RegEnumValueA(HKEY hKey, DWORD dwIndex, LPSTR lpValueName, LPDWORD lpcchValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData)
LSTATUS fastcall RegQueryInfoKeyA(HKEY hKey, LPSTR lpClass, LPDWORD lpcchClass, LPDWORD lpReserved, LPDWORD lpcSubKeys, LPDWORD lpcbMaxSubKeyLen, LPDWORD lpcbMaxClassLen, LPDWORD lpcValues, LPDWORD lpcbMaxValueNameLen, LPDWORD lpcbMaxValueLen, LPDWORD lpcbSecurityDescriptor, PFILETIME lpftLastWriteTime)
LSTATUS fastcall RegQueryMultipleValuesW(HKEY hKey, PVALENTW val_list, DWORD num_vals, LPWSTR lpValueBuf, LPDWORD ldwTotsize)
LSTATUS fastcall RegSetKeySecurity(HKEY hKey, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor)
LSTATUS fastcall RegSetValueExA(HKEY hKey, LPCSTR lpValueName, DWORD Reserved, DWORD dwType, BYTE * lpData, DWORD cbData)
BOOL fastcall SetSecurityDescriptorControl(PSECURITY_DESCRIPTOR pSecurityDescriptor, SECURITY_DESCRIPTOR_CONTROL ControlBitsOfInterest, SECURITY_DESCRIPTOR_CONTROL ControlBitsToSet)
BOOL fastcall SetSecurityDescriptorSacl(PSECURITY_DESCRIPTOR pSecurityDescriptor, BOOL bSaclPresent, PACL pSacl, BOOL bSaclDefaulted)
LONG fastcall RegDisableReflectionKey(HKEY hBase)
ulonglong fastcall PerfCloseQueryHandle(HANDLE * param_1)
LSTATUS fastcall RegCreateKeyA(HKEY hKey, LPCSTR lpSubKey, PHKEY phkResult)
LSTATUS fastcall RegConnectRegistryW(LPCWSTR lpMachineName, HKEY hKey, PHKEY phkResult)
BOOL fastcall EnumServicesStatusW(SC_HANDLE hSCManager, DWORD dwServiceType, DWORD dwServiceState, LPENUM_SERVICE_STATUSW lpServices, DWORD cbBufSize, LPDWORD pcbBytesNeeded, LPDWORD lpServicesReturned, LPDWORD lpResumeHandle)
BOOL fastcall GetUserNameA(LPSTR lpBuffer, LPDWORD pcbBuffer)
ulonglong fastcall ConvertStringSecurityDescriptorToSecurityDescriptorA(longlong param_1, int param_2, HLOCAL * param_3, uint * param_4)
BOOL fastcall GetNumberOfEventLogRecords(HANDLE hEventLog, PDWORD NumberOfRecords)
BOOL fastcall GetOldestEventLogRecord(HANDLE hEventLog, PDWORD OldestRecord)
HANDLE fastcall OpenEventLogA(LPCSTR lpUNCServerName, LPCSTR lpSourceName)
BOOL fastcall ReadEventLogA(HANDLE hEventLog, DWORD dwReadFlags, DWORD dwRecordOffset, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, DWORD * pnBytesRead, DWORD * pnMinNumberOfBytesNeeded)
BOOL fastcall ReadEventLogW(HANDLE hEventLog, DWORD dwReadFlags, DWORD dwRecordOffset, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, DWORD * pnBytesRead, DWORD * pnMinNumberOfBytesNeeded)
BOOL fastcall GetCurrentHwProfileA(LPHW_PROFILE_INFOA lpHwProfileInfo)
DWORD fastcall AddUsersToEncryptedFile(longlong param_1, longlong param_2)
void fastcall CloseEncryptedFileRaw(PVOID pvContext)
BOOL fastcall DecryptFileA(LPCSTR lpFileName, DWORD dwReserved)
BOOL fastcall DecryptFileW(LPCWSTR lpFileName, DWORD dwReserved)
BOOL fastcall EncryptFileA(LPCSTR lpFileName)
BOOL fastcall EncryptFileW(LPCWSTR lpFileName)
BOOL fastcall FileEncryptionStatusA(LPCSTR lpFileName, LPDWORD lpStatus)
BOOL fastcall FileEncryptionStatusW(LPCWSTR lpFileName, LPDWORD lpStatus)
DWORD fastcall OpenEncryptedFileRawA(LPCSTR lpFileName, ULONG ulFlags, PVOID * pvContext)
DWORD fastcall OpenEncryptedFileRawW(LPCWSTR lpFileName, ULONG ulFlags, PVOID * pvContext)
DWORD fastcall QueryRecoveryAgentsOnEncryptedFile(longlong param_1, longlong param_2)
DWORD fastcall QueryUsersOnEncryptedFile(longlong param_1, longlong param_2)
DWORD fastcall ReadEncryptedFileRaw(PFE_EXPORT_FUNC pfExportCallback, PVOID pvCallbackContext, PVOID pvContext)
DWORD fastcall RemoveUsersFromEncryptedFile(longlong param_1, longlong param_2)
DWORD fastcall UsePinForEncryptedFilesA(int param_1, longlong param_2, longlong param_3)
DWORD fastcall WriteEncryptedFileRaw(PFE_IMPORT_FUNC pfImportCallback, PVOID pvCallbackContext, PVOID pvContext)
BOOL fastcall AccessCheckAndAuditAlarmW(LPCWSTR SubsystemName, LPVOID HandleId, LPWSTR ObjectTypeName, LPWSTR ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, DWORD DesiredAccess, PGENERIC_MAPPING GenericMapping, BOOL ObjectCreation, LPDWORD GrantedAccess, LPBOOL AccessStatus, LPBOOL pfGenerateOnClose)
BOOL fastcall AccessCheckByTypeAndAuditAlarmW(LPCWSTR SubsystemName, LPVOID HandleId, LPCWSTR ObjectTypeName, LPCWSTR ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, DWORD DesiredAccess, AUDIT_EVENT_TYPE AuditType, DWORD Flags, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, BOOL ObjectCreation, LPDWORD GrantedAccess, LPBOOL AccessStatus, LPBOOL pfGenerateOnClose)
BOOL fastcall AccessCheckByTypeResultListAndAuditAlarmByHandleW(LPCWSTR SubsystemName, LPVOID HandleId, HANDLE ClientToken, LPCWSTR ObjectTypeName, LPCWSTR ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, DWORD DesiredAccess, AUDIT_EVENT_TYPE AuditType, DWORD Flags, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, BOOL ObjectCreation, LPDWORD GrantedAccess, LPDWORD AccessStatusList, LPBOOL pfGenerateOnClose)
BOOL fastcall AccessCheckByTypeResultListAndAuditAlarmW(LPCWSTR SubsystemName, LPVOID HandleId, LPCWSTR ObjectTypeName, LPCWSTR ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, DWORD DesiredAccess, AUDIT_EVENT_TYPE AuditType, DWORD Flags, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, BOOL ObjectCreation, LPDWORD GrantedAccess, LPDWORD AccessStatusList, LPBOOL pfGenerateOnClose)
BOOL fastcall AccessCheckByTypeResultList(PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID PrincipalSelfSid, HANDLE ClientToken, DWORD DesiredAccess, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, PPRIVILEGE_SET PrivilegeSet, LPDWORD PrivilegeSetLength, LPDWORD GrantedAccessList, LPDWORD AccessStatusList)
BOOL fastcall AccessCheckByType(PSECURITY_DESCRIPTOR pSecurityDescriptor, PSID PrincipalSelfSid, HANDLE ClientToken, DWORD DesiredAccess, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, PPRIVILEGE_SET PrivilegeSet, LPDWORD PrivilegeSetLength, LPDWORD GrantedAccess, LPBOOL AccessStatus)
BOOL fastcall AddAccessAllowedObjectAce(PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD AccessMask, GUID * ObjectTypeGuid, GUID * InheritedObjectTypeGuid, PSID pSid)
BOOL fastcall AddAccessDeniedAceEx(PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD AccessMask, PSID pSid)
BOOL fastcall AddAccessDeniedObjectAce(PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD AccessMask, GUID * ObjectTypeGuid, GUID * InheritedObjectTypeGuid, PSID pSid)
BOOL fastcall AddAuditAccessAceEx(PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD dwAccessMask, PSID pSid, BOOL bAuditSuccess, BOOL bAuditFailure)
BOOL fastcall AddAuditAccessAce(PACL pAcl, DWORD dwAceRevision, DWORD dwAccessMask, PSID pSid, BOOL bAuditSuccess, BOOL bAuditFailure)
BOOL fastcall AddAuditAccessObjectAce(PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, DWORD AccessMask, GUID * ObjectTypeGuid, GUID * InheritedObjectTypeGuid, PSID pSid, BOOL bAuditSuccess, BOOL bAuditFailure)
BOOL fastcall AdjustTokenGroups(HANDLE TokenHandle, BOOL ResetToDefault, PTOKEN_GROUPS NewState, DWORD BufferLength, PTOKEN_GROUPS PreviousState, PDWORD ReturnLength)
BOOL fastcall AllocateLocallyUniqueId(PLUID Luid)
BOOL fastcall AreAllAccessesGranted(DWORD GrantedAccess, DWORD DesiredAccess)
BOOL fastcall AreAnyAccessesGranted(DWORD GrantedAccess, DWORD DesiredAccess)
BOOLEAN fastcall AuditComputeEffectivePolicyBySid(PSID pSid, GUID * pSubCategoryGuids, ULONG dwPolicyCount, PAUDIT_POLICY_INFORMATION * ppAuditPolicy)
BOOLEAN fastcall AuditEnumerateCategories(GUID * * ppAuditCategoriesArray, PULONG pdwCountReturned)
BOOLEAN fastcall AuditEnumeratePerUserPolicy(PPOLICY_AUDIT_SID_ARRAY * ppAuditSidArray)
BOOLEAN fastcall AuditEnumerateSubCategories(GUID * pAuditCategoryGuid, BOOLEAN bRetrieveAllSubCategories, GUID * * ppAuditSubCategoriesArray, PULONG pdwCountReturned)
BOOLEAN fastcall AuditLookupCategoryNameW(GUID * pAuditCategoryGuid, PWSTR * ppszCategoryName)
BOOLEAN fastcall AuditLookupSubCategoryNameW(GUID * pAuditSubCategoryGuid, PWSTR * ppszSubCategoryName)
BOOLEAN fastcall AuditQueryGlobalSaclW(PCWSTR ObjectTypeName, PACL * Acl)
BOOLEAN fastcall AuditQuerySecurity(SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR * ppSecurityDescriptor)
BOOLEAN fastcall AuditSetGlobalSaclW(PCWSTR ObjectTypeName, PACL Acl)
BOOLEAN fastcall AuditSetPerUserPolicy(PSID pSid, PCAUDIT_POLICY_INFORMATION pAuditPolicy, ULONG dwPolicyCount)
BOOLEAN fastcall AuditSetSecurity(SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOLEAN fastcall AuditSetSystemPolicy(PCAUDIT_POLICY_INFORMATION pAuditPolicy, ULONG dwPolicyCount)
BOOL fastcall ChangeServiceConfig2A(SC_HANDLE hService, DWORD dwInfoLevel, LPVOID lpInfo)
BOOL fastcall ChangeServiceConfigA(SC_HANDLE hService, DWORD dwServiceType, DWORD dwStartType, DWORD dwErrorControl, LPCSTR lpBinaryPathName, LPCSTR lpLoadOrderGroup, LPDWORD lpdwTagId, LPCSTR lpDependencies, LPCSTR lpServiceStartName, LPCSTR lpPassword, LPCSTR lpDisplayName)
BOOL fastcall ConvertToAutoInheritPrivateObjectSecurity(PSECURITY_DESCRIPTOR ParentDescriptor, PSECURITY_DESCRIPTOR CurrentSecurityDescriptor, PSECURITY_DESCRIPTOR * NewSecurityDescriptor, GUID * ObjectType, BOOLEAN IsDirectoryObject, PGENERIC_MAPPING GenericMapping)
BOOL fastcall CreatePrivateObjectSecurityEx(PSECURITY_DESCRIPTOR ParentDescriptor, PSECURITY_DESCRIPTOR CreatorDescriptor, PSECURITY_DESCRIPTOR * NewDescriptor, GUID * ObjectType, BOOL IsContainerObject, ULONG AutoInheritFlags, HANDLE Token, PGENERIC_MAPPING GenericMapping)
BOOL fastcall CreateProcessAsUserA(HANDLE hToken, LPCSTR lpApplicationName, LPSTR lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes, LPSECURITY_ATTRIBUTES lpThreadAttributes, BOOL bInheritHandles, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCSTR lpCurrentDirectory, LPSTARTUPINFOA lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation)
SC_HANDLE fastcall CreateServiceA(SC_HANDLE hSCManager, LPCSTR lpServiceName, LPCSTR lpDisplayName, DWORD dwDesiredAccess, DWORD dwServiceType, DWORD dwStartType, DWORD dwErrorControl, LPCSTR lpBinaryPathName, LPCSTR lpLoadOrderGroup, LPDWORD lpdwTagId, LPCSTR lpDependencies, LPCSTR lpServiceStartName, LPCSTR lpPassword)
SC_HANDLE fastcall CreateServiceW(SC_HANDLE hSCManager, LPCWSTR lpServiceName, LPCWSTR lpDisplayName, DWORD dwDesiredAccess, DWORD dwServiceType, DWORD dwStartType, DWORD dwErrorControl, LPCWSTR lpBinaryPathName, LPCWSTR lpLoadOrderGroup, LPDWORD lpdwTagId, LPCWSTR lpDependencies, LPCWSTR lpServiceStartName, LPCWSTR lpPassword)
BOOL fastcall CryptDuplicateHash(HCRYPTHASH hHash, DWORD * pdwReserved, DWORD dwFlags, HCRYPTHASH * phHash)
BOOL fastcall CryptEnumProviderTypesA(DWORD dwIndex, DWORD * pdwReserved, DWORD dwFlags, DWORD * pdwProvType, LPSTR szTypeName, DWORD * pcbTypeName)
BOOL fastcall CryptEnumProviderTypesW(DWORD dwIndex, DWORD * pdwReserved, DWORD dwFlags, DWORD * pdwProvType, LPWSTR szTypeName, DWORD * pcbTypeName)
BOOL fastcall CryptEnumProvidersA(DWORD dwIndex, DWORD * pdwReserved, DWORD dwFlags, DWORD * pdwProvType, LPSTR szProvName, DWORD * pcbProvName)
BOOL fastcall CryptEnumProvidersW(DWORD dwIndex, DWORD * pdwReserved, DWORD dwFlags, DWORD * pdwProvType, LPWSTR szProvName, DWORD * pcbProvName)
BOOL fastcall CryptGenKey(HCRYPTPROV hProv, ALG_ID Algid, DWORD dwFlags, HCRYPTKEY * phKey)
BOOL fastcall CryptGetDefaultProviderA(DWORD dwProvType, DWORD * pdwReserved, DWORD dwFlags, LPSTR pszProvName, DWORD * pcbProvName)
BOOL fastcall CryptHashSessionKey(HCRYPTHASH hHash, HCRYPTKEY hKey, DWORD dwFlags)
BOOL fastcall CryptSetProvParam(HCRYPTPROV hProv, DWORD dwParam, BYTE * pbData, DWORD dwFlags)
BOOL fastcall CryptSetProviderA(LPCSTR pszProvName, DWORD dwProvType)
BOOL fastcall CryptSetProviderExA(LPCSTR pszProvName, DWORD dwProvType, DWORD * pdwReserved, DWORD dwFlags)
BOOL fastcall CryptSetProviderExW(LPCWSTR pszProvName, DWORD dwProvType, DWORD * pdwReserved, DWORD dwFlags)
BOOL fastcall CryptSetProviderW(LPCWSTR pszProvName, DWORD dwProvType)
BOOL fastcall CryptSignHashA(HCRYPTHASH hHash, DWORD dwKeySpec, LPCSTR szDescription, DWORD dwFlags, BYTE * pbSignature, DWORD * pdwSigLen)
BOOL fastcall DeleteService(SC_HANDLE hService)
BOOL fastcall EqualDomainSid(PSID pSid1, PSID pSid2, BOOL * pfEqual)
BOOL fastcall EqualPrefixSid(PSID pSid1, PSID pSid2)
BOOL fastcall FindFirstFreeAce(PACL pAcl, LPVOID * pAce)
DWORD fastcall GetExplicitEntriesFromAclW(PACL pacl, PULONG pcCountOfExplicitEntries, PEXPLICIT_ACCESS_W * pListOfExplicitEntries)
BOOL fastcall GetPrivateObjectSecurity(PSECURITY_DESCRIPTOR ObjectDescriptor, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR ResultantDescriptor, DWORD DescriptorLength, PDWORD ReturnLength)
DWORD fastcall GetSecurityDescriptorRMControl(PSECURITY_DESCRIPTOR SecurityDescriptor, PUCHAR RMControl)
BOOL fastcall IsValidAcl(PACL pAcl)
CLIENT_CALL_RETURN fastcall LsaAddAccountRights(longlong param_1)
ulonglong fastcall LsaDelete(HLOCAL param_1)
ulonglong fastcall LsaQuerySecret(longlong param_1, uint * * param_2, longlong * param_3, uint * * param_4, longlong * param_5)
CLIENT_CALL_RETURN fastcall LsaRemoveAccountRights(longlong param_1)
ulonglong fastcall LsaSetInformationPolicy(longlong param_1, int param_2)
BOOL fastcall MakeAbsoluteSD2(PSECURITY_DESCRIPTOR pSelfRelativeSecurityDescriptor, LPDWORD lpdwBufferSize)
BOOL fastcall ObjectCloseAuditAlarmW(LPCWSTR SubsystemName, LPVOID HandleId, BOOL GenerateOnClose)
BOOL fastcall ObjectDeleteAuditAlarmW(LPCWSTR SubsystemName, LPVOID HandleId, BOOL GenerateOnClose)
BOOL fastcall ObjectOpenAuditAlarmW(LPCWSTR SubsystemName, LPVOID HandleId, LPWSTR ObjectTypeName, LPWSTR ObjectName, PSECURITY_DESCRIPTOR pSecurityDescriptor, HANDLE ClientToken, DWORD DesiredAccess, DWORD GrantedAccess, PPRIVILEGE_SET Privileges, BOOL ObjectCreation, BOOL AccessGranted, LPBOOL GenerateOnClose)
BOOL fastcall ObjectPrivilegeAuditAlarmW(LPCWSTR SubsystemName, LPVOID HandleId, HANDLE ClientToken, DWORD DesiredAccess, PPRIVILEGE_SET Privileges, BOOL AccessGranted)
BOOL fastcall PrivilegedServiceAuditAlarmW(LPCWSTR SubsystemName, LPCWSTR ServiceName, HANDLE ClientToken, PPRIVILEGE_SET Privileges, BOOL AccessGranted)
void fastcall QuerySecurityAccessMask(SECURITY_INFORMATION SecurityInformation, LPDWORD DesiredAccess)
BOOL fastcall QueryServiceObjectSecurity(SC_HANDLE hService, SECURITY_INFORMATION dwSecurityInformation, PSECURITY_DESCRIPTOR lpSecurityDescriptor, DWORD cbBufSize, LPDWORD pcbBytesNeeded)
LSTATUS fastcall RegCopyTreeW(HKEY hKeySrc, LPCWSTR lpSubKey, HKEY hKeyDest)
LSTATUS fastcall RegDeleteKeyExA(HKEY hKey, LPCSTR lpSubKey, REGSAM samDesired, DWORD Reserved)
LSTATUS fastcall RegDeleteKeyValueA(HKEY hKey, LPCSTR lpSubKey, LPCSTR lpValueName)
LSTATUS fastcall RegDeleteTreeA(HKEY hKey, LPCSTR lpSubKey)
LSTATUS fastcall RegDisablePredefinedCacheEx(void)
LSTATUS fastcall RegLoadAppKeyA(LPCSTR lpFile, PHKEY phkResult, REGSAM samDesired, DWORD dwOptions, DWORD Reserved)
LSTATUS fastcall RegLoadAppKeyW(LPCWSTR lpFile, PHKEY phkResult, REGSAM samDesired, DWORD dwOptions, DWORD Reserved)
LSTATUS fastcall RegLoadKeyA(HKEY hKey, LPCSTR lpSubKey, LPCSTR lpFile)
LSTATUS fastcall RegLoadKeyW(HKEY hKey, LPCWSTR lpSubKey, LPCWSTR lpFile)
LSTATUS fastcall RegLoadMUIStringA(HKEY hKey, LPCSTR pszValue, LPSTR pszOutBuf, DWORD cbOutBuf, LPDWORD pcbData, DWORD Flags, LPCSTR pszDirectory)
LSTATUS fastcall RegOpenUserClassesRoot(HANDLE hToken, DWORD dwOptions, REGSAM samDesired, PHKEY phkResult)
LSTATUS fastcall RegQueryMultipleValuesA(HKEY hKey, PVALENTA val_list, DWORD num_vals, LPSTR lpValueBuf, LPDWORD ldwTotsize)
LSTATUS fastcall RegRestoreKeyA(HKEY hKey, LPCSTR lpFile, DWORD dwFlags)
LSTATUS fastcall RegRestoreKeyW(HKEY hKey, LPCWSTR lpFile, DWORD dwFlags)
LSTATUS fastcall RegSaveKeyExA(HKEY hKey, LPCSTR lpFile, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD Flags)
LSTATUS fastcall RegSaveKeyExW(HKEY hKey, LPCWSTR lpFile, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD Flags)
LSTATUS fastcall RegSetKeyValueA(HKEY hKey, LPCSTR lpSubKey, LPCSTR lpValueName, DWORD dwType, LPCVOID lpData, DWORD cbData)
LSTATUS fastcall RegUnLoadKeyA(HKEY hKey, LPCSTR lpSubKey)
LSTATUS fastcall RegUnLoadKeyW(HKEY hKey, LPCWSTR lpSubKey)
SERVICE_STATUS_HANDLE fastcall RegisterServiceCtrlHandlerA(LPCSTR lpServiceName, LPHANDLER_FUNCTION lpHandlerProc)
SERVICE_STATUS_HANDLE fastcall RegisterServiceCtrlHandlerExA(LPCSTR lpServiceName, LPHANDLER_FUNCTION_EX lpHandlerProc, LPVOID lpContext)
BOOL fastcall SetAclInformation(PACL pAcl, LPVOID pAclInformation, DWORD nAclInformationLength, ACL_INFORMATION_CLASS dwAclInformationClass)
BOOL fastcall SetPrivateObjectSecurityEx(SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR ModificationDescriptor, PSECURITY_DESCRIPTOR * ObjectsSecurityDescriptor, ULONG AutoInheritFlags, PGENERIC_MAPPING GenericMapping, HANDLE Token)
BOOL fastcall SetPrivateObjectSecurity(SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR ModificationDescriptor, PSECURITY_DESCRIPTOR * ObjectsSecurityDescriptor, PGENERIC_MAPPING GenericMapping, HANDLE Token)
void fastcall SetSecurityAccessMask(SECURITY_INFORMATION SecurityInformation, LPDWORD DesiredAccess)
DWORD fastcall SetSecurityDescriptorRMControl(PSECURITY_DESCRIPTOR SecurityDescriptor, PUCHAR RMControl)
BOOL fastcall SetServiceObjectSecurity(SC_HANDLE hService, SECURITY_INFORMATION dwSecurityInformation, PSECURITY_DESCRIPTOR lpSecurityDescriptor)
BOOL fastcall StartServiceA(SC_HANDLE hService, DWORD dwNumServiceArgs, LPCSTR * lpServiceArgVectors)
BOOL fastcall StartServiceCtrlDispatcherA(SERVICE_TABLE_ENTRYA * lpServiceStartTable)
LONG fastcall RegQueryReflectionKey(HKEY hBase, BOOL * bIsReflectionDisabled)
BOOLEAN fastcall AuditComputeEffectivePolicyByToken(HANDLE hTokenHandle, GUID * pSubCategoryGuids, ULONG dwPolicyCount, PAUDIT_POLICY_INFORMATION * ppAuditPolicy)
BOOLEAN fastcall AuditLookupCategoryGuidFromCategoryId(POLICY_AUDIT_EVENT_TYPE AuditCategoryId, GUID * pAuditCategoryGuid)
BOOLEAN fastcall AuditLookupCategoryIdFromCategoryGuid(GUID * pAuditCategoryGuid, PPOLICY_AUDIT_EVENT_TYPE pAuditCategoryId)
BOOLEAN fastcall AuditLookupCategoryNameA(GUID * pAuditCategoryGuid, PSTR * ppszCategoryName)
BOOLEAN fastcall AuditLookupSubCategoryNameA(GUID * pAuditSubCategoryGuid, PSTR * ppszSubCategoryName)
BOOLEAN fastcall AuditQueryGlobalSaclA(PCSTR ObjectTypeName, PACL * Acl)
BOOLEAN fastcall AuditSetGlobalSaclA(PCSTR ObjectTypeName, PACL Acl)
CLIENT_CALL_RETURN fastcall LsaAddPrivilegesToAccount(longlong param_1)
CLIENT_CALL_RETURN fastcall LsaClearAuditLog(longlong param_1)
NTSTATUS fastcall LsaEnumerateTrustedDomains(LSA_HANDLE PolicyHandle, PLSA_ENUMERATION_HANDLE EnumerationContext, PVOID * Buffer, ULONG PreferedMaximumLength, PULONG CountReturned)
CLIENT_CALL_RETURN fastcall LsaGetQuotasForAccount(longlong param_1)
CLIENT_CALL_RETURN fastcall LsaGetSystemAccessAccount(longlong param_1)
NTSTATUS fastcall LsaLookupNames(LSA_HANDLE PolicyHandle, ULONG Count, PLSA_UNICODE_STRING Names, PLSA_REFERENCED_DOMAIN_LIST * ReferencedDomains, PLSA_TRANSLATED_SID * Sids)
CLIENT_CALL_RETURN fastcall LsaRemovePrivilegesFromAccount(longlong param_1)
ulonglong fastcall LsaSetCAPs(longlong param_1, int param_2, ulonglong param_3)
CLIENT_CALL_RETURN fastcall LsaSetQuotasForAccount(longlong param_1)
CLIENT_CALL_RETURN fastcall LsaSetSystemAccessAccount(longlong param_1)
NTSTATUS fastcall LsaCreateTrustedDomainEx(LSA_HANDLE PolicyHandle, PTRUSTED_DOMAIN_INFORMATION_EX TrustedDomainInformation, PTRUSTED_DOMAIN_AUTH_INFORMATION AuthenticationInformation, ACCESS_MASK DesiredAccess, PLSA_HANDLE TrustedDomainHandle)
NTSTATUS fastcall LsaDeleteTrustedDomain(LSA_HANDLE PolicyHandle, PSID TrustedDomainSid)
NTSTATUS fastcall LsaEnumerateTrustedDomainsEx(LSA_HANDLE PolicyHandle, PLSA_ENUMERATION_HANDLE EnumerationContext, PVOID * Buffer, ULONG PreferedMaximumLength, PULONG CountReturned)
int fastcall LsaManageSidNameMapping(uint param_1, longlong param_2, int * * param_3)
NTSTATUS fastcall LsaOpenTrustedDomainByName(LSA_HANDLE PolicyHandle, PLSA_UNICODE_STRING TrustedDomainName, ACCESS_MASK DesiredAccess, PLSA_HANDLE TrustedDomainHandle)
NTSTATUS fastcall LsaQueryDomainInformationPolicy(LSA_HANDLE PolicyHandle, POLICY_DOMAIN_INFORMATION_CLASS InformationClass, PVOID * Buffer)
NTSTATUS fastcall LsaQueryForestTrustInformation(LSA_HANDLE PolicyHandle, PLSA_UNICODE_STRING TrustedDomainName, PLSA_FOREST_TRUST_INFORMATION * ForestTrustInfo)
NTSTATUS fastcall LsaQueryTrustedDomainInfo(LSA_HANDLE PolicyHandle, PSID TrustedDomainSid, TRUSTED_INFORMATION_CLASS InformationClass, PVOID * Buffer)
NTSTATUS fastcall LsaQueryTrustedDomainInfoByName(LSA_HANDLE PolicyHandle, PLSA_UNICODE_STRING TrustedDomainName, TRUSTED_INFORMATION_CLASS InformationClass, PVOID * Buffer)
NTSTATUS fastcall LsaSetDomainInformationPolicy(LSA_HANDLE PolicyHandle, POLICY_DOMAIN_INFORMATION_CLASS InformationClass, PVOID Buffer)
NTSTATUS fastcall LsaSetForestTrustInformation(LSA_HANDLE PolicyHandle, PLSA_UNICODE_STRING TrustedDomainName, PLSA_FOREST_TRUST_INFORMATION ForestTrustInfo, BOOLEAN CheckOnly, PLSA_FOREST_TRUST_COLLISION_INFORMATION * CollisionInfo)
NTSTATUS fastcall LsaSetTrustedDomainInfoByName(LSA_HANDLE PolicyHandle, PLSA_UNICODE_STRING TrustedDomainName, TRUSTED_INFORMATION_CLASS InformationClass, PVOID Buffer)
NTSTATUS fastcall LsaSetTrustedDomainInformation(LSA_HANDLE PolicyHandle, PSID TrustedDomainSid, TRUSTED_INFORMATION_CLASS InformationClass, PVOID Buffer)
CLIENT_CALL_RETURN fastcall LsaGetDeviceRegistrationInfo(longlong param_1)
CLIENT_CALL_RETURN fastcall GetManagedApplications(void)
BOOL fastcall IsTokenUntrusted(HANDLE TokenHandle)
bool fastcall SaferRecordEventLogEntry(longlong param_1, longlong param_2)
void fastcall BuildExplicitAccessWithNameA(PEXPLICIT_ACCESS_A pExplicitAccess, LPSTR pTrusteeName, DWORD AccessPermissions, ACCESS_MODE AccessMode, DWORD Inheritance)
void fastcall BuildImpersonateExplicitAccessWithNameA(PEXPLICIT_ACCESS_A pExplicitAccess, LPSTR pTrusteeName, PTRUSTEE_A pTrustee, DWORD AccessPermissions, ACCESS_MODE AccessMode, DWORD Inheritance)
void fastcall BuildImpersonateExplicitAccessWithNameW(PEXPLICIT_ACCESS_W pExplicitAccess, LPWSTR pTrusteeName, PTRUSTEE_W pTrustee, DWORD AccessPermissions, ACCESS_MODE AccessMode, DWORD Inheritance)
DWORD fastcall BuildSecurityDescriptorA(PTRUSTEE_A pOwner, PTRUSTEE_A pGroup, ULONG cCountOfAccessEntries, PEXPLICIT_ACCESS_A pListOfAccessEntries, ULONG cCountOfAuditEntries, PEXPLICIT_ACCESS_A pListOfAuditEntries, PSECURITY_DESCRIPTOR pOldSD, PULONG pSizeNewSD, PSECURITY_DESCRIPTOR * pNewSD)
DWORD fastcall FreeInheritedFromArray(PINHERITED_FROMW pInheritArray, USHORT AceCnt, PFN_OBJECT_MGR_FUNCTS pfnArray)
DWORD fastcall GetAuditedPermissionsFromAclA(PACL pacl, PTRUSTEE_A pTrustee, PACCESS_MASK pSuccessfulAuditedRights, PACCESS_MASK pFailedAuditRights)
DWORD fastcall GetAuditedPermissionsFromAclW(PACL pacl, PTRUSTEE_W pTrustee, PACCESS_MASK pSuccessfulAuditedRights, PACCESS_MASK pFailedAuditRights)
DWORD fastcall GetEffectiveRightsFromAclA(PACL pacl, PTRUSTEE_A pTrustee, PACCESS_MASK pAccessRights)
DWORD fastcall GetEffectiveRightsFromAclW(PACL pacl, PTRUSTEE_W pTrustee, PACCESS_MASK pAccessRights)
DWORD fastcall GetExplicitEntriesFromAclA(PACL pacl, PULONG pcCountOfExplicitEntries, PEXPLICIT_ACCESS_W * pListOfExplicitEntries)
DWORD fastcall GetInheritanceSourceA(LPSTR pObjectName, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, BOOL Container, GUID * * pObjectClassGuids, DWORD GuidCount, PACL pAcl, PFN_OBJECT_MGR_FUNCTS pfnArray, PGENERIC_MAPPING pGenericMapping, PINHERITED_FROMA pInheritArray)
DWORD fastcall GetInheritanceSourceW(LPWSTR pObjectName, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, BOOL Container, GUID * * pObjectClassGuids, DWORD GuidCount, PACL pAcl, PFN_OBJECT_MGR_FUNCTS pfnArray, PGENERIC_MAPPING pGenericMapping, PINHERITED_FROMW pInheritArray)
DWORD fastcall GetNamedSecurityInfoA(LPCSTR pObjectName, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, PSID * ppsidOwner, PSID * ppsidGroup, PACL * ppDacl, PACL * ppSacl, PSECURITY_DESCRIPTOR * ppSecurityDescriptor)
DWORD fastcall LookupSecurityDescriptorPartsA(PTRUSTEE_A * ppOwner, PTRUSTEE_A * ppGroup, PULONG pcCountOfAccessEntries, PEXPLICIT_ACCESS_A * ppListOfAccessEntries, PULONG pcCountOfAuditEntries, PEXPLICIT_ACCESS_A * ppListOfAuditEntries, PSECURITY_DESCRIPTOR pSD)
DWORD fastcall LookupSecurityDescriptorPartsW(PTRUSTEE_W * ppOwner, PTRUSTEE_W * ppGroup, PULONG pcCountOfAccessEntries, PEXPLICIT_ACCESS_W * ppListOfAccessEntries, PULONG pcCountOfAuditEntries, PEXPLICIT_ACCESS_W * ppListOfAuditEntries, PSECURITY_DESCRIPTOR pSD)
DWORD fastcall SetEntriesInAclA(ULONG cCountOfExplicitEntries, PEXPLICIT_ACCESS_A pListOfExplicitEntries, PACL OldAcl, PACL * NewAcl)
DWORD fastcall SetNamedSecurityInfoA(LPSTR pObjectName, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, PSID psidOwner, PSID psidGroup, PACL pDacl, PACL pSacl)
DWORD fastcall TreeResetNamedSecurityInfoA(LPSTR pObjectName, SE_OBJECT_TYPE ObjectType, SECURITY_INFORMATION SecurityInfo, PSID pOwner, PSID pGroup, PACL pDacl, PACL pSacl, BOOL KeepExplicit, FN_PROGRESS fnProgress, PROG_INVOKE_SETTING ProgressInvokeSetting, PVOID Args)
void fastcall BuildImpersonateTrusteeA(PTRUSTEE_A pTrustee, PTRUSTEE_A pImpersonateTrustee)
void fastcall BuildImpersonateTrusteeW(PTRUSTEE_W pTrustee, PTRUSTEE_W pImpersonateTrustee)
void fastcall BuildTrusteeWithNameA(PTRUSTEE_A pTrustee, LPSTR pName)
void fastcall BuildTrusteeWithNameW(PTRUSTEE_W pTrustee, LPWSTR pName)
void fastcall BuildTrusteeWithObjectsAndNameA(PTRUSTEE_A pTrustee, POBJECTS_AND_NAME_A pObjName, SE_OBJECT_TYPE ObjectType, LPSTR ObjectTypeName, LPSTR InheritedObjectTypeName, LPSTR Name)
void fastcall BuildTrusteeWithObjectsAndNameW(PTRUSTEE_W pTrustee, POBJECTS_AND_NAME_W pObjName, SE_OBJECT_TYPE ObjectType, LPWSTR ObjectTypeName, LPWSTR InheritedObjectTypeName, LPWSTR Name)
void fastcall BuildTrusteeWithObjectsAndSidA(PTRUSTEE_A pTrustee, POBJECTS_AND_SID pObjSid, GUID * pObjectGuid, GUID * pInheritedObjectGuid, PSID pSid)
void fastcall BuildTrusteeWithObjectsAndSidW(PTRUSTEE_W pTrustee, POBJECTS_AND_SID pObjSid, GUID * pObjectGuid, GUID * pInheritedObjectGuid, PSID pSid)
void fastcall BuildTrusteeWithSidA(PTRUSTEE_A pTrustee, PSID pSid)
PTRUSTEE_A fastcall GetMultipleTrusteeA(PTRUSTEE_A pTrustee)
MULTIPLE_TRUSTEE_OPERATION fastcall GetMultipleTrusteeOperationA(PTRUSTEE_A pTrustee)
MULTIPLE_TRUSTEE_OPERATION fastcall GetMultipleTrusteeOperationW(PTRUSTEE_W pTrustee)
PTRUSTEE_W fastcall GetMultipleTrusteeW(PTRUSTEE_W pTrustee)
TRUSTEE_FORM fastcall GetTrusteeFormA(PTRUSTEE_A pTrustee)
TRUSTEE_FORM fastcall GetTrusteeFormW(PTRUSTEE_W pTrustee)
LPSTR fastcall GetTrusteeNameA(PTRUSTEE_A pTrustee)
LPWSTR fastcall GetTrusteeNameW(PTRUSTEE_W pTrustee)
TRUSTEE_TYPE fastcall GetTrusteeTypeA(PTRUSTEE_A pTrustee)
TRUSTEE_TYPE fastcall GetTrusteeTypeW(PTRUSTEE_W pTrustee)
ulonglong fastcall CancelOverlappedAccess(longlong * param_1)
BOOL fastcall AbortSystemShutdownA(LPSTR lpMachineName)
BOOL fastcall AbortSystemShutdownW(LPWSTR lpMachineName)
DWORD fastcall InitiateShutdownA(LPSTR lpMachineName, LPSTR lpMessage, DWORD dwGracePeriod, DWORD dwShutdownFlags, DWORD dwReason)
BOOL fastcall InitiateSystemShutdownA(LPSTR lpMachineName, LPSTR lpMessage, DWORD dwTimeout, BOOL bForceAppsClosed, BOOL bRebootAfterShutdown)
BOOL fastcall InitiateSystemShutdownExA(LPSTR lpMachineName, LPSTR lpMessage, DWORD dwTimeout, BOOL bForceAppsClosed, BOOL bRebootAfterShutdown, DWORD dwReason)
BOOL fastcall InitiateSystemShutdownW(LPWSTR lpMachineName, LPWSTR lpMessage, DWORD dwTimeout, BOOL bForceAppsClosed, BOOL bRebootAfterShutdown)
LSTATUS fastcall RegConnectRegistryA(LPCSTR lpMachineName, HKEY hKey, PHKEY phkResult)
LSTATUS fastcall RegConnectRegistryExA(LPCSTR lpMachineName, HKEY hKey, ULONG Flags, PHKEY phkResult)
LSTATUS fastcall RegConnectRegistryExW(LPCWSTR lpMachineName, HKEY hKey, ULONG Flags, PHKEY phkResult)
LSTATUS fastcall RegCopyTreeA(HKEY hKeySrc, LPCSTR lpSubKey, HKEY hKeyDest)
LSTATUS fastcall RegCreateKeyTransactedA(HKEY hKey, LPCSTR lpSubKey, DWORD Reserved, LPSTR lpClass, DWORD dwOptions, REGSAM samDesired, LPSECURITY_ATTRIBUTES lpSecurityAttributes, PHKEY phkResult, LPDWORD lpdwDisposition, HANDLE hTransaction, PVOID pExtendedParemeter)
LSTATUS fastcall RegOpenKeyTransactedA(HKEY hKey, LPCSTR lpSubKey, DWORD ulOptions, REGSAM samDesired, PHKEY phkResult, HANDLE hTransaction, PVOID pExtendedParemeter)
LSTATUS fastcall RegOverridePredefKey(HKEY hKey, HKEY hNewHKey)
LSTATUS fastcall RegRenameKey(HKEY hKey, LPCWSTR lpSubKeyName, LPCWSTR lpNewKeyName)
LSTATUS fastcall RegDeleteKeyA(HKEY hKey, LPCSTR lpSubKey)
LSTATUS fastcall RegDeleteKeyTransactedA(HKEY hKey, LPCSTR lpSubKey, REGSAM samDesired, DWORD Reserved, HANDLE hTransaction, PVOID pExtendedParameter)
LSTATUS fastcall RegQueryValueA(HKEY hKey, LPCSTR lpSubKey, LPSTR lpData, PLONG lpcbData)
LSTATUS fastcall RegReplaceKeyA(HKEY hKey, LPCSTR lpSubKey, LPCSTR lpNewFile, LPCSTR lpOldFile)
LSTATUS fastcall RegSaveKeyA(HKEY hKey, LPCSTR lpFile, LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LSTATUS fastcall RegSaveKeyW(HKEY hKey, LPCWSTR lpFile, LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LSTATUS fastcall RegSetValueA(HKEY hKey, LPCSTR lpSubKey, DWORD dwType, LPCSTR lpData, DWORD cbData)
LSTATUS fastcall RegSetValueW(HKEY hKey, LPCWSTR lpSubKey, DWORD dwType, LPCWSTR lpData, DWORD cbData)
BOOL fastcall InitiateSystemShutdownExW(LPWSTR lpMachineName, LPWSTR lpMessage, DWORD dwTimeout, BOOL bForceAppsClosed, BOOL bRebootAfterShutdown, DWORD dwReason)
LSTATUS fastcall RegReplaceKeyW(HKEY hKey, LPCWSTR lpSubKey, LPCWSTR lpNewFile, LPCWSTR lpOldFile)
BOOL fastcall EnumDependentServicesA(SC_HANDLE hService, DWORD dwServiceState, LPENUM_SERVICE_STATUSA lpServices, DWORD cbBufSize, LPDWORD pcbBytesNeeded, LPDWORD lpServicesReturned)
BOOL fastcall EnumServicesStatusA(SC_HANDLE hSCManager, DWORD dwServiceType, DWORD dwServiceState, LPENUM_SERVICE_STATUSA lpServices, DWORD cbBufSize, LPDWORD pcbBytesNeeded, LPDWORD lpServicesReturned, LPDWORD lpResumeHandle)
BOOL fastcall GetServiceDisplayNameA(SC_HANDLE hSCManager, LPCSTR lpServiceName, LPSTR lpDisplayName, LPDWORD lpcchBuffer)
BOOL fastcall GetServiceKeyNameA(SC_HANDLE hSCManager, LPCSTR lpDisplayName, LPSTR lpServiceName, LPDWORD lpcchBuffer)
SC_LOCK fastcall LockServiceDatabase(SC_HANDLE hSCManager)
BOOL fastcall QueryServiceLockStatusA(SC_HANDLE hSCManager, LPQUERY_SERVICE_LOCK_STATUSA lpLockStatus, DWORD cbBufSize, LPDWORD pcbBytesNeeded)
BOOL fastcall QueryServiceLockStatusW(SC_HANDLE hSCManager, LPQUERY_SERVICE_LOCK_STATUSW lpLockStatus, DWORD cbBufSize, LPDWORD pcbBytesNeeded)
BOOL fastcall UnlockServiceDatabase(SC_LOCK ScLock)
BOOL fastcall AccessCheckAndAuditAlarmA(LPCSTR SubsystemName, LPVOID HandleId, LPSTR ObjectTypeName, LPSTR ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, DWORD DesiredAccess, PGENERIC_MAPPING GenericMapping, BOOL ObjectCreation, LPDWORD GrantedAccess, LPBOOL AccessStatus, LPBOOL pfGenerateOnClose)
BOOL fastcall AccessCheckByTypeAndAuditAlarmA(LPCSTR SubsystemName, LPVOID HandleId, LPCSTR ObjectTypeName, LPCSTR ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, DWORD DesiredAccess, AUDIT_EVENT_TYPE AuditType, DWORD Flags, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, BOOL ObjectCreation, LPDWORD GrantedAccess, LPBOOL AccessStatus, LPBOOL pfGenerateOnClose)
BOOL fastcall AccessCheckByTypeResultListAndAuditAlarmA(LPCSTR SubsystemName, LPVOID HandleId, LPCSTR ObjectTypeName, LPCSTR ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, DWORD DesiredAccess, AUDIT_EVENT_TYPE AuditType, DWORD Flags, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, BOOL ObjectCreation, LPDWORD GrantedAccess, LPDWORD AccessStatusList, LPBOOL pfGenerateOnClose)
BOOL fastcall AccessCheckByTypeResultListAndAuditAlarmByHandleA(LPCSTR SubsystemName, LPVOID HandleId, HANDLE ClientToken, LPCSTR ObjectTypeName, LPCSTR ObjectName, PSECURITY_DESCRIPTOR SecurityDescriptor, PSID PrincipalSelfSid, DWORD DesiredAccess, AUDIT_EVENT_TYPE AuditType, DWORD Flags, POBJECT_TYPE_LIST ObjectTypeList, DWORD ObjectTypeListLength, PGENERIC_MAPPING GenericMapping, BOOL ObjectCreation, LPDWORD GrantedAccess, LPDWORD AccessStatusList, LPBOOL pfGenerateOnClose)
BOOL fastcall GetFileSecurityA(LPCSTR lpFileName, SECURITY_INFORMATION RequestedInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor, DWORD nLength, LPDWORD lpnLengthNeeded)
BOOL fastcall LookupAccountNameA(LPCSTR lpSystemName, LPCSTR lpAccountName, PSID Sid, LPDWORD cbSid, LPSTR ReferencedDomainName, LPDWORD cchReferencedDomainName, PSID_NAME_USE peUse)
BOOL fastcall LookupAccountSidA(LPCSTR lpSystemName, PSID Sid, LPSTR Name, LPDWORD cchName, LPSTR ReferencedDomainName, LPDWORD cchReferencedDomainName, PSID_NAME_USE peUse)
BOOL fastcall LookupPrivilegeDisplayNameA(LPCSTR lpSystemName, LPCSTR lpName, LPSTR lpDisplayName, LPDWORD cchDisplayName, LPDWORD lpLanguageId)
BOOL fastcall LookupPrivilegeDisplayNameW(LPCWSTR lpSystemName, LPCWSTR lpName, LPWSTR lpDisplayName, LPDWORD cchDisplayName, LPDWORD lpLanguageId)
BOOL fastcall LookupPrivilegeNameA(LPCSTR lpSystemName, PLUID lpLuid, LPSTR lpName, LPDWORD cchName)
BOOL fastcall LookupPrivilegeNameW(LPCWSTR lpSystemName, PLUID lpLuid, LPWSTR lpName, LPDWORD cchName)
BOOL fastcall ObjectCloseAuditAlarmA(LPCSTR SubsystemName, LPVOID HandleId, BOOL GenerateOnClose)
BOOL fastcall ObjectDeleteAuditAlarmA(LPCSTR SubsystemName, LPVOID HandleId, BOOL GenerateOnClose)
BOOL fastcall ObjectOpenAuditAlarmA(LPCSTR SubsystemName, LPVOID HandleId, LPSTR ObjectTypeName, LPSTR ObjectName, PSECURITY_DESCRIPTOR pSecurityDescriptor, HANDLE ClientToken, DWORD DesiredAccess, DWORD GrantedAccess, PPRIVILEGE_SET Privileges, BOOL ObjectCreation, BOOL AccessGranted, LPBOOL GenerateOnClose)
BOOL fastcall ObjectPrivilegeAuditAlarmA(LPCSTR SubsystemName, LPVOID HandleId, HANDLE ClientToken, DWORD DesiredAccess, PPRIVILEGE_SET Privileges, BOOL AccessGranted)
BOOL fastcall PrivilegedServiceAuditAlarmA(LPCSTR SubsystemName, LPCSTR ServiceName, HANDLE ClientToken, PPRIVILEGE_SET Privileges, BOOL AccessGranted)
BOOL fastcall SetFileSecurityA(LPCSTR lpFileName, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL fastcall CreateProcessWithLogonW(LPCWSTR lpUsername, LPCWSTR lpDomain, LPCWSTR lpPassword, DWORD dwLogonFlags, LPCWSTR lpApplicationName, LPWSTR lpCommandLine, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCWSTR lpCurrentDirectory, LPSTARTUPINFOW lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation)
BOOL fastcall CreateProcessWithTokenW(HANDLE hToken, DWORD dwLogonFlags, LPCWSTR lpApplicationName, LPWSTR lpCommandLine, DWORD dwCreationFlags, LPVOID lpEnvironment, LPCWSTR lpCurrentDirectory, LPSTARTUPINFOW lpStartupInfo, LPPROCESS_INFORMATION lpProcessInformation)
BOOL fastcall LogonUserA(LPCSTR lpszUsername, LPCSTR lpszDomain, LPCSTR lpszPassword, DWORD dwLogonType, DWORD dwLogonProvider, PHANDLE phToken)
BOOL fastcall LogonUserExA(LPCSTR lpszUsername, LPCSTR lpszDomain, LPCSTR lpszPassword, DWORD dwLogonType, DWORD dwLogonProvider, PHANDLE phToken, PSID * ppLogonSid, PVOID * ppProfileBuffer, LPDWORD pdwProfileLength, PQUOTA_LIMITS pQuotaLimits)
BOOL fastcall LogonUserExW(LPCWSTR lpszUsername, LPCWSTR lpszDomain, LPCWSTR lpszPassword, DWORD dwLogonType, DWORD dwLogonProvider, PHANDLE phToken, PSID * ppLogonSid, PVOID * ppProfileBuffer, LPDWORD pdwProfileLength, PQUOTA_LIMITS pQuotaLimits)
BOOL fastcall LogonUserW(LPCWSTR lpszUsername, LPCWSTR lpszDomain, LPCWSTR lpszPassword, DWORD dwLogonType, DWORD dwLogonProvider, PHANDLE phToken)
BOOL fastcall AddConditionalAce(PACL pAcl, DWORD dwAceRevision, DWORD AceFlags, UCHAR AceType, DWORD AccessMask, PSID pSid, PWCHAR ConditionStr, DWORD * ReturnLength)
ulonglong fastcall ConvertSecurityDescriptorToStringSecurityDescriptorA(longlong param_1, int param_2, uint param_3, LPSTR * param_4, int * param_5)
ulonglong fastcall ConvertStringSidToSidA(longlong param_1, HLOCAL * param_2)
BOOL fastcall BackupEventLogA(HANDLE hEventLog, LPCSTR lpBackupFileName)
BOOL fastcall BackupEventLogW(HANDLE hEventLog, LPCWSTR lpBackupFileName)
BOOL fastcall ClearEventLogA(HANDLE hEventLog, LPCSTR lpBackupFileName)
BOOL fastcall ClearEventLogW(HANDLE hEventLog, LPCWSTR lpBackupFileName)
BOOL fastcall NotifyChangeEventLog(HANDLE hEventLog, HANDLE hEvent)
HANDLE fastcall OpenBackupEventLogA(LPCSTR lpUNCServerName, LPCSTR lpFileName)
HANDLE fastcall OpenBackupEventLogW(LPCWSTR lpUNCServerName, LPCWSTR lpFileName)
HANDLE fastcall RegisterEventSourceA(LPCSTR lpUNCServerName, LPCSTR lpSourceName)
BOOL fastcall ReportEventA(HANDLE hEventLog, WORD wType, WORD wCategory, DWORD dwEventID, PSID lpUserSid, WORD wNumStrings, DWORD dwDataSize, LPCSTR * lpStrings, LPVOID lpRawData)
DWORD fastcall WmiEnumerateGuids(longlong param_1, uint * param_2)
DWORD fastcall WmiQueryAllDataMultipleA(longlong param_1, uint param_2, uint * param_3, longlong param_4)
DWORD fastcall WmiQueryAllDataMultipleW(longlong param_1, uint param_2, uint * param_3, longlong param_4)
DWORD fastcall WmiQuerySingleInstanceMultipleA(longlong param_1, LPCSTR * param_2, ulonglong param_3, uint * param_4, longlong param_5)
DWORD fastcall WmiQuerySingleInstanceMultipleW(longlong param_1, longlong param_2, uint param_3, uint * param_4, longlong param_5)
DWORD fastcall WmiMofEnumerateResourcesA(longlong param_1, uint * param_2, longlong * param_3)
DWORD fastcall WmiMofEnumerateResourcesW(longlong param_1, int * param_2, void * * param_3)
longlong * fastcall OpenThreadWaitChainSession(uint param_1, longlong param_2)