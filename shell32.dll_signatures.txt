HRESULT fastcall SHCreateItemWithParent(LPCITEMIDLIST pidlParent, IShellFolder * psfParent, LPCITEMIDLIST pidl, IID * riid, void * * ppvItem)
HRESULT fastcall SHCLSIDFromString(LPCWSTR psz, CLSID * pclsid)
IClassInfo * cdecl GetClassInfoPtr(void)
IClassInfo * cdecl GetClassInfoPtr(void)
IClassInfo * cdecl GetClassInfoPtr(void)
IClassInfo * cdecl GetClassInfoPtr(void)
BOOL fastcall ILIsParent(LPCITEMIDLIST pidl1, LPCITEMIDLIST pidl2, BOOL fImmediate)
LPITEMIDLIST fastcall ILFindChild(LPITEMIDLIST pidlParent, LPCITEMIDLIST pidlChild)
IClassInfo * cdecl GetClassInfoPtr(void)
BOOL fastcall SignalFileOpen(LPCITEMIDLIST pidl)
BOOL fastcall ReadCabinetState(CABINETSTATE * pcs, int cLength)
BOOL fastcall Shell_GetImageLists(HIMAGELIST * phiml, HIMAGELIST * phimlSmall)
HRESULT fastcall IUnknown_SetSite(IUnknown * punk, IUnknown * punkSite)
LPITEMIDLIST fastcall ILGetNext(LPCITEMIDLIST pidl)
HRESULT fastcall SHGetSpecialFolderLocation(HWND hwnd, int csidl, LPITEMIDLIST * ppidl)
IClassInfo * cdecl GetClassInfoPtr(void)
BOOL fastcall SHChangeNotification_Unlock(HANDLE hLock)
HANDLE fastcall SHChangeNotification_Lock(HANDLE hChange, DWORD dwProcId, LPITEMIDLIST * * pppidl, LONG * plEvent)
void fastcall DragAcceptFiles(HWND hWnd, BOOL fAccept)
void thiscall OnDestroy(Element * this)
BOOL fastcall ILRemoveLastID(LPITEMIDLIST pidl)
HRESULT fastcall SHDefExtractIconW(LPCWSTR pszIconFile, int iIndex, UINT uFlags, HICON * phiconLarge, HICON * phiconSmall, UINT nIconSize)
HRESULT fastcall Ordinal_128(IID * rclsid, IID * riid, LPVOID * ppv)
HRESULT fastcall SHCreateItemFromParsingName(PCWSTR pszPath, IBindCtx * pbc, IID * riid, void * * ppv)
BOOL fastcall SHGetPathFromIDListW(LPCITEMIDLIST pidl, LPWSTR pszPath)
HRESULT fastcall SHBindToParent(LPCITEMIDLIST pidl, IID * riid, void * * ppv, LPCITEMIDLIST * ppidlLast)
LPITEMIDLIST fastcall ILFindLastID(LPCITEMIDLIST pidl)
LPITEMIDLIST fastcall ILClone(LPCITEMIDLIST pidl)
HRESULT fastcall SHCreateItemFromIDList(LPCITEMIDLIST pidl, IID * riid, void * * ppv)
BOOL fastcall ILIsEqual(LPCITEMIDLIST pidl1, LPCITEMIDLIST pidl2)
UINT fastcall Shell_MergeMenus(HMENU hmDst, HMENU hmSrc, UINT uInsert, UINT uIDAdjust, UINT uIDAdjustMax, ULONG uFlags)
BOOL fastcall Shell_NotifyIconW(DWORD dwMessage, PNOTIFYICONDATAW lpData)
HRESULT fastcall SHELL32_SHCreateShellFolderView(SFV_CREATE * pcsfv, IShellView * * ppsv)
HRESULT fastcall SHCreateShellFolderView(SFV_CREATE * pcsfv, IShellView * * ppsv)
DWORD fastcall SHRestricted(RESTRICTIONS rest)
void fastcall SHGetSetSettings(LPSHELLSTATEA lpss, DWORD dwMask, BOOL bSet)
LPITEMIDLIST fastcall ILCombine(LPCITEMIDLIST pidl1, LPCITEMIDLIST pidl2)
LPITEMIDLIST fastcall ILCloneFirst(LPCITEMIDLIST pidl)
void fastcall ILFree(LPVOID pv)
UINT fastcall ExtractIconExW(LPCWSTR lpszFile, int nIconIndex, HICON * phiconLarge, HICON * phiconSmall, UINT nIcons)
void * fastcall SHAlloc(SIZE_T cb)
UINT fastcall ILGetSize(LPCITEMIDLIST pidl)
HICON fastcall DuplicateIcon(HINSTANCE hInst, HICON hIcon)
LPWSTR * fastcall CommandLineToArgvW(LPCWSTR lpCmdLine, int * pNumArgs)
HRESULT fastcall SHCoCreateInstance(LPCWSTR pszCLSID, CLSID * pclsid, IUnknown * pUnkOuter, IID * riid, void * * ppv)
ULONG fastcall SHChangeNotifyRegister(HWND hwnd, int fSources, LONG fEvents, UINT wMsg, int cEntries, SHChangeNotifyEntry * pshcne)
HRESULT fastcall SHGetDataFromIDListW(IShellFolder * psf, LPCITEMIDLIST pidl, int nFormat, void * pv, int cb)
HRESULT fastcall DllCanUnloadNow(void)
void fastcall SHChangeNotify(LONG wEventId, UINT uFlags, LPCVOID dwItem1, LPCVOID dwItem2)
BOOL fastcall SHTestTokenMembership(HANDLE hToken, ULONG ulRID)
LPITEMIDLIST fastcall SHCloneSpecialIDList(HWND hwnd, int csidl, BOOL fCreate)
BOOL fastcall Ordinal_175(HWND hwnd, LPWSTR pszPath, int csidl, BOOL fCreate)
void fastcall SHFree(LPVOID pv)
BOOL fastcall SHChangeNotifyDeregister(ulong ulID)
IStream * fastcall OpenRegStream(HKEY hkey, LPCWSTR pszSubkey, LPCWSTR pszValue, DWORD grfMode)
long thiscall Release(UMSSchedulerProxy * this)
BOOL fastcall IsUserAnAdmin(void)
void thiscall _Lock(basic_streambuf<char,struct_std::char_traits<char>_> * this)
void thiscall _Unlock(basic_streambuf<char,struct_std::char_traits<char>_> * this)
__int64 thiscall showmanyc(basic_streambuf<char,struct_std::char_traits<char>_> * this)
int thiscall uflow(basic_streambuf<char,struct_std::char_traits<char>_> * this)
__int64 thiscall xsgetn(basic_streambuf<char,struct_std::char_traits<char>_> * this, char * param_1, __int64 param_2)
__int64 thiscall xsputn(basic_streambuf<char,struct_std::char_traits<char>_> * this, char * param_1, __int64 param_2)
basic_streambuf<char,struct_std::char_traits<char>_> * thiscall setbuf(basic_streambuf<char,struct_std::char_traits<char>_> * this, char * param_1, __int64 param_2)
int thiscall sync(basic_streambuf<char,struct_std::char_traits<char>_> * this)
void thiscall imbue(basic_streambuf<char,struct_std::char_traits<char>_> * this, locale * param_1)
void thiscall _Lock(basic_streambuf<unsigned_short,struct_std::char_traits<unsigned_short>_> * this)
void thiscall _Unlock(basic_streambuf<unsigned_short,struct_std::char_traits<unsigned_short>_> * this)
__int64 thiscall showmanyc(basic_streambuf<unsigned_short,struct_std::char_traits<unsigned_short>_> * this)
ushort thiscall uflow(basic_streambuf<unsigned_short,struct_std::char_traits<unsigned_short>_> * this)
__int64 thiscall xsgetn(basic_streambuf<unsigned_short,struct_std::char_traits<unsigned_short>_> * this, ushort * param_1, __int64 param_2)
__int64 thiscall xsputn(basic_streambuf<unsigned_short,struct_std::char_traits<unsigned_short>_> * this, ushort * param_1, __int64 param_2)
basic_streambuf<unsigned_short,struct_std::char_traits<unsigned_short>_> * thiscall setbuf(basic_streambuf<unsigned_short,struct_std::char_traits<unsigned_short>_> * this, ushort * param_1, __int64 param_2)
int thiscall sync(basic_streambuf<unsigned_short,struct_std::char_traits<unsigned_short>_> * this)
void thiscall imbue(basic_streambuf<unsigned_short,struct_std::char_traits<unsigned_short>_> * this, locale * param_1)
_onexit_t cdecl _onexit(_onexit_t _Func)
int cdecl atexit(void * param_1)
int cdecl FID_conflict:_sprintf_p(wchar_t * _Dst, size_t _SizeInWords, wchar_t * _Format, ...)
void cdecl __security_init_cookie(void)
EXCEPTION_DISPOSITION __C_specific_handler(_EXCEPTION_RECORD * ExceptionRecord, void * EstablisherFrame, _CONTEXT * ContextRecord, _DISPATCHER_CONTEXT * DispatcherContext)
void * cdecl memset(void * _Dst, int _Val, size_t _Size)
int cdecl _vsnwprintf(wchar_t * _Dest, size_t _Count, wchar_t * _Format, va_list _Args)
int cdecl FID_conflict:sscanf_s(wchar_t * _Src, wchar_t * _Format, ...)
int cdecl _vsnprintf(char * _Dest, size_t _Count, char * _Format, va_list _Args)
int cdecl FID_conflict:vsnwprintf_s(char * _DstBuf, size_t _DstSize, size_t _MaxCount, char * _Format, va_list _ArgList)
HLOCAL fastcall LocalFree(HLOCAL hMem)
HANDLE fastcall CreateFileW(LPCWSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile)
BOOL fastcall CloseHandle(HANDLE hObject)
HRSRC fastcall FindResourceW(HMODULE hModule, LPCWSTR lpName, LPCWSTR lpType)
HGLOBAL fastcall LoadResource(HMODULE hModule, HRSRC hResInfo)
LPVOID fastcall LockResource(HGLOBAL hResData)
int fastcall MultiByteToWideChar(UINT CodePage, DWORD dwFlags, LPCSTR lpMultiByteStr, int cbMultiByte, LPWSTR lpWideCharStr, int cchWideChar)
DWORD fastcall GetLastError(void)
BOOL fastcall DeleteFileW(LPCWSTR lpFileName)
BOOL fastcall SetFileAttributesW(LPCWSTR lpFileName, DWORD dwFileAttributes)
BOOL fastcall RemoveDirectoryW(LPCWSTR lpPathName)
BOOL fastcall WriteFile(HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, LPDWORD lpNumberOfBytesWritten, LPOVERLAPPED lpOverlapped)
HMODULE fastcall LoadLibraryW(LPCWSTR lpLibFileName)
BOOL fastcall EnumResourceNamesExW(HMODULE hModule, LPCWSTR lpType, ENUMRESNAMEPROCW lpEnumFunc, LONG_PTR lParam, DWORD dwFlags, LANGID LangId)
BOOL fastcall FreeLibrary(HMODULE hLibModule)
BOOL fastcall ReadFile(HANDLE hFile, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead, LPOVERLAPPED lpOverlapped)
BOOL fastcall OpenProcessToken(HANDLE ProcessHandle, DWORD DesiredAccess, PHANDLE TokenHandle)
BOOL fastcall GetTokenInformation(HANDLE TokenHandle, TOKEN_INFORMATION_CLASS TokenInformationClass, LPVOID TokenInformation, DWORD TokenInformationLength, PDWORD ReturnLength)
BOOL fastcall InitOnceExecuteOnce(PINIT_ONCE InitOnce, PINIT_ONCE_FN InitFn, PVOID Parameter, LPVOID * Context)
BOOL fastcall HeapFree(HANDLE hHeap, DWORD dwFlags, LPVOID lpMem)
LPVOID fastcall CoTaskMemAlloc(SIZE_T cb)
DWORD fastcall WaitForSingleObject(HANDLE hHandle, DWORD dwMilliseconds)
DWORD fastcall FormatMessageW(DWORD dwFlags, LPCVOID lpSource, DWORD dwMessageId, DWORD dwLanguageId, LPWSTR lpBuffer, DWORD nSize, va_list * Arguments)
LPVOID fastcall HeapAlloc(HANDLE hHeap, DWORD dwFlags, SIZE_T dwBytes)
FARPROC fastcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
DWORD fastcall GetCurrentProcessId(void)
HANDLE fastcall GetProcessHeap(void)
HRESULT fastcall CoCreateInstance(IID * rclsid, LPUNKNOWN pUnkOuter, DWORD dwClsContext, IID * riid, LPVOID * ppv)
HANDLE fastcall CreateEventW(LPSECURITY_ATTRIBUTES lpEventAttributes, BOOL bManualReset, BOOL bInitialState, LPCWSTR lpName)
BOOL fastcall SetEvent(HANDLE hEvent)
int fastcall CompareStringW(LCID Locale, DWORD dwCmpFlags, PCNZWCH lpString1, int cchCount1, PCNZWCH lpString2, int cchCount2)
HRESULT fastcall CoGetApartmentType(APTTYPE * pAptType, APTTYPEQUALIFIER * pAptQualifier)
int fastcall CompareStringOrdinal(LPCWSTR lpString1, int cchCount1, LPCWSTR lpString2, int cchCount2, BOOL bIgnoreCase)
HANDLE fastcall FindFirstFileW(LPCWSTR lpFileName, LPWIN32_FIND_DATAW lpFindFileData)
BOOL fastcall FindNextFileW(HANDLE hFindFile, LPWIN32_FIND_DATAW lpFindFileData)
BOOL fastcall FindClose(HANDLE hFindFile)
HRESULT fastcall CoCreateFreeThreadedMarshaler(LPUNKNOWN punkOuter, LPUNKNOWN * ppunkMarshal)
HMODULE fastcall LoadLibraryExW(LPCWSTR lpLibFileName, HANDLE hFile, DWORD dwFlags)
BOOL fastcall ProcessIdToSessionId(DWORD dwProcessId, DWORD * pSessionId)
BOOL fastcall CreateWellKnownSid(WELL_KNOWN_SID_TYPE WellKnownSidType, PSID DomainSid, PSID pSid, DWORD * cbSid)
BOOL fastcall CheckTokenMembership(HANDLE TokenHandle, PSID SidToCheck, PBOOL IsMember)
DWORD fastcall SetFilePointer(HANDLE hFile, LONG lDistanceToMove, PLONG lpDistanceToMoveHigh, DWORD dwMoveMethod)
HRESULT fastcall CoGetCallContext(IID * riid, void * * ppInterface)
DWORD fastcall SizeofResource(HMODULE hModule, HRSRC hResInfo)
BOOL fastcall DuplicateToken(HANDLE ExistingTokenHandle, SECURITY_IMPERSONATION_LEVEL ImpersonationLevel, PHANDLE DuplicateTokenHandle)
void fastcall CloseThreadpoolWait(PTP_WAIT pwa)
void fastcall WaitForThreadpoolWaitCallbacks(PTP_WAIT pwa, BOOL fCancelPendingCallbacks)
void fastcall SetThreadpoolWait(PTP_WAIT pwa, HANDLE h, PFILETIME pftTimeout)
PTP_WAIT fastcall CreateThreadpoolWait(PTP_WAIT_CALLBACK pfnwa, PVOID pv, PTP_CALLBACK_ENVIRON pcbe)
PSLIST_ENTRY fastcall InterlockedPushEntrySList(PSLIST_HEADER ListHead, PSLIST_ENTRY ListEntry)
LPSTR fastcall StrChrA(LPCSTR lpStart, WORD wMatch)
LPSTR fastcall StrChrIA(LPCSTR lpStart, WORD wMatch)
LPWSTR fastcall StrChrIW(LPCWSTR lpStart, WCHAR wMatch)
LPWSTR fastcall StrChrW(LPCWSTR lpStart, WCHAR wMatch)
int fastcall StrCmpNA(LPCSTR lpStr1, LPCSTR lpStr2, int nChar)
int fastcall StrCmpNIA(LPCSTR lpStr1, LPCSTR lpStr2, int nChar)
int fastcall StrCmpNIW(LPCWSTR lpStr1, LPCWSTR lpStr2, int nChar)
int fastcall StrCmpNW(LPCWSTR lpStr1, LPCWSTR lpStr2, int nChar)
LPSTR fastcall StrRChrA(LPCSTR lpStart, LPCSTR lpEnd, WORD wMatch)
LPSTR fastcall StrRChrIA(LPCSTR lpStart, LPCSTR lpEnd, WORD wMatch)
LPWSTR fastcall StrRChrIW(LPCWSTR lpStart, LPCWSTR lpEnd, WCHAR wMatch)
LPWSTR fastcall StrRChrW(LPCWSTR lpStart, LPCWSTR lpEnd, WCHAR wMatch)
LPSTR fastcall StrRStrIA(LPCSTR lpSource, LPCSTR lpLast, LPCSTR lpSrch)
LPWSTR fastcall StrRStrIW(LPCWSTR lpSource, LPCWSTR lpLast, LPCWSTR lpSrch)
LPSTR fastcall StrStrA(LPCSTR lpFirst, LPCSTR lpSrch)
LPSTR fastcall StrStrIA(LPCSTR lpFirst, LPCSTR lpSrch)
LPWSTR fastcall StrStrIW(LPCWSTR lpFirst, LPCWSTR lpSrch)
LPWSTR fastcall StrStrW(LPCWSTR lpFirst, LPCWSTR lpSrch)
int fastcall lstrlenW(LPCWSTR lpString)
int fastcall StrToIntA(LPCSTR lpSrc)
BOOL fastcall PathFileExistsW(LPCWSTR pszPath)
int fastcall PathCommonPrefixW(LPCWSTR pszFile1, LPCWSTR pszFile2, LPWSTR achPath)
ushort * thiscall GetContentStringAsDisplayed(Element * this, Value * * param_1)
bool thiscall OnPropertyChanging(Element * this, PropertyInfo * param_1, int param_2, Value * param_3, Value * param_4)
bool thiscall OnPropertyChanging(Element * this, PropertyInfo * param_1, int param_2, Value * param_3, Value * param_4)
void thiscall OnPropertyChanged(Element * this, PropertyInfo * param_1, int param_2, Value * param_3, Value * param_4)
void thiscall OnPropertyChanged(Element * this, PropertyInfo * param_1, int param_2, Value * param_3, Value * param_4)
void thiscall OnGroupChanged(Element * this, int param_1, bool param_2)
void thiscall OnInput(Element * this, InputEvent * param_1)
void thiscall OnKeyFocusMoved(Element * this, Element * param_1, Element * param_2)
void thiscall OnMouseFocusMoved(Element * this, Element * param_1, Element * param_2)
void thiscall OnDestroy(Element * this)
void thiscall OnEvent(Element * this, Event * param_1)
void thiscall Paint(Element * this, HDC__ * param_1, tagRECT * param_2, tagRECT * param_3, tagRECT * param_4, tagRECT * param_5)
tagSIZE thiscall GetContentSize(Element * this, int param_1, int param_2, Surface * param_3)
long thiscall Add(Element * this, Element * * param_1, uint param_2)
long thiscall Insert(Element * this, Element * * param_1, uint param_2, uint param_3)
long thiscall Remove(Element * this, Element * * param_1, uint param_2)
Element * thiscall GetAdjacent(Element * this, Element * param_1, int param_2, NavReference * param_3, ulong param_4)
bool thiscall EnsureVisible(Element * this, int param_1, int param_2, int param_3, int param_4)
void thiscall SetKeyFocus(Element * this)
long thiscall AddBehavior(Element * this, IDuiBehavior * param_1)
long thiscall RemoveBehavior(Element * this, IDuiBehavior * param_1)
uint thiscall MessageCallback(Element * this, tagGMSG * param_1)
void thiscall GetImmersiveFocusRectOffsets(Element * this, tagRECT * param_1)
void thiscall _SelfLayoutDoLayout(Element * this, int param_1, int param_2)
tagSIZE thiscall _SelfLayoutUpdateDesiredSize(Element * this, int param_1, int param_2, Surface * param_3)
void thiscall OnHosted(Element * this, Element * param_1)
void thiscall OnUnHosted(Element * this, Element * param_1)
long thiscall GetAccessibleImpl(Element * this, IAccessible * * param_1)
long thiscall DefaultAction(Element * this)
long thiscall GetUIAElementProvider(Element * this, _GUID * param_1, void * * param_2)
long thiscall GetElementProviderImpl(Element * this, InvokeHelper * param_1, ElementProvider * * param_2)
void thiscall HandleUiaDestroyListener(Element * this)
void thiscall HandleUiaPropertyListener(Element * this, PropertyInfo * param_1, int param_2, Value * param_3, Value * param_4)
void thiscall HandleUiaPropertyChangingListener(Element * this, PropertyInfo * param_1)
void thiscall HandleUiaEventListener(Element * this, Event * param_1)
Element * thiscall GetUiaFocusDelegate(Element * this)
void thiscall AddRef(ClassInfoBase * this)
int thiscall Release(ClassInfoBase * this)
PropertyInfo * thiscall EnumPropertyInfo(ClassInfoBase * this, uint param_1)
PropertyInfo * thiscall GetByClassIndex(ClassInfoBase * this, uint param_1)
uint thiscall GetPICount(ClassInfoBase * this)
uint thiscall GetGlobalIndex(ClassInfoBase * this)
ushort * thiscall GetName(ClassInfoBase * this)
bool thiscall IsValidProperty(ClassInfoBase * this, PropertyInfo * param_1)
bool thiscall IsSubclassOf(ClassInfoBase * this, IClassInfo * param_1)
HINSTANCE__ * thiscall GetModule(ClassInfoBase * this)
bool thiscall IsGlobal(ClassInfoBase * this)
void thiscall AddChild(ClassInfoBase * this)
void thiscall RemoveChild(ClassInfoBase * this)
int thiscall GetChildren(ClassInfoBase * this)
void thiscall AssertPIZeroRef(ClassInfoBase * this)
bool thiscall GetKeyFocused(Element * this)
void thiscall RemoveTooltip(Element * this, Element * param_1)
void thiscall ActivateTooltip(Element * this, Element * param_1, ulong param_2)
void thiscall UpdateTooltip(Element * this, Element * param_1)
bool thiscall IsContentProtected(Element * this)
bool thiscall IsRTLReading(Element * this)
Value * cdecl GetIntZero(void)
Value * cdecl GetStringNull(void)
void thiscall OnPropertyChanged(AccessibleButton * this, PropertyInfo * param_1, int param_2, Value * param_3, Value * param_4)
void thiscall OnEvent(HWNDElement * this, Event * param_1)
void thiscall OnInput(HWNDElement * this, InputEvent * param_1)
void thiscall OnWmSettingChanged(HWNDElement * this, __uint64 param_1, __int64 param_2)
void thiscall OnInput(Button * this, InputEvent * param_1)
long thiscall DefaultAction(Button * this)
bool thiscall OnLostDialogFocus(Button * this, IDialogElement * param_1)
bool thiscall OnReceivedDialogFocus(Button * this, IDialogElement * param_1)
void thiscall OnPropertyChanged(HWNDElement * this, PropertyInfo * param_1, int param_2, Value * param_3, Value * param_4)
void thiscall OnGroupChanged(HWNDElement * this, int param_1, bool param_2)
void thiscall OnDestroy(HWNDElement * this)
void thiscall UpdateTooltip(HWNDElement * this, Element * param_1)
void thiscall ActivateTooltip(HWNDElement * this, Element * param_1, ulong param_2)
void thiscall RemoveTooltip(HWNDElement * this, Element * param_1)
long thiscall GetAccessibleImpl(HWNDElement * this, IAccessible * * param_1)
void thiscall OnThemeChanged(HWNDElement * this, ThemeChangedEvent * param_1)
void thiscall OnImmersiveColorSchemeChanged(HWNDElement * this)
void thiscall OnNoChildWithShortcutFound(HWNDElement * this, KeyboardEvent * param_1)
void thiscall OnWmThemeChanged(HWNDElement * this, __uint64 param_1, __int64 param_2)
void thiscall OnCompositionChanged(HWNDElement * this)
long thiscall CreateStyleParser(HWNDElement * this, DUIXmlParser * * param_1)
__int64 thiscall WndProc(HWNDElement * this, HWND__ * param_1, uint param_2, __uint64 param_3, __int64 param_4)
void thiscall GetWindowClassNameAndStyle(HWNDElement * this, ushort * * param_1, uint * param_2)
void thiscall _OnUIStateChanged(HWNDElement * this, ushort param_1, ushort param_2)
void thiscall OnGetDlgCode(HWNDElement * this, tagMSG * param_1, __int64 * param_2)
HWND__ * thiscall CreateHostWindow(NativeHWNDHost * this, ulong param_1, ushort * param_2, ushort * param_3, ulong param_4, int param_5, int param_6, int param_7, int param_8, HWND__ * param_9, HMENU__ * param_10, HINSTANCE__ * param_11, void * param_12)
HWND__ * thiscall GetHWND(HWNDElement * this)
bool thiscall IsMSAAEnabled(HWNDElement * this)
bool thiscall CanSetFocus(HWNDElement * this)
long thiscall QueryInterface(Element * this, _GUID * param_1, void * * param_2)
Value * cdecl GetBoolFalse(void)
void thiscall OnPropertyChanged(Button * this, PropertyInfo * param_1, int param_2, Value * param_3, Value * param_4)
void thiscall OnPropertyChanged(HWNDHost * this, PropertyInfo * param_1, int param_2, Value * param_3, Value * param_4)
void thiscall OnDestroy(HWNDHost * this)
void thiscall OnEvent(HWNDHost * this, Event * param_1)
void thiscall Paint(HWNDHost * this, HDC__ * param_1, tagRECT * param_2, tagRECT * param_3, tagRECT * param_4, tagRECT * param_5)
uint thiscall MessageCallback(HWNDHost * this, tagGMSG * param_1)
void thiscall OnHosted(HWNDHost * this, Element * param_1)
void thiscall OnUnHosted(HWNDHost * this, Element * param_1)
bool thiscall GetKeyFocused(HWNDHost * this)
long thiscall GetAccessibleImpl(HWNDHost * this, IAccessible * * param_1)
bool thiscall OnNotify(HWNDHost * this, uint param_1, __uint64 param_2, __int64 param_3, __int64 * param_4)
bool thiscall OnSysChar(HWNDHost * this, ushort param_1)
bool thiscall OnSinkThemeChanged(HWNDHost * this, uint param_1, __uint64 param_2, __int64 param_3, __int64 * param_4)
bool thiscall OnCtrlThemeChanged(HWNDHost * this, uint param_1, __uint64 param_2, __int64 param_3, __int64 * param_4)
void thiscall OnWindowStyleChanged(HWNDHost * this, __uint64 param_1, tagSTYLESTRUCT * param_2)
int thiscall OnAdjustWindowSize(HWNDHost * this, int param_1, int param_2, uint param_3)
void thiscall SetWindowDirection(HWNDHost * this, HWND__ * param_1)
bool thiscall EraseBkgnd(HWNDHost * this, HDC__ * param_1, __int64 * param_2)
void thiscall OnInput(HWNDHost * this, InputEvent * param_1)
void thiscall SetKeyFocus(HWNDHost * this)
bool thiscall OnMessage(HWNDHost * this, uint param_1, __uint64 param_2, __int64 param_3, __int64 * param_4)
HWND__ * thiscall GetHWND(HWNDHost * this)
Value * cdecl GetBoolTrue(void)
IClassInfo * thiscall GetClassInfoW(HWNDElement * this)
void thiscall OnAdd(Layout * this, Element * param_1, Element * * param_2, uint param_3)
void thiscall OnRemove(Layout * this, Element * param_1, Element * * param_2, uint param_3)
void thiscall OnLayoutPosChanged(Layout * this, Element * param_1, Element * param_2, int param_3, int param_4)
void thiscall Attach(Layout * this, Element * param_1)
void thiscall Detach(Layout * this, Element * param_1)
Element * thiscall GetAdjacent(Layout * this, Element * param_1, Element * param_2, int param_3, NavReference * param_4, ulong param_5)
Value * cdecl GetAtomZero(void)
IClassInfo * thiscall GetClassInfoW(Button * this)
HRESULT fastcall CoGetObjectContext(IID * riid, LPVOID * ppv)
BOOL fastcall TrySubmitThreadpoolCallback(PTP_SIMPLE_CALLBACK pfns, PVOID pv, PTP_CALLBACK_ENVIRON pcbe)
HANDLE fastcall PifMgr_CloseProperties(HANDLE hProps, UINT flOpt)
int fastcall PifMgr_GetProperties(HANDLE hProps, LPCSTR pszGroup, void * lpProps, int cbProps, UINT flOpt)
HANDLE fastcall PifMgr_OpenProperties(LPCWSTR pszApp, LPCWSTR pszPIF, UINT hInf, UINT flOpt)
int fastcall PifMgr_SetProperties(HANDLE hProps, LPCSTR pszGroup, void * lpProps, int cbProps, UINT flOpt)
BOOL fastcall DAD_AutoScroll(HWND hwnd, AUTO_SCROLL_DATA * pad, POINT * pptNow)
BOOL fastcall DAD_SetDragImage(HIMAGELIST him, POINT * pptOffset)
BOOL fastcall DAD_ShowDragImage(BOOL fShow)
int cdecl wcscmp(wchar_t * _Str1, wchar_t * _Str2)
void fastcall _CxxThrowException(void * pExceptionObject, ThrowInfo * pThrowInfo)
int cdecl memcmp(void * _Buf1, void * _Buf2, size_t _Size)
void * cdecl memcpy(void * _Dst, void * _Src, size_t _Size)
void * cdecl memmove(void * _Dst, void * _Src, size_t _Size)
HICON fastcall ExtractAssociatedIconW(HINSTANCE hInst, LPWSTR pszIconPath, WORD * piIcon)
UINT fastcall ExtractIconEx(LPCSTR lpszFile, int nIconIndex, HICON * phiconLarge, HICON * phiconSmall, UINT nIcons)
HICON fastcall ExtractIconW(HINSTANCE hInst, LPCWSTR lpszExeFileName, UINT nIconIndex)
UINT fastcall DragQueryFile(HDROP hDrop, UINT iFile, LPSTR lpszFile, UINT cch)
UINT fastcall DragQueryFileW(HDROP hDrop, UINT iFile, LPWSTR lpszFile, UINT cch)
ulong thiscall Release(CAudioMediaType * this)
LPITEMIDLIST fastcall SHSimpleIDListFromPath(LPCWSTR pszPath)
BOOL fastcall SHGetDiskFreeSpaceExW(LPCWSTR lpDirectoryName, PULARGE_INTEGER lpFreeBytesAvailableToCaller, PULARGE_INTEGER lpTotalNumberOfBytes, PULARGE_INTEGER lpTotalNumberOfFreeBytes)
HRESULT fastcall SHGetMalloc(IMalloc * * ppMalloc)
BOOL fastcall PathIsExe(LPCWSTR pszPath)
BOOL fastcall DAD_DragMove(POINT pt)
UINT_PTR fastcall SHAppBarMessage(DWORD dwMessage, PAPPBARDATA pData)
BOOL fastcall SHGetSpecialFolderPathA(HWND hwnd, LPSTR pszPath, int csidl, BOOL fCreate)
BOOL fastcall Shell_NotifyIcon(DWORD dwMessage, PNOTIFYICONDATAA lpData)
LPITEMIDLIST fastcall ILCreateFromPath(LPCWSTR pszPath)
HRESULT fastcall ILSaveToStream(IStream * pstm, LPCITEMIDLIST pidl)
int fastcall SHGetIconOverlayIndexW(LPCWSTR pszIconPath, int iIconIndex)
BOOL fastcall SHELL32_SHGetUserNameW(LPWSTR lpBuffer, LPDWORD pcbBuffer)
void fastcall SHGetSettings(SHELLFLAGSTATE * psfs, DWORD dwMask)
HRESULT fastcall Shell_NotifyIconGetRect(NOTIFYICONIDENTIFIER * identifier, RECT * iconLocation)
void thiscall OnWmSettingChanged(HWNDElement * this, __uint64 param_1, __int64 param_2)
long thiscall Release(UMSSchedulerProxy * this)
ulong thiscall Release(_AfxBindHost * this)
ulong thiscall Release(CAudioMediaType * this)
ulong thiscall Release(CAudioMediaType * this)
HRESULT fastcall SHCreateStdEnumFmtEtc(UINT cfmt, FORMATETC * afmt, IEnumFORMATETC * * ppenumFormatEtc)
BOOL fastcall WriteCabinetState(CABINETSTATE * pcs)
DWORD fastcall DoEnvironmentSubstA(LPSTR szString, UINT cchString)
DWORD fastcall DoEnvironmentSubstW(LPWSTR szString, UINT cchString)
HICON fastcall ExtractAssociatedIconA(HINSTANCE hInst, LPSTR pszIconPath, WORD * piIcon)
HICON fastcall ExtractAssociatedIconExA(HINSTANCE hInst, LPSTR pszIconPath, WORD * piIconIndex, WORD * piIconId)
HICON fastcall ExtractAssociatedIconExW(HINSTANCE hInst, LPWSTR pszIconPath, WORD * piIconIndex, WORD * piIconId)
HICON fastcall ExtractIconA(HINSTANCE hInst, LPCSTR lpszExeFileName, UINT nIconIndex)
int fastcall PickIconDlg(HWND hwnd, LPWSTR pszIconPath, UINT cchIconPath, int * piIconIndex)
HGLOBAL fastcall DragFinish(HGLOBAL hMem)
BOOL fastcall DragQueryPoint(HDROP hDrop, LPPOINT lppt)
void fastcall DebugBreak(void)
void * thiscall `scalar_deleting_destructor'(exception * this, uint param_1)
HRESULT fastcall FID_conflict:StringVPrintfWorkerW(STRSAFE_LPWSTR pszDest, size_t cchDest, size_t * pcchNewDestLength, STRSAFE_LPCWSTR pszFormat, va_list argList)
HINSTANCE fastcall ShellExecuteA(HWND hwnd, LPCSTR lpOperation, LPCSTR lpFile, LPCSTR lpParameters, LPCSTR lpDirectory, INT nShowCmd)
BOOL fastcall ShellExecuteEx(SHELLEXECUTEINFOA * pExecInfo)
BOOL fastcall ShellExecuteExW(SHELLEXECUTEINFOW * pExecInfo)
HINSTANCE fastcall ShellExecuteW(HWND hwnd, LPCWSTR lpOperation, LPCWSTR lpFile, LPCWSTR lpParameters, LPCWSTR lpDirectory, INT nShowCmd)
HRESULT fastcall PropVariantClear(PROPVARIANT * pvar)
BOOL fastcall SHObjectProperties(HWND hwnd, DWORD shopObjectType, PCWSTR pszObjectName, PCWSTR pszPropertyPage)
HRESULT fastcall StringCopyWorkerA(STRSAFE_LPSTR pszDest, size_t cchDest, size_t * pcchNewDestLength, STRSAFE_PCNZCH pszSrc, size_t cchToCopy)
BOOL fastcall DAD_DragEnterEx(HWND hwndTarget, POINT ptStart)
HRESULT fastcall SHEnumerateUnreadMailAccountsW(HKEY hKeyUser, DWORD dwIndex, LPWSTR pszMailAddress, int cchMailAddress)
BOOL fastcall SHFindFiles(LPCITEMIDLIST pidlFolder, LPCITEMIDLIST pidlSaveFile)
BOOL fastcall SHGetPathFromIDList(LPCITEMIDLIST pidl, LPSTR pszPath)
HRESULT fastcall SHGetRealIDL(IShellFolder * psf, LPCITEMIDLIST pidlSimple, LPITEMIDLIST * ppidlReal)
HRESULT fastcall SHGetUnreadMailCountW(HKEY hKeyUser, LPCWSTR pszMailAddress, DWORD * pdwCount, FILETIME * pFileTime, LPWSTR pszShellExecuteCommand, int cchShellExecuteCommand)
HRESULT fastcall SHIsFileAvailableOffline(LPCWSTR pwszPath, LPDWORD pdwStatus)
HRESULT fastcall SHLoadNonloadedIconOverlayIdentifiers(void)
HRESULT fastcall SHSetUnreadMailCountW(LPCWSTR pszMailAddress, DWORD dwCount, LPCWSTR pszShellExecuteCommand)
DWORD fastcall SHFormatDrive(HWND hwnd, UINT drive, UINT fmtID, UINT options)
HRESULT fastcall SHCreateItemFromRelativeName(IShellItem * psiParent, PCWSTR pszName, IBindCtx * pbc, IID * riid, void * * ppv)
HRESULT fastcall SHGetDataFromIDListA(IShellFolder * psf, LPCITEMIDLIST pidl, int nFormat, void * pv, int cb)
DWORD_PTR fastcall SHGetFileInfo(LPCSTR pszPath, DWORD dwFileAttributes, SHFILEINFOA * psfi, UINT cbFileInfo, UINT uFlags)
int fastcall SHMapPIDLToSystemImageListIndex(IShellFolder * pshf, LPCITEMIDLIST pidl, int * piIndexSel)
ulong thiscall Release(_AfxBindHost * this)
HRESULT fastcall CDefFolderMenu_Create2(LPCITEMIDLIST pidlFolder, HWND hwnd, UINT cidl, LPCITEMIDLIST * apidl, IShellFolder * psf, LPFNDFMCALLBACK pfn, UINT nKeys, HKEY * ahkeys, IContextMenu * * ppcm)
HRESULT fastcall CIDLData_CreateFromIDArray(LPCITEMIDLIST pidlFolder, UINT cidl, LPCITEMIDLIST * apidl, IDataObject * * ppdtobj)
void fastcall PathGetShortPath(LPWSTR pszLongPath)
BOOL fastcall PathIsSlowA(LPCSTR pszFile, DWORD dwAttr)
BOOL fastcall PathIsSlowW(LPCWSTR pszFile, DWORD dwAttr)
BOOL fastcall PathMakeUniqueName(LPWSTR pszUniqueName, UINT cchMax, LPCWSTR pszTemplate, LPCWSTR pszLongPlate, LPCWSTR pszDir)
void fastcall PathQualify(LPWSTR psz)
int fastcall PathResolve(LPWSTR lpszPath, PZPCWSTR dirs, UINT fFlags)
BOOL fastcall PathYetAnotherMakeUniqueName(LPWSTR pszUniqueName, LPCWSTR pszPath, LPCWSTR pszShort, LPCWSTR pszFileSpec)
BOOL fastcall DAD_DragEnterEx2(HWND hwndTarget, POINT ptStart, IDataObject * pdtObject)
BOOL fastcall DAD_DragLeave(void)
HRESULT fastcall SHDoDragDrop(HWND hwnd, IDataObject * pdata, IDropSource * pdsrc, DWORD dwEffect, DWORD * pdwEffect)
int fastcall RestartDialog(HWND hwnd, LPCWSTR lpPrompt, DWORD dwReturn)
HRESULT fastcall DllInstall(BOOL bInstall, LPCWSTR pszCmdLine)
HRESULT fastcall SHLoadInProc(IID * rclsid)
HRESULT fastcall SHDefExtractIconA(LPCSTR pszIconFile, int iIndex, UINT uFlags, HICON * phiconLarge, HICON * phiconSmall, UINT nIconSize)
HINSTANCE fastcall FindExecutableA(LPCSTR lpFile, LPCSTR lpDirectory, LPSTR lpResult)
HINSTANCE fastcall FindExecutableW(LPCWSTR lpFile, LPCWSTR lpDirectory, LPWSTR lpResult)
BOOL fastcall SHValidateUNC(HWND hwndOwner, LPWSTR pszFile, UINT fConnect)
BOOL fastcall GetFileNameFromBrowse(HWND hwnd, LPWSTR pszFilePath, UINT cchFilePath, LPCWSTR pszWorkingDir, LPCWSTR pszDefExt, LPCWSTR pszFilters, LPCWSTR pszTitle)
LPITEMIDLIST fastcall ILAppendID(LPITEMIDLIST pidl, LPCSHITEMID pmkid, BOOL fAppend)
LPITEMIDLIST fastcall ILCreateFromPathA(LPCSTR pszPath)
HRESULT fastcall SHILCreateFromPath(LPCWSTR pszPath, LPITEMIDLIST * ppidl, DWORD * rgfInOut)
int fastcall SHGetIconOverlayIndexA(LPCSTR pszIconPath, int iIconIndex)
HRESULT fastcall SHAddDefaultPropertiesByExt(PCWSTR pszExt, IPropertyStore * pPropStore)
HRESULT fastcall SHCreateDefaultPropertiesOp(IShellItem * psi, IFileOperation * * ppFileOp)
HRESULT fastcall SHSetDefaultProperties(HWND hwnd, IShellItem * psi, DWORD dwFileOpFlags, IFileOperationProgressSink * pfops)
UINT fastcall SHAddFromPropSheetExtArray(HPSXA hpsxa, LPFNADDPROPSHEETPAGE lpfnAddPage, LPARAM lParam)
HPSXA fastcall SHCreatePropSheetExtArray(HKEY hKey, LPCWSTR pszSubKey, UINT max_iface)
void fastcall SHDestroyPropSheetExtArray(HPSXA hpsxa)
UINT fastcall SHReplaceFromPropSheetExtArray(HPSXA hpsxa, UINT uPageID, LPFNADDPROPSHEETPAGE lpfnReplaceWith, LPARAM lParam)
LPITEMIDLIST fastcall SHBrowseForFolder(LPBROWSEINFOA lpbi)
LPITEMIDLIST fastcall SHBrowseForFolderW(LPBROWSEINFOW lpbi)
HRESULT fastcall SHCreateDefaultExtractIcon(IID * riid, void * * ppv)
ulong thiscall Release(_AfxBindHost * this)
ulong thiscall Release(_AfxBindHost * this)
HRESULT fastcall SHCreateQueryCancelAutoPlayMoniker(IMoniker * * ppmoniker)
HRESULT fastcall SHCreateShellFolderViewEx(LPCSFV pcsfv, IShellView * * ppsv)
LRESULT fastcall SHShellFolderView_Message(HWND hwndMain, UINT uMsg, LPARAM lParam)
BOOL fastcall SHELL32_GetFileNameFromBrowse(HWND hwnd, LPWSTR pszFilePath, UINT cchFilePath, LPCWSTR pszWorkingDir, LPCWSTR pszDefExt, LPCWSTR pszFilters, LPCWSTR pszTitle)
HRESULT fastcall SHStartNetConnectionDialogW(HWND hwnd, LPCWSTR pszRemoteName, DWORD dwType)
ulong thiscall Release(_AfxBindHost * this)
IContextMenu * fastcall SHFind_InitMenuPopup(HMENU hmenu, HWND hwndOwner, UINT idCmdFirst, UINT idCmdLast)
BOOL fastcall SHOpenPropSheetW(LPCWSTR pszCaption, HKEY * ahkeys, UINT cikeys, CLSID * pclsidDefault, IDataObject * pdtobj, IShellBrowser * psb, LPCWSTR pStartPage)
INT fastcall ShellAboutA(HWND hWnd, LPCSTR szApp, LPCSTR szOtherStuff, HICON hIcon)
INT fastcall ShellAboutW(HWND hWnd, LPCWSTR szApp, LPCWSTR szOtherStuff, HICON hIcon)
ulong thiscall Release(_AfxBindHost * this)
ulong thiscall Release(_AfxBindHost * this)
int fastcall StrCmpICW(LPCWSTR pszStr1, LPCWSTR pszStr2)
int cdecl InlineIsEqualUnknown(_GUID * param_1)
int fastcall StrCmpIW(LPCWSTR psz1, LPCWSTR psz2)
int fastcall StrCmpIW(LPCWSTR psz1, LPCWSTR psz2)
ulong thiscall Release(_AfxBindHost * this)
ulong thiscall Release(_AfxBindHost * this)
ulong thiscall Release(_AfxBindHost * this)
ulong thiscall Release(_AfxBindHost * this)
ulong thiscall Release(_AfxBindHost * this)
long thiscall Release(UMSSchedulerProxy * this)
ulong thiscall Release(_AfxBindHost * this)
int fastcall StrCmpW(LPCWSTR psz1, LPCWSTR psz2)
long thiscall Release(UMSSchedulerProxy * this)
ulong thiscall Release(_AfxBindHost * this)
long thiscall Release(UMSSchedulerProxy * this)
ulong thiscall Release(CAudioMediaType * this)
ulong thiscall Release(CImageStream * this)
HINSTANCE__ * cdecl LoadMUIFile(HINSTANCE__ * param_1, ushort * param_2, ushort * param_3, ushort * param_4)
void * thiscall `scalar_deleting_destructor'(COleLinkingDoc * this, uint param_1)
void * thiscall `scalar_deleting_destructor'(CWinApp * this, uint param_1)
ulong thiscall Release(CImageStream * this)